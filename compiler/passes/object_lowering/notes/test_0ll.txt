; ModuleID = 'all_in_one_lowered.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"struct.objectir::FloatType"*, %"struct.objectir::FloatType"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"struct.objectir::Type"**, i64, %"struct.objectir::Type"**, i8** }
%"struct.objectir::Type" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"struct.objectir::Type.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"struct.objectir::Type.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"struct.objectir::FloatType" = type { %"struct.objectir::Type.base", [4 x i8] }
%"struct.objectir::ObjectType" = type { %"struct.objectir::Type.base", %"class.std::vector.3" }
%"class.std::vector.3" = type { %"struct.std::_Vector_base.4" }
%"struct.std::_Vector_base.4" = type { %"struct.std::_Vector_base<objectir::Type *, std::allocator<objectir::Type *> >::_Vector_impl" }
%"struct.std::_Vector_base<objectir::Type *, std::allocator<objectir::Type *> >::_Vector_impl" = type { %"struct.objectir::Type"**, %"struct.objectir::Type"**, %"struct.objectir::Type"** }
%"struct.objectir::ArrayType" = type { %"struct.objectir::Type.base", %"struct.objectir::Type"* }
%"struct.objectir::IntegerType" = type <{ %"struct.objectir::Type.base", [4 x i8], i64, i8, [7 x i8] }>
%"struct.objectir::Object" = type { %"struct.objectir::Type"*, %"class.std::vector" }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl" }
%"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl" = type { %"struct.objectir::Field"**, %"struct.objectir::Field"**, %"struct.objectir::Field"** }
%"struct.objectir::Field" = type { i32 (...)**, %"struct.objectir::Type"* }
%"struct.objectir::ObjectField" = type { %"struct.objectir::Field", %"struct.objectir::Object"* }
%"struct.objectir::IntegerField" = type { %"struct.objectir::Field", i64 }
%"struct.objectir::FloatField" = type <{ %"struct.objectir::Field", float, [4 x i8] }>
%"struct.objectir::DoubleField" = type { %"struct.objectir::Field", double }
%"struct.objectir::Array" = type { %"struct.objectir::Object", i64 }
%"struct.objectir::Union" = type { %"struct.objectir::Object", %"class.std::vector" }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }
%"class.__gnu_cxx::__normal_iterator.8" = type { %"struct.objectir::Type"** }
%"class.__gnu_cxx::__normal_iterator" = type { %"struct.objectir::Field"** }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

$_ZNSt6vectorIPN8objectir4TypeESaIS2_EE5beginEv = comdat any

$_ZNSt6vectorIPN8objectir4TypeESaIS2_EE3endEv = comdat any

$_ZN9__gnu_cxxneIPPN8objectir4TypeESt6vectorIS3_SaIS3_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPPN8objectir4TypeESt6vectorIS3_SaIS3_EEEdeEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPPN8objectir4TypeESt6vectorIS3_SaIS3_EEEppEv = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPPN8objectir4TypeESt6vectorIS3_SaIS3_EEE4baseEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPPN8objectir4TypeESt6vectorIS3_SaIS3_EEEC2ERKS4_ = comdat any

$_ZNSt6vectorIPN8objectir5FieldESaIS2_EE5beginEv = comdat any

$_ZNSt6vectorIPN8objectir5FieldESaIS2_EE3endEv = comdat any

$_ZN9__gnu_cxxneIPPN8objectir5FieldESt6vectorIS3_SaIS3_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPPN8objectir5FieldESt6vectorIS3_SaIS3_EEEdeEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPPN8objectir5FieldESt6vectorIS3_SaIS3_EEEppEv = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPPN8objectir5FieldESt6vectorIS3_SaIS3_EEE4baseEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPPN8objectir5FieldESt6vectorIS3_SaIS3_EEEC2ERKS4_ = comdat any

$_ZNSt6vectorIPN8objectir4TypeESaIS2_EEC2Ev = comdat any

$_ZNSt12_Vector_baseIPN8objectir4TypeESaIS2_EEC2Ev = comdat any

$__clang_call_terminate = comdat any

$_ZNSt12_Vector_baseIPN8objectir4TypeESaIS2_EE12_Vector_implC2Ev = comdat any

$_ZNSaIPN8objectir4TypeEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIPN8objectir4TypeEEC2Ev = comdat any

$_ZNSt6vectorIPN8objectir4TypeESaIS2_EED2Ev = comdat any

$_ZNSt12_Vector_baseIPN8objectir4TypeESaIS2_EE19_M_get_Tp_allocatorEv = comdat any

$_ZSt8_DestroyIPPN8objectir4TypeES2_EvT_S4_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseIPN8objectir4TypeESaIS2_EED2Ev = comdat any

$_ZNSt12_Vector_baseIPN8objectir4TypeESaIS2_EE13_M_deallocateEPS2_m = comdat any

$_ZNSt12_Vector_baseIPN8objectir4TypeESaIS2_EE12_Vector_implD2Ev = comdat any

$_ZNSaIPN8objectir4TypeEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIPN8objectir4TypeEED2Ev = comdat any

$_ZNSt16allocator_traitsISaIPN8objectir4TypeEEE10deallocateERS3_PS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIPN8objectir4TypeEE10deallocateEPS3_m = comdat any

$_ZSt8_DestroyIPPN8objectir4TypeEEvT_S4_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPPN8objectir4TypeEEEvT_S6_ = comdat any

$_ZNSt6vectorIPN8objectir4TypeESaIS2_EE9push_backERKS2_ = comdat any

$_ZNSt16allocator_traitsISaIPN8objectir4TypeEEE9constructIS2_JRKS2_EEEvRS3_PT_DpOT0_ = comdat any

$_ZNSt6vectorIPN8objectir4TypeESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_ = comdat any

$_ZNKSt6vectorIPN8objectir4TypeESaIS2_EE12_M_check_lenEmPKc = comdat any

$_ZN9__gnu_cxxmiIPPN8objectir4TypeESt6vectorIS3_SaIS3_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_ = comdat any

$_ZNSt12_Vector_baseIPN8objectir4TypeESaIS2_EE11_M_allocateEm = comdat any

$_ZSt7forwardIRKPN8objectir4TypeEEOT_RNSt16remove_referenceIS5_E4typeE = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPPN8objectir4TypeES3_SaIS2_EET0_T_S6_S5_RT1_ = comdat any

$_ZNSt16allocator_traitsISaIPN8objectir4TypeEEE7destroyIS2_EEvRS3_PT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIPN8objectir4TypeEE7destroyIS3_EEvPT_ = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPN8objectir4TypeESt13move_iteratorIPS2_EET0_PT_ = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPPN8objectir4TypeEES4_S3_ET0_T_S7_S6_RSaIT1_E = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPPN8objectir4TypeEES4_ET0_T_S7_S6_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPPN8objectir4TypeEES6_EET0_T_S9_S8_ = comdat any

$_ZSt4copyISt13move_iteratorIPPN8objectir4TypeEES4_ET0_T_S7_S6_ = comdat any

$_ZSt12__miter_baseIPPN8objectir4TypeEEDTcl12__miter_basecldtfp_4baseEEESt13move_iteratorIT_E = comdat any

$_ZSt14__copy_move_a2ILb1EPPN8objectir4TypeES3_ET1_T0_S5_S4_ = comdat any

$_ZSt12__niter_baseIPPN8objectir4TypeEET_S4_ = comdat any

$_ZSt13__copy_move_aILb1EPPN8objectir4TypeES3_ET1_T0_S5_S4_ = comdat any

$_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIPN8objectir4TypeEEEPT_PKS6_S9_S7_ = comdat any

$_ZNKSt13move_iteratorIPPN8objectir4TypeEE4baseEv = comdat any

$_ZSt12__miter_baseIPPN8objectir4TypeEET_S4_ = comdat any

$_ZNSt13move_iteratorIPPN8objectir4TypeEEC2ES3_ = comdat any

$_ZNSt16allocator_traitsISaIPN8objectir4TypeEEE8allocateERS3_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIPN8objectir4TypeEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIPN8objectir4TypeEE8max_sizeEv = comdat any

$_ZNKSt6vectorIPN8objectir4TypeESaIS2_EE8max_sizeEv = comdat any

$_ZNKSt6vectorIPN8objectir4TypeESaIS2_EE4sizeEv = comdat any

$_ZSt3maxImERKT_S2_S2_ = comdat any

$_ZNKSt12_Vector_baseIPN8objectir4TypeESaIS2_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt16allocator_traitsISaIPN8objectir4TypeEEE8max_sizeERKS3_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIPN8objectir4TypeEE9constructIS3_JRKS3_EEEvPT_DpOT0_ = comdat any

$_ZNSt6vectorIPN8objectir5FieldESaIS2_EEC2Ev = comdat any

$_ZNSt6vectorIPN8objectir5FieldESaIS2_EE9push_backERKS2_ = comdat any

$_ZNSt6vectorIPN8objectir5FieldESaIS2_EED2Ev = comdat any

$_ZNSt12_Vector_baseIPN8objectir5FieldESaIS2_EE19_M_get_Tp_allocatorEv = comdat any

$_ZSt8_DestroyIPPN8objectir5FieldES2_EvT_S4_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseIPN8objectir5FieldESaIS2_EED2Ev = comdat any

$_ZNSt12_Vector_baseIPN8objectir5FieldESaIS2_EE13_M_deallocateEPS2_m = comdat any

$_ZNSt12_Vector_baseIPN8objectir5FieldESaIS2_EE12_Vector_implD2Ev = comdat any

$_ZNSaIPN8objectir5FieldEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIPN8objectir5FieldEED2Ev = comdat any

$_ZNSt16allocator_traitsISaIPN8objectir5FieldEEE10deallocateERS3_PS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIPN8objectir5FieldEE10deallocateEPS3_m = comdat any

$_ZSt8_DestroyIPPN8objectir5FieldEEvT_S4_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPPN8objectir5FieldEEEvT_S6_ = comdat any

$_ZNSt16allocator_traitsISaIPN8objectir5FieldEEE9constructIS2_JRKS2_EEEvRS3_PT_DpOT0_ = comdat any

$_ZNSt6vectorIPN8objectir5FieldESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_ = comdat any

$_ZNKSt6vectorIPN8objectir5FieldESaIS2_EE12_M_check_lenEmPKc = comdat any

$_ZN9__gnu_cxxmiIPPN8objectir5FieldESt6vectorIS3_SaIS3_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_ = comdat any

$_ZNSt12_Vector_baseIPN8objectir5FieldESaIS2_EE11_M_allocateEm = comdat any

$_ZSt7forwardIRKPN8objectir5FieldEEOT_RNSt16remove_referenceIS5_E4typeE = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPPN8objectir5FieldES3_SaIS2_EET0_T_S6_S5_RT1_ = comdat any

$_ZNSt16allocator_traitsISaIPN8objectir5FieldEEE7destroyIS2_EEvRS3_PT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIPN8objectir5FieldEE7destroyIS3_EEvPT_ = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPN8objectir5FieldESt13move_iteratorIPS2_EET0_PT_ = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPPN8objectir5FieldEES4_S3_ET0_T_S7_S6_RSaIT1_E = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPPN8objectir5FieldEES4_ET0_T_S7_S6_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPPN8objectir5FieldEES6_EET0_T_S9_S8_ = comdat any

$_ZSt4copyISt13move_iteratorIPPN8objectir5FieldEES4_ET0_T_S7_S6_ = comdat any

$_ZSt12__miter_baseIPPN8objectir5FieldEEDTcl12__miter_basecldtfp_4baseEEESt13move_iteratorIT_E = comdat any

$_ZSt14__copy_move_a2ILb1EPPN8objectir5FieldES3_ET1_T0_S5_S4_ = comdat any

$_ZSt12__niter_baseIPPN8objectir5FieldEET_S4_ = comdat any

$_ZSt13__copy_move_aILb1EPPN8objectir5FieldES3_ET1_T0_S5_S4_ = comdat any

$_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIPN8objectir5FieldEEEPT_PKS6_S9_S7_ = comdat any

$_ZNKSt13move_iteratorIPPN8objectir5FieldEE4baseEv = comdat any

$_ZSt12__miter_baseIPPN8objectir5FieldEET_S4_ = comdat any

$_ZNSt13move_iteratorIPPN8objectir5FieldEEC2ES3_ = comdat any

$_ZNSt16allocator_traitsISaIPN8objectir5FieldEEE8allocateERS3_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIPN8objectir5FieldEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIPN8objectir5FieldEE8max_sizeEv = comdat any

$_ZNKSt6vectorIPN8objectir5FieldESaIS2_EE8max_sizeEv = comdat any

$_ZNKSt6vectorIPN8objectir5FieldESaIS2_EE4sizeEv = comdat any

$_ZNKSt12_Vector_baseIPN8objectir5FieldESaIS2_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt16allocator_traitsISaIPN8objectir5FieldEEE8max_sizeERKS3_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIPN8objectir5FieldEE9constructIS3_JRKS3_EEEvPT_DpOT0_ = comdat any

$_ZNSt12_Vector_baseIPN8objectir5FieldESaIS2_EEC2Ev = comdat any

$_ZNSt12_Vector_baseIPN8objectir5FieldESaIS2_EE12_Vector_implC2Ev = comdat any

$_ZNSaIPN8objectir5FieldEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIPN8objectir5FieldEEC2Ev = comdat any

$_ZNSt6vectorIPN8objectir5FieldESaIS2_EE9push_backEOS2_ = comdat any

$_ZSt4moveIRPN8objectir5FieldEEONSt16remove_referenceIT_E4typeEOS5_ = comdat any

$_ZNSt6vectorIPN8objectir5FieldESaIS2_EE12emplace_backIJS2_EEEvDpOT_ = comdat any

$_ZSt7forwardIPN8objectir5FieldEEOT_RNSt16remove_referenceIS3_E4typeE = comdat any

$_ZNSt16allocator_traitsISaIPN8objectir5FieldEEE9constructIS2_JS2_EEEvRS3_PT_DpOT0_ = comdat any

$_ZNSt6vectorIPN8objectir5FieldESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIPN8objectir5FieldEE9constructIS3_JS3_EEEvPT_DpOT0_ = comdat any

$_ZNSt6vectorIPN8objectir5FieldESaIS2_EE2atEm = comdat any

$_ZNKSt6vectorIPN8objectir5FieldESaIS2_EE14_M_range_checkEm = comdat any

$_ZNSt6vectorIPN8objectir5FieldESaIS2_EEixEm = comdat any

$_ZTIN8objectir5FieldE = comdat any

$_ZTSN8objectir5FieldE = comdat any

$_ZTIN8objectir4TypeE = comdat any

$_ZTSN8objectir4TypeE = comdat any

$_ZTVN8objectir4TypeE = comdat any

$_ZTVN8objectir5FieldE = comdat any

@llvm.global_ctors = appending global [4 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_main.cpp, i8* null }, { i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_fields.cpp, i8* null }, { i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_accessor.cpp, i8* null }, { i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_objects.cpp, i8* null }]
@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external hidden global i8
@_ZTVN8objectir12IntegerFieldE = dso_local unnamed_addr constant { [3 x i8*] } { [3 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN8objectir12IntegerFieldE to i8*), i8* bitcast (void (%"class.std::__cxx11::basic_string"*, %"struct.objectir::IntegerField"*)* @_ZN8objectir12IntegerField8toStringB5cxx11Ev to i8*)] }, align 8
@_ZTIN8objectir12IntegerFieldE = dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @_ZTSN8objectir12IntegerFieldE, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTIN8objectir5FieldE to i8*) }, align 8
@.str = private unnamed_addr constant [8 x i8] c"integer\00", align 1
@_ZTVN10__cxxabiv120__si_class_type_infoE = external dso_local global i8*
@_ZTSN8objectir12IntegerFieldE = dso_local constant [26 x i8] c"N8objectir12IntegerFieldE\00", align 1
@_ZTIN8objectir5FieldE = linkonce_odr dso_local constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @_ZTSN8objectir5FieldE, i32 0, i32 0) }, comdat, align 8
@_ZTVN10__cxxabiv117__class_type_infoE = external dso_local global i8*
@_ZTSN8objectir5FieldE = linkonce_odr dso_local constant [18 x i8] c"N8objectir5FieldE\00", comdat, align 1
@_ZTVN8objectir10FloatFieldE = dso_local unnamed_addr constant { [3 x i8*] } { [3 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN8objectir10FloatFieldE to i8*), i8* bitcast (void (%"class.std::__cxx11::basic_string"*, %"struct.objectir::FloatField"*)* @_ZN8objectir10FloatField8toStringB5cxx11Ev to i8*)] }, align 8
@_ZTIN8objectir10FloatFieldE = dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @_ZTSN8objectir10FloatFieldE, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTIN8objectir5FieldE to i8*) }, align 8
@.str.1 = private unnamed_addr constant [6 x i8] c"float\00", align 1
@_ZTSN8objectir10FloatFieldE = dso_local constant [24 x i8] c"N8objectir10FloatFieldE\00", align 1
@_ZTVN8objectir11DoubleFieldE = dso_local unnamed_addr constant { [3 x i8*] } { [3 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN8objectir11DoubleFieldE to i8*), i8* bitcast (void (%"class.std::__cxx11::basic_string"*, %"struct.objectir::DoubleField"*)* @_ZN8objectir11DoubleField8toStringB5cxx11Ev to i8*)] }, align 8
@_ZTIN8objectir11DoubleFieldE = dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @_ZTSN8objectir11DoubleFieldE, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTIN8objectir5FieldE to i8*) }, align 8
@.str.2 = private unnamed_addr constant [7 x i8] c"double\00", align 1
@_ZTSN8objectir11DoubleFieldE = dso_local constant [25 x i8] c"N8objectir11DoubleFieldE\00", align 1
@_ZTVN8objectir11ObjectFieldE = dso_local unnamed_addr constant { [3 x i8*] } { [3 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN8objectir11ObjectFieldE to i8*), i8* bitcast (void (%"class.std::__cxx11::basic_string"*, %"struct.objectir::ObjectField"*)* @_ZN8objectir11ObjectField8toStringB5cxx11Ev to i8*)] }, align 8
@_ZTIN8objectir11ObjectFieldE = dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @_ZTSN8objectir11ObjectFieldE, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTIN8objectir5FieldE to i8*) }, align 8
@.str.3 = private unnamed_addr constant [7 x i8] c"object\00", align 1
@_ZTSN8objectir11ObjectFieldE = dso_local constant [25 x i8] c"N8objectir11ObjectFieldE\00", align 1
@_ZTVN8objectir10ObjectTypeE = dso_local unnamed_addr constant { [3 x i8*] } { [3 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN8objectir10ObjectTypeE to i8*), i8* bitcast (void (%"class.std::__cxx11::basic_string"*, %"struct.objectir::ObjectType"*)* @_ZN8objectir10ObjectType8toStringB5cxx11Ev to i8*)] }, align 8
@_ZTIN8objectir10ObjectTypeE = dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @_ZTSN8objectir10ObjectTypeE, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTIN8objectir4TypeE to i8*) }, align 8
@.str.4 = private unnamed_addr constant [11 x i8] c"(Object: \0A\00", align 1
@.str.5 = private unnamed_addr constant [11 x i8] c"  (Field: \00", align 1
@.str.6 = private unnamed_addr constant [3 x i8] c")\0A\00", align 1
@_ZTSN8objectir10ObjectTypeE = dso_local constant [24 x i8] c"N8objectir10ObjectTypeE\00", align 1
@_ZTIN8objectir4TypeE = linkonce_odr dso_local constant { i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv117__class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @_ZTSN8objectir4TypeE, i32 0, i32 0) }, comdat, align 8
@_ZTSN8objectir4TypeE = linkonce_odr dso_local constant [17 x i8] c"N8objectir4TypeE\00", comdat, align 1
@_ZTVN8objectir9ArrayTypeE = dso_local unnamed_addr constant { [3 x i8*] } { [3 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN8objectir9ArrayTypeE to i8*), i8* bitcast (void (%"class.std::__cxx11::basic_string"*, %"struct.objectir::ArrayType"*)* @_ZN8objectir9ArrayType8toStringB5cxx11Ev to i8*)] }, align 8
@_ZTIN8objectir9ArrayTypeE = dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @_ZTSN8objectir9ArrayTypeE, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTIN8objectir4TypeE to i8*) }, align 8
@.str.11 = private unnamed_addr constant [12 x i8] c"Type: array\00", align 1
@_ZTSN8objectir9ArrayTypeE = dso_local constant [22 x i8] c"N8objectir9ArrayTypeE\00", align 1
@_ZTVN8objectir9UnionTypeE = dso_local unnamed_addr constant { [3 x i8*] } { [3 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN8objectir9UnionTypeE to i8*), i8* bitcast (void (%"class.std::__cxx11::basic_string"*, %"struct.objectir::ObjectType"*)* @_ZN8objectir9UnionType8toStringB5cxx11Ev to i8*)] }, align 8
@_ZTIN8objectir9UnionTypeE = dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @_ZTSN8objectir9UnionTypeE, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTIN8objectir4TypeE to i8*) }, align 8
@.str.12 = private unnamed_addr constant [12 x i8] c"Type: union\00", align 1
@_ZTSN8objectir9UnionTypeE = dso_local constant [22 x i8] c"N8objectir9UnionTypeE\00", align 1
@_ZTVN8objectir11IntegerTypeE = dso_local unnamed_addr constant { [3 x i8*] } { [3 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN8objectir11IntegerTypeE to i8*), i8* bitcast (void (%"class.std::__cxx11::basic_string"*, %"struct.objectir::IntegerType"*)* @_ZN8objectir11IntegerType8toStringB5cxx11Ev to i8*)] }, align 8
@_ZTIN8objectir11IntegerTypeE = dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @_ZTSN8objectir11IntegerTypeE, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTIN8objectir4TypeE to i8*) }, align 8
@.str.13 = private unnamed_addr constant [14 x i8] c"Type: integer\00", align 1
@_ZTSN8objectir11IntegerTypeE = dso_local constant [25 x i8] c"N8objectir11IntegerTypeE\00", align 1
@_ZTVN8objectir9FloatTypeE = dso_local unnamed_addr constant { [3 x i8*] } { [3 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN8objectir9FloatTypeE to i8*), i8* bitcast (void (%"class.std::__cxx11::basic_string"*, %"struct.objectir::FloatType"*)* @_ZN8objectir9FloatType8toStringB5cxx11Ev to i8*)] }, align 8
@_ZTIN8objectir9FloatTypeE = dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @_ZTSN8objectir9FloatTypeE, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTIN8objectir4TypeE to i8*) }, align 8
@.str.14 = private unnamed_addr constant [12 x i8] c"Type: float\00", align 1
@_ZTSN8objectir9FloatTypeE = dso_local constant [22 x i8] c"N8objectir9FloatTypeE\00", align 1
@_ZTVN8objectir10DoubleTypeE = dso_local unnamed_addr constant { [3 x i8*] } { [3 x i8*] [i8* null, i8* bitcast ({ i8*, i8*, i8* }* @_ZTIN8objectir10DoubleTypeE to i8*), i8* bitcast (void (%"class.std::__cxx11::basic_string"*, %"struct.objectir::FloatType"*)* @_ZN8objectir10DoubleType8toStringB5cxx11Ev to i8*)] }, align 8
@_ZTIN8objectir10DoubleTypeE = dso_local constant { i8*, i8*, i8* } { i8* bitcast (i8** getelementptr inbounds (i8*, i8** @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2) to i8*), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @_ZTSN8objectir10DoubleTypeE, i32 0, i32 0), i8* bitcast ({ i8*, i8* }* @_ZTIN8objectir4TypeE to i8*) }, align 8
@.str.15 = private unnamed_addr constant [13 x i8] c"Type: double\00", align 1
@_ZTSN8objectir10DoubleTypeE = dso_local constant [24 x i8] c"N8objectir10DoubleTypeE\00", align 1
@_ZStL8__ioinit.37 = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@_ZStL8__ioinit.23 = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@_ZStL8__ioinit.3 = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@.str.7 = private unnamed_addr constant [9 x i8] c"(Array: \00", align 1
@.str.8 = private unnamed_addr constant [8 x i8] c"(type: \00", align 1
@.str.9 = private unnamed_addr constant [12 x i8] c") (length: \00", align 1
@.str.10 = private unnamed_addr constant [4 x i8] c"))\0A\00", align 1
@_ZTVN8objectir4TypeE = linkonce_odr dso_local unnamed_addr constant { [3 x i8*] } { [3 x i8*] [i8* null, i8* bitcast ({ i8*, i8* }* @_ZTIN8objectir4TypeE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.16 = private unnamed_addr constant [26 x i8] c"vector::_M_realloc_insert\00", align 1
@_ZSt4cerr = external dso_local global %"class.std::basic_ostream", align 8
@.str.40 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.1.41 = private unnamed_addr constant [26 x i8] c"vector::_M_realloc_insert\00", align 1
@.str.17 = private unnamed_addr constant [19 x i8] c"Object type found\0A\00", align 1
@.str.1.18 = private unnamed_addr constant [20 x i8] c"Integer type found\0A\00", align 1
@.str.2.19 = private unnamed_addr constant [18 x i8] c"Float type found\0A\00", align 1
@.str.3.20 = private unnamed_addr constant [19 x i8] c"Double type found\0A\00", align 1
@_ZTVN8objectir5FieldE = linkonce_odr dso_local unnamed_addr constant { [3 x i8*] } { [3 x i8*] [i8* null, i8* bitcast ({ i8*, i8* }* @_ZTIN8objectir5FieldE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.10.24 = private unnamed_addr constant [74 x i8] c"vector::_M_range_check: __n (which is %zu) >= this->size() (which is %zu)\00", align 1
@.str.25 = private unnamed_addr constant [54 x i8] c"ERROR: Attempt to read UInt64 from non-integer field\0A\00", align 1
@.str.1.26 = private unnamed_addr constant [54 x i8] c"ERROR: Attempt to read UInt32 from non-integer field\0A\00", align 1
@.str.2.27 = private unnamed_addr constant [54 x i8] c"ERROR: Attempt to read UInt16 from non-integer field\0A\00", align 1
@.str.3.28 = private unnamed_addr constant [53 x i8] c"ERROR: Attempt to read UInt8 from non-integer field\0A\00", align 1
@.str.4.29 = private unnamed_addr constant [53 x i8] c"ERROR: Attempt to read Int64 from non-integer field\0A\00", align 1
@.str.5.30 = private unnamed_addr constant [53 x i8] c"ERROR: Attempt to read Int32 from non-integer field\0A\00", align 1
@.str.6.31 = private unnamed_addr constant [53 x i8] c"ERROR: Attempt to read Int16 from non-integer field\0A\00", align 1
@.str.7.32 = private unnamed_addr constant [52 x i8] c"ERROR: Attempt to read Int8 from non-integer field\0A\00", align 1
@.str.8.33 = private unnamed_addr constant [51 x i8] c"ERROR: Attempt to read float from non-float field\0A\00", align 1
@.str.9.34 = private unnamed_addr constant [53 x i8] c"ERROR: Attempt to read double from non-double field\0A\00", align 1

@_ZN8objectir4TypeD1Ev = dso_local unnamed_addr alias void (%"struct.objectir::Type"*), void (%"struct.objectir::Type"*)* @_ZN8objectir4TypeD2Ev
@_ZN8objectir10ObjectTypeC1Ev = dso_local unnamed_addr alias void (%"struct.objectir::ObjectType"*), void (%"struct.objectir::ObjectType"*)* @_ZN8objectir10ObjectTypeC2Ev
@_ZN8objectir9ArrayTypeC1EPNS_4TypeE = dso_local unnamed_addr alias void (%"struct.objectir::ArrayType"*, %"struct.objectir::Type"*), void (%"struct.objectir::ArrayType"*, %"struct.objectir::Type"*)* @_ZN8objectir9ArrayTypeC2EPNS_4TypeE
@_ZN8objectir9UnionTypeC1Ev = dso_local unnamed_addr alias void (%"struct.objectir::ObjectType"*), void (%"struct.objectir::ObjectType"*)* @_ZN8objectir9UnionTypeC2Ev
@_ZN8objectir11IntegerTypeC1Emb = dso_local unnamed_addr alias void (%"struct.objectir::IntegerType"*, i64, i1), void (%"struct.objectir::IntegerType"*, i64, i1)* @_ZN8objectir11IntegerTypeC2Emb
@_ZN8objectir9FloatTypeC1Ev = dso_local unnamed_addr alias void (%"struct.objectir::FloatType"*), void (%"struct.objectir::FloatType"*)* @_ZN8objectir9FloatTypeC2Ev
@_ZN8objectir10DoubleTypeC1Ev = dso_local unnamed_addr alias void (%"struct.objectir::FloatType"*), void (%"struct.objectir::FloatType"*)* @_ZN8objectir10DoubleTypeC2Ev
@_ZN8objectir6ObjectC1EPNS_4TypeE = dso_local unnamed_addr alias void (%"struct.objectir::Object"*, %"struct.objectir::Type"*), void (%"struct.objectir::Object"*, %"struct.objectir::Type"*)* @_ZN8objectir6ObjectC2EPNS_4TypeE
@_ZN8objectir11ObjectFieldC1EPNS_4TypeE = dso_local unnamed_addr alias void (%"struct.objectir::ObjectField"*, %"struct.objectir::Type"*), void (%"struct.objectir::ObjectField"*, %"struct.objectir::Type"*)* @_ZN8objectir11ObjectFieldC2EPNS_4TypeE
@_ZN8objectir12IntegerFieldC1EPNS_4TypeE = dso_local unnamed_addr alias void (%"struct.objectir::IntegerField"*, %"struct.objectir::Type"*), void (%"struct.objectir::IntegerField"*, %"struct.objectir::Type"*)* @_ZN8objectir12IntegerFieldC2EPNS_4TypeE
@_ZN8objectir10FloatFieldC1EPNS_4TypeE = dso_local unnamed_addr alias void (%"struct.objectir::FloatField"*, %"struct.objectir::Type"*), void (%"struct.objectir::FloatField"*, %"struct.objectir::Type"*)* @_ZN8objectir10FloatFieldC2EPNS_4TypeE
@_ZN8objectir11DoubleFieldC1EPNS_4TypeE = dso_local unnamed_addr alias void (%"struct.objectir::DoubleField"*, %"struct.objectir::Type"*), void (%"struct.objectir::DoubleField"*, %"struct.objectir::Type"*)* @_ZN8objectir11DoubleFieldC2EPNS_4TypeE
@_ZN8objectir5ArrayC1EPNS_4TypeEm = dso_local unnamed_addr alias void (%"struct.objectir::Array"*, %"struct.objectir::Type"*, i64), void (%"struct.objectir::Array"*, %"struct.objectir::Type"*, i64)* @_ZN8objectir5ArrayC2EPNS_4TypeEm
@_ZN8objectir5UnionC1EPNS_4TypeE = dso_local unnamed_addr alias void (%"struct.objectir::Union"*, %"struct.objectir::Type"*), void (%"struct.objectir::Union"*, %"struct.objectir::Type"*)* @_ZN8objectir5UnionC2EPNS_4TypeE
@_ZN8objectir10ObjectTypeD1Ev = dso_local unnamed_addr alias void (%"struct.objectir::ObjectType"*), void (%"struct.objectir::ObjectType"*)* @_ZN8objectir10ObjectTypeD2Ev
@_ZN8objectir9ArrayTypeD1Ev = dso_local unnamed_addr alias void (%"struct.objectir::ArrayType"*), void (%"struct.objectir::ArrayType"*)* @_ZN8objectir9ArrayTypeD2Ev
@_ZN8objectir9UnionTypeD1Ev = dso_local unnamed_addr alias void (%"struct.objectir::ObjectType"*), void (%"struct.objectir::ObjectType"*)* @_ZN8objectir9UnionTypeD2Ev
@_ZN8objectir11IntegerTypeD1Ev = dso_local unnamed_addr alias void (%"struct.objectir::IntegerType"*), void (%"struct.objectir::IntegerType"*)* @_ZN8objectir11IntegerTypeD2Ev
@_ZN8objectir9FloatTypeD1Ev = dso_local unnamed_addr alias void (%"struct.objectir::FloatType"*), void (%"struct.objectir::FloatType"*)* @_ZN8objectir9FloatTypeD2Ev
@_ZN8objectir10DoubleTypeD1Ev = dso_local unnamed_addr alias void (%"struct.objectir::FloatType"*), void (%"struct.objectir::FloatType"*)* @_ZN8objectir10DoubleTypeD2Ev
@_ZN8objectir12IntegerFieldC1EPNS_4TypeEm = dso_local unnamed_addr alias void (%"struct.objectir::IntegerField"*, %"struct.objectir::Type"*, i64), void (%"struct.objectir::IntegerField"*, %"struct.objectir::Type"*, i64)* @_ZN8objectir12IntegerFieldC2EPNS_4TypeEm
@_ZN8objectir12IntegerFieldC1Emmb = dso_local unnamed_addr alias void (%"struct.objectir::IntegerField"*, i64, i64, i1), void (%"struct.objectir::IntegerField"*, i64, i64, i1)* @_ZN8objectir12IntegerFieldC2Emmb
@_ZN8objectir10FloatFieldC1EPNS_4TypeEf = dso_local unnamed_addr alias void (%"struct.objectir::FloatField"*, %"struct.objectir::Type"*, float), void (%"struct.objectir::FloatField"*, %"struct.objectir::Type"*, float)* @_ZN8objectir10FloatFieldC2EPNS_4TypeEf
@_ZN8objectir11DoubleFieldC1EPNS_4TypeEd = dso_local unnamed_addr alias void (%"struct.objectir::DoubleField"*, %"struct.objectir::Type"*, double), void (%"struct.objectir::DoubleField"*, %"struct.objectir::Type"*, double)* @_ZN8objectir11DoubleFieldC2EPNS_4TypeEd
@_ZN8objectir11ObjectFieldC1EPNS_6ObjectE = dso_local unnamed_addr alias void (%"struct.objectir::ObjectField"*, %"struct.objectir::Object"*), void (%"struct.objectir::ObjectField"*, %"struct.objectir::Object"*)* @_ZN8objectir11ObjectFieldC2EPNS_6ObjectE
@_ZN8objectir6ObjectD1Ev = dso_local unnamed_addr alias void (%"struct.objectir::Object"*), void (%"struct.objectir::Object"*)* @_ZN8objectir6ObjectD2Ev

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_main.cpp() #0 section ".text.startup" {
entry:
  call void @__cxx_global_var_init()
  ret void
}

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init() #0 section ".text.startup" {
entry:
  call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* @_ZStL8__ioinit)
  %0 = getelementptr %"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i32 0, i32 0
  %1 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* %0, i8* @__dso_handle) #3
  ret void
}

declare dso_local void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare dso_local void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nounwind
declare dso_local i32 @__cxa_atexit(void (i8*)*, i8*, i8*) #3









; Function Attrs: noinline norecurse optnone uwtable
define dso_local i32 @main() #4 { ; WITH NO PRINTING
entry:
  ; allocate my Type* and Obj*
  %objTy = alloca %"struct.objectir::Type"*, align 8
  %myObj = alloca %"struct.objectir::Object"*, align 8
  ; alloacte field*
  %field1 = alloca %"struct.objectir::Field"*, align 8
  %field2 = alloca %"struct.objectir::Field"*, align 8
  %field3 = alloca %"struct.objectir::Field"*, align 8
  ; allocate i64*, for some reason :(
  %read1 = alloca i64, align 8
  %read2 = alloca i64, align 8
  %read3 = alloca i64, align 8

  ; get base Type*
  %call = call %"struct.objectir::Type"* @getUInt64Type()
  %call1 = call %"struct.objectir::Type"* @getUInt64Type()
  %call2 = call %"struct.objectir::Type"* @getUInt64Type()
  ; construct a new Type*
  %call3 = call %"struct.objectir::Type"* (i32, ...) 
              @getObjectType(i32 3, %"struct.objectir::Type"* %call, 
              %"struct.objectir::Type"* %call1, %"struct.objectir::Type"* %call2)
  ; store the Type* into the previously allocated Type*
  store %"struct.objectir::Type"* %call3, %"struct.objectir::Type"** %objTy, align 8
  ; >:( load the Type* back in
  %0 = load %"struct.objectir::Type"*, %"struct.objectir::Type"** %objTy, align 8
  ; build the Object*
  %call4 = call %"struct.objectir::Object"* @buildObject(%"struct.objectir::Type"* %0)
  ; store it into the previously allocated Object*
  store %"struct.objectir::Object"* %call4, %"struct.objectir::Object"** %myObj, align 8
  

  ; create fields
  ; load the Obj* ; call getObjectField ; store field* into the allocated field*
  %1 = load %"struct.objectir::Object"*, %"struct.objectir::Object"** %myObj, align 8
  %call5 = call %"struct.objectir::Field"* @getObjectField(%"struct.objectir::Object"* %1, i64 0)
  store %"struct.objectir::Field"* %call5, %"struct.objectir::Field"** %field1, align 8

  %2 = load %"struct.objectir::Object"*, %"struct.objectir::Object"** %myObj, align 8
  %call6 = call %"struct.objectir::Field"* @getObjectField(%"struct.objectir::Object"* %2, i64 1)
  store %"struct.objectir::Field"* %call6, %"struct.objectir::Field"** %field2, align 8

  %3 = load %"struct.objectir::Object"*, %"struct.objectir::Object"** %myObj, align 8
  %call7 = call %"struct.objectir::Field"* @getObjectField(%"struct.objectir::Object"* %3, i64 2)
  store %"struct.objectir::Field"* %call7, %"struct.objectir::Field"** %field3, align 8

  ; writing to fields
  ; load the field* ; call write
  %4 = load %"struct.objectir::Field"*, %"struct.objectir::Field"** %field1, align 8
  call void @writeUInt64(%"struct.objectir::Field"* %4, i64 123)
  
  %5 = load %"struct.objectir::Field"*, %"struct.objectir::Field"** %field2, align 8
  call void @writeUInt64(%"struct.objectir::Field"* %5, i64 456)
  
  %6 = load %"struct.objectir::Field"*, %"struct.objectir::Field"** %field3, align 8
  call void @writeUInt64(%"struct.objectir::Field"* %6, i64 789)

  ; reading from fields
  ; load field*, field**  ;   val = call read[Type]   ;   store val into read_loc
  %7 = load %"struct.objectir::Field"*, %"struct.objectir::Field"** %field1, align 8
  %call8 = call i64 @readUInt64(%"struct.objectir::Field"* %7)
  store i64 %call8, i64* %read1, align 8
  
  %8 = load %"struct.objectir::Field"*, %"struct.objectir::Field"** %field2, align 8
  %call9 = call i64 @readUInt64(%"struct.objectir::Field"* %8)
  store i64 %call9, i64* %read2, align 8
  
  %9 = load %"struct.objectir::Field"*, %"struct.objectir::Field"** %field3, align 8
  %call10 = call i64 @readUInt64(%"struct.objectir::Field"* %9)
  store i64 %call10, i64* %read3, align 8

  ; write to fields
  %10 = load %"struct.objectir::Field"*, %"struct.objectir::Field"** %field1, align 8
  %11 = load i64, i64* %read1, align 8
  %12 = load i64, i64* %read2, align 8
  %add = add i64 %11, %12
  call void @writeUInt64(%"struct.objectir::Field"* %10, i64 %add)
  
  %13 = load %"struct.objectir::Field"*, %"struct.objectir::Field"** %field2, align 8
  %14 = load i64, i64* %read2, align 8
  %15 = load i64, i64* %read3, align 8
  %add11 = add i64 %14, %15
  call void @writeUInt64(%"struct.objectir::Field"* %13, i64 %add11)
  
  %16 = load %"struct.objectir::Field"*, %"struct.objectir::Field"** %field3, align 8
  %17 = load i64, i64* %read3, align 8
  %18 = load i64, i64* %read1, align 8
  %add12 = add i64 %17, %18
  call void @writeUInt64(%"struct.objectir::Field"* %16, i64 %add12)
  
  ; read fields again
  ; load field*, field**  ;   val = call readType   ;   store val, read_loc
  %19 = load %"struct.objectir::Field"*, %"struct.objectir::Field"** %field1, align 8
  %call13 = call i64 @readUInt64(%"struct.objectir::Field"* %19)
  store i64 %call13, i64* %read1, align 8
  
  %20 = load %"struct.objectir::Field"*, %"struct.objectir::Field"** %field2, align 8
  %call14 = call i64 @readUInt64(%"struct.objectir::Field"* %20)
  store i64 %call14, i64* %read2, align 8
  
  %21 = load %"struct.objectir::Field"*, %"struct.objectir::Field"** %field3, align 8
  %call15 = call i64 @readUInt64(%"struct.objectir::Field"* %21)
  store i64 %call15, i64* %read3, align 8
  ret i32 0
}












; Function Attrs: noinline optnone uwtable
define dso_local void @_ZN8objectir12IntegerField8toStringB5cxx11Ev(%"class.std::__cxx11::basic_string"* noalias sret %agg.result, %"struct.objectir::IntegerField"* %this) unnamed_addr #5 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %result.ptr = alloca i8*, align 8
  %this.addr = alloca %"struct.objectir::IntegerField"*, align 8
  %ref.tmp = alloca %"class.std::ios_base::Init", align 1
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %0 = bitcast %"class.std::__cxx11::basic_string"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"struct.objectir::IntegerField"* %this, %"struct.objectir::IntegerField"** %this.addr, align 8
  %this1 = load %"struct.objectir::IntegerField"*, %"struct.objectir::IntegerField"** %this.addr, align 8
  call void @_ZNSaIcEC1Ev(%"class.std::ios_base::Init"* %ref.tmp) #3
  %1 = getelementptr [8 x i8], [8 x i8]* @.str, i64 0, i64 0
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_(%"class.std::__cxx11::basic_string"* %agg.result, i8* %1, %"class.std::ios_base::Init"* dereferenceable(1) %ref.tmp)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  call void @_ZNSaIcED1Ev(%"class.std::ios_base::Init"* %ref.tmp) #3
  ret void

lpad:                                             ; preds = %entry
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  store i8* %3, i8** %exn.slot, align 8
  %4 = extractvalue { i8*, i32 } %2, 1
  store i32 %4, i32* %ehselector.slot, align 4
  call void @_ZNSaIcED1Ev(%"class.std::ios_base::Init"* %ref.tmp) #3
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val2 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val2
}

declare dso_local i32 @__gxx_personality_v0(...)

; Function Attrs: nounwind
declare dso_local void @_ZNSaIcEC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_(%"class.std::__cxx11::basic_string"*, i8*, %"class.std::ios_base::Init"* dereferenceable(1)) unnamed_addr #1

; Function Attrs: nounwind
declare dso_local void @_ZNSaIcED1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: noinline optnone uwtable
define dso_local void @_ZN8objectir10FloatField8toStringB5cxx11Ev(%"class.std::__cxx11::basic_string"* noalias sret %agg.result, %"struct.objectir::FloatField"* %this) unnamed_addr #5 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %result.ptr = alloca i8*, align 8
  %this.addr = alloca %"struct.objectir::FloatField"*, align 8
  %ref.tmp = alloca %"class.std::ios_base::Init", align 1
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %0 = bitcast %"class.std::__cxx11::basic_string"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"struct.objectir::FloatField"* %this, %"struct.objectir::FloatField"** %this.addr, align 8
  %this1 = load %"struct.objectir::FloatField"*, %"struct.objectir::FloatField"** %this.addr, align 8
  call void @_ZNSaIcEC1Ev(%"class.std::ios_base::Init"* %ref.tmp) #3
  %1 = getelementptr [6 x i8], [6 x i8]* @.str.1, i64 0, i64 0
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_(%"class.std::__cxx11::basic_string"* %agg.result, i8* %1, %"class.std::ios_base::Init"* dereferenceable(1) %ref.tmp)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  call void @_ZNSaIcED1Ev(%"class.std::ios_base::Init"* %ref.tmp) #3
  ret void

lpad:                                             ; preds = %entry
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  store i8* %3, i8** %exn.slot, align 8
  %4 = extractvalue { i8*, i32 } %2, 1
  store i32 %4, i32* %ehselector.slot, align 4
  call void @_ZNSaIcED1Ev(%"class.std::ios_base::Init"* %ref.tmp) #3
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val2 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val2
}

; Function Attrs: noinline optnone uwtable
define dso_local void @_ZN8objectir11DoubleField8toStringB5cxx11Ev(%"class.std::__cxx11::basic_string"* noalias sret %agg.result, %"struct.objectir::DoubleField"* %this) unnamed_addr #5 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %result.ptr = alloca i8*, align 8
  %this.addr = alloca %"struct.objectir::DoubleField"*, align 8
  %ref.tmp = alloca %"class.std::ios_base::Init", align 1
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %0 = bitcast %"class.std::__cxx11::basic_string"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"struct.objectir::DoubleField"* %this, %"struct.objectir::DoubleField"** %this.addr, align 8
  %this1 = load %"struct.objectir::DoubleField"*, %"struct.objectir::DoubleField"** %this.addr, align 8
  call void @_ZNSaIcEC1Ev(%"class.std::ios_base::Init"* %ref.tmp) #3
  %1 = getelementptr [7 x i8], [7 x i8]* @.str.2, i64 0, i64 0
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_(%"class.std::__cxx11::basic_string"* %agg.result, i8* %1, %"class.std::ios_base::Init"* dereferenceable(1) %ref.tmp)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  call void @_ZNSaIcED1Ev(%"class.std::ios_base::Init"* %ref.tmp) #3
  ret void

lpad:                                             ; preds = %entry
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  store i8* %3, i8** %exn.slot, align 8
  %4 = extractvalue { i8*, i32 } %2, 1
  store i32 %4, i32* %ehselector.slot, align 4
  call void @_ZNSaIcED1Ev(%"class.std::ios_base::Init"* %ref.tmp) #3
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val2 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val2
}

; Function Attrs: noinline optnone uwtable
define dso_local void @_ZN8objectir11ObjectField8toStringB5cxx11Ev(%"class.std::__cxx11::basic_string"* noalias sret %agg.result, %"struct.objectir::ObjectField"* %this) unnamed_addr #5 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %result.ptr = alloca i8*, align 8
  %this.addr = alloca %"struct.objectir::ObjectField"*, align 8
  %ref.tmp = alloca %"class.std::ios_base::Init", align 1
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %0 = bitcast %"class.std::__cxx11::basic_string"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"struct.objectir::ObjectField"* %this, %"struct.objectir::ObjectField"** %this.addr, align 8
  %this1 = load %"struct.objectir::ObjectField"*, %"struct.objectir::ObjectField"** %this.addr, align 8
  call void @_ZNSaIcEC1Ev(%"class.std::ios_base::Init"* %ref.tmp) #3
  %1 = getelementptr [7 x i8], [7 x i8]* @.str.3, i64 0, i64 0
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_(%"class.std::__cxx11::basic_string"* %agg.result, i8* %1, %"class.std::ios_base::Init"* dereferenceable(1) %ref.tmp)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  call void @_ZNSaIcED1Ev(%"class.std::ios_base::Init"* %ref.tmp) #3
  ret void

lpad:                                             ; preds = %entry
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  store i8* %3, i8** %exn.slot, align 8
  %4 = extractvalue { i8*, i32 } %2, 1
  store i32 %4, i32* %ehselector.slot, align 4
  call void @_ZNSaIcED1Ev(%"class.std::ios_base::Init"* %ref.tmp) #3
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val2 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val2
}

; Function Attrs: noinline optnone uwtable
define dso_local void @_ZN8objectir10ObjectType8toStringB5cxx11Ev(%"class.std::__cxx11::basic_string"* noalias sret %agg.result, %"struct.objectir::ObjectType"* %this) unnamed_addr #5 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %result.ptr = alloca i8*, align 8
  %this.addr = alloca %"struct.objectir::ObjectType"*, align 8
  %nrvo = alloca i1, align 1
  %ref.tmp = alloca %"class.std::ios_base::Init", align 1
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %__range1 = alloca %"class.std::vector.3"*, align 8
  %__begin1 = alloca %"class.__gnu_cxx::__normal_iterator.8", align 8
  %__end1 = alloca %"class.__gnu_cxx::__normal_iterator.8", align 8
  %field = alloca %"struct.objectir::Type"*, align 8
  %ref.tmp9 = alloca %"class.std::__cxx11::basic_string", align 8
  %0 = bitcast %"class.std::__cxx11::basic_string"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"struct.objectir::ObjectType"* %this, %"struct.objectir::ObjectType"** %this.addr, align 8
  %this1 = load %"struct.objectir::ObjectType"*, %"struct.objectir::ObjectType"** %this.addr, align 8
  store i1 false, i1* %nrvo, align 1
  call void @_ZNSaIcEC1Ev(%"class.std::ios_base::Init"* %ref.tmp) #3
  %1 = getelementptr [11 x i8], [11 x i8]* @.str.4, i64 0, i64 0
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_(%"class.std::__cxx11::basic_string"* %agg.result, i8* %1, %"class.std::ios_base::Init"* dereferenceable(1) %ref.tmp)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  call void @_ZNSaIcED1Ev(%"class.std::ios_base::Init"* %ref.tmp) #3
  %fields = getelementptr inbounds %"struct.objectir::ObjectType", %"struct.objectir::ObjectType"* %this1, i32 0, i32 1
  store %"class.std::vector.3"* %fields, %"class.std::vector.3"** %__range1, align 8
  %2 = load %"class.std::vector.3"*, %"class.std::vector.3"** %__range1, align 8
  %call = call %"struct.objectir::Type"** @_ZNSt6vectorIPN8objectir4TypeESaIS2_EE5beginEv(%"class.std::vector.3"* %2) #3
  %coerce.dive = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.8", %"class.__gnu_cxx::__normal_iterator.8"* %__begin1, i32 0, i32 0
  store %"struct.objectir::Type"** %call, %"struct.objectir::Type"*** %coerce.dive, align 8
  %3 = load %"class.std::vector.3"*, %"class.std::vector.3"** %__range1, align 8
  %call2 = call %"struct.objectir::Type"** @_ZNSt6vectorIPN8objectir4TypeESaIS2_EE3endEv(%"class.std::vector.3"* %3) #3
  %coerce.dive3 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.8", %"class.__gnu_cxx::__normal_iterator.8"* %__end1, i32 0, i32 0
  store %"struct.objectir::Type"** %call2, %"struct.objectir::Type"*** %coerce.dive3, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %invoke.cont
  %call4 = call zeroext i1 @_ZN9__gnu_cxxneIPPN8objectir4TypeESt6vectorIS3_SaIS3_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_(%"class.__gnu_cxx::__normal_iterator.8"* dereferenceable(8) %__begin1, %"class.__gnu_cxx::__normal_iterator.8"* dereferenceable(8) %__end1) #3
  br i1 %call4, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %call5 = call dereferenceable(8) %"struct.objectir::Type"** @_ZNK9__gnu_cxx17__normal_iteratorIPPN8objectir4TypeESt6vectorIS3_SaIS3_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.8"* %__begin1) #3
  %4 = load %"struct.objectir::Type"*, %"struct.objectir::Type"** %call5, align 8
  store %"struct.objectir::Type"* %4, %"struct.objectir::Type"** %field, align 8
  %5 = getelementptr [11 x i8], [11 x i8]* @.str.5, i64 0, i64 0
  %call8 = invoke dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc(%"class.std::__cxx11::basic_string"* %agg.result, i8* %5)
          to label %invoke.cont7 unwind label %lpad6.loopexit

invoke.cont7:                                     ; preds = %for.body
  %6 = load %"struct.objectir::Type"*, %"struct.objectir::Type"** %field, align 8
  %7 = bitcast %"struct.objectir::Type"* %6 to void (%"class.std::__cxx11::basic_string"*, %"struct.objectir::Type"*)***
  %vtable = load void (%"class.std::__cxx11::basic_string"*, %"struct.objectir::Type"*)**, void (%"class.std::__cxx11::basic_string"*, %"struct.objectir::Type"*)*** %7, align 8
  %vfn = getelementptr inbounds void (%"class.std::__cxx11::basic_string"*, %"struct.objectir::Type"*)*, void (%"class.std::__cxx11::basic_string"*, %"struct.objectir::Type"*)** %vtable, i64 0
  %8 = load void (%"class.std::__cxx11::basic_string"*, %"struct.objectir::Type"*)*, void (%"class.std::__cxx11::basic_string"*, %"struct.objectir::Type"*)** %vfn, align 8
  invoke void %8(%"class.std::__cxx11::basic_string"* sret %ref.tmp9, %"struct.objectir::Type"* %6)
          to label %invoke.cont10 unwind label %lpad6.loopexit

invoke.cont10:                                    ; preds = %invoke.cont7
  %call13 = invoke dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLERKS4_(%"class.std::__cxx11::basic_string"* %agg.result, %"class.std::__cxx11::basic_string"* dereferenceable(32) %ref.tmp9)
          to label %invoke.cont12 unwind label %lpad11

invoke.cont12:                                    ; preds = %invoke.cont10
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %ref.tmp9) #3
  %9 = getelementptr [3 x i8], [3 x i8]* @.str.6, i64 0, i64 0
  %call15 = invoke dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc(%"class.std::__cxx11::basic_string"* %agg.result, i8* %9)
          to label %invoke.cont14 unwind label %lpad6.loopexit

invoke.cont14:                                    ; preds = %invoke.cont12
  br label %for.inc

for.inc:                                          ; preds = %invoke.cont14
  %call16 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.8"* @_ZN9__gnu_cxx17__normal_iteratorIPPN8objectir4TypeESt6vectorIS3_SaIS3_EEEppEv(%"class.__gnu_cxx::__normal_iterator.8"* %__begin1) #3
  br label %for.cond

lpad:                                             ; preds = %entry
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  store i8* %11, i8** %exn.slot, align 8
  %12 = extractvalue { i8*, i32 } %10, 1
  store i32 %12, i32* %ehselector.slot, align 4
  call void @_ZNSaIcED1Ev(%"class.std::ios_base::Init"* %ref.tmp) #3
  br label %eh.resume

lpad6.loopexit:                                   ; preds = %for.body, %invoke.cont7, %invoke.cont12
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %lpad6

lpad6.loopexit.split-lp:                          ; preds = %for.end
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %lpad6

lpad6:                                            ; preds = %lpad6.loopexit.split-lp, %lpad6.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %lpad6.loopexit ], [ %lpad.loopexit.split-lp, %lpad6.loopexit.split-lp ]
  %13 = extractvalue { i8*, i32 } %lpad.phi, 0
  store i8* %13, i8** %exn.slot, align 8
  %14 = extractvalue { i8*, i32 } %lpad.phi, 1
  store i32 %14, i32* %ehselector.slot, align 4
  br label %ehcleanup

lpad11:                                           ; preds = %invoke.cont10
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  store i8* %16, i8** %exn.slot, align 8
  %17 = extractvalue { i8*, i32 } %15, 1
  store i32 %17, i32* %ehselector.slot, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %ref.tmp9) #3
  br label %ehcleanup

for.end:                                          ; preds = %for.cond
  %18 = getelementptr [3 x i8], [3 x i8]* @.str.6, i64 0, i64 0
  %call18 = invoke dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc(%"class.std::__cxx11::basic_string"* %agg.result, i8* %18)
          to label %invoke.cont17 unwind label %lpad6.loopexit.split-lp

invoke.cont17:                                    ; preds = %for.end
  store i1 true, i1* %nrvo, align 1
  %nrvo.val = load i1, i1* %nrvo, align 1
  br i1 %nrvo.val, label %invoke.cont17.nrvo.skipdtor_crit_edge, label %nrvo.unused

invoke.cont17.nrvo.skipdtor_crit_edge:            ; preds = %invoke.cont17
  br label %nrvo.skipdtor

nrvo.unused:                                      ; preds = %invoke.cont17
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %agg.result) #3
  br label %nrvo.skipdtor

nrvo.skipdtor:                                    ; preds = %invoke.cont17.nrvo.skipdtor_crit_edge, %nrvo.unused
  ret void

ehcleanup:                                        ; preds = %lpad11, %lpad6
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %agg.result) #3
  br label %eh.resume

eh.resume:                                        ; preds = %ehcleanup, %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val19 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val19
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local %"struct.objectir::Type"** @_ZNSt6vectorIPN8objectir4TypeESaIS2_EE5beginEv(%"class.std::vector.3"* %this) #6 comdat align 2 {
entry:
  %retval = alloca %"class.__gnu_cxx::__normal_iterator.8", align 8
  %this.addr = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %this, %"class.std::vector.3"** %this.addr, align 8
  %this1 = load %"class.std::vector.3"*, %"class.std::vector.3"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.3"* %this1 to %"struct.std::_Vector_base.4"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %0, i32 0, i32 0
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<objectir::Type *, std::allocator<objectir::Type *> >::_Vector_impl", %"struct.std::_Vector_base<objectir::Type *, std::allocator<objectir::Type *> >::_Vector_impl"* %_M_impl, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPPN8objectir4TypeESt6vectorIS3_SaIS3_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.8"* %retval, %"struct.objectir::Type"*** dereferenceable(8) %_M_start) #3
  %coerce.dive = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.8", %"class.__gnu_cxx::__normal_iterator.8"* %retval, i32 0, i32 0
  %1 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %coerce.dive, align 8
  ret %"struct.objectir::Type"** %1
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local %"struct.objectir::Type"** @_ZNSt6vectorIPN8objectir4TypeESaIS2_EE3endEv(%"class.std::vector.3"* %this) #6 comdat align 2 {
entry:
  %retval = alloca %"class.__gnu_cxx::__normal_iterator.8", align 8
  %this.addr = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %this, %"class.std::vector.3"** %this.addr, align 8
  %this1 = load %"class.std::vector.3"*, %"class.std::vector.3"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.3"* %this1 to %"struct.std::_Vector_base.4"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %0, i32 0, i32 0
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<objectir::Type *, std::allocator<objectir::Type *> >::_Vector_impl", %"struct.std::_Vector_base<objectir::Type *, std::allocator<objectir::Type *> >::_Vector_impl"* %_M_impl, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPPN8objectir4TypeESt6vectorIS3_SaIS3_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.8"* %retval, %"struct.objectir::Type"*** dereferenceable(8) %_M_finish) #3
  %coerce.dive = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.8", %"class.__gnu_cxx::__normal_iterator.8"* %retval, i32 0, i32 0
  %1 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %coerce.dive, align 8
  ret %"struct.objectir::Type"** %1
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local zeroext i1 @_ZN9__gnu_cxxneIPPN8objectir4TypeESt6vectorIS3_SaIS3_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_(%"class.__gnu_cxx::__normal_iterator.8"* dereferenceable(8) %__lhs, %"class.__gnu_cxx::__normal_iterator.8"* dereferenceable(8) %__rhs) #6 comdat {
entry:
  %__lhs.addr = alloca %"class.__gnu_cxx::__normal_iterator.8"*, align 8
  %__rhs.addr = alloca %"class.__gnu_cxx::__normal_iterator.8"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.8"* %__lhs, %"class.__gnu_cxx::__normal_iterator.8"** %__lhs.addr, align 8
  store %"class.__gnu_cxx::__normal_iterator.8"* %__rhs, %"class.__gnu_cxx::__normal_iterator.8"** %__rhs.addr, align 8
  %0 = load %"class.__gnu_cxx::__normal_iterator.8"*, %"class.__gnu_cxx::__normal_iterator.8"** %__lhs.addr, align 8
  %call = call dereferenceable(8) %"struct.objectir::Type"*** @_ZNK9__gnu_cxx17__normal_iteratorIPPN8objectir4TypeESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.8"* %0) #3
  %1 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %call, align 8
  %2 = load %"class.__gnu_cxx::__normal_iterator.8"*, %"class.__gnu_cxx::__normal_iterator.8"** %__rhs.addr, align 8
  %call1 = call dereferenceable(8) %"struct.objectir::Type"*** @_ZNK9__gnu_cxx17__normal_iteratorIPPN8objectir4TypeESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.8"* %2) #3
  %3 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %call1, align 8
  %cmp = icmp ne %"struct.objectir::Type"** %1, %3
  ret i1 %cmp
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) %"struct.objectir::Type"** @_ZNK9__gnu_cxx17__normal_iteratorIPPN8objectir4TypeESt6vectorIS3_SaIS3_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.8"* %this) #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::__normal_iterator.8"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.8"* %this, %"class.__gnu_cxx::__normal_iterator.8"** %this.addr, align 8
  %this1 = load %"class.__gnu_cxx::__normal_iterator.8"*, %"class.__gnu_cxx::__normal_iterator.8"** %this.addr, align 8
  %_M_current = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.8", %"class.__gnu_cxx::__normal_iterator.8"* %this1, i32 0, i32 0
  %0 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %_M_current, align 8
  ret %"struct.objectir::Type"** %0
}

declare dso_local dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc(%"class.std::__cxx11::basic_string"*, i8*) #1

declare dso_local dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLERKS4_(%"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"* dereferenceable(32)) #1

; Function Attrs: nounwind
declare dso_local void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"*) unnamed_addr #2

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.8"* @_ZN9__gnu_cxx17__normal_iteratorIPPN8objectir4TypeESt6vectorIS3_SaIS3_EEEppEv(%"class.__gnu_cxx::__normal_iterator.8"* %this) #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::__normal_iterator.8"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.8"* %this, %"class.__gnu_cxx::__normal_iterator.8"** %this.addr, align 8
  %this1 = load %"class.__gnu_cxx::__normal_iterator.8"*, %"class.__gnu_cxx::__normal_iterator.8"** %this.addr, align 8
  %_M_current = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.8", %"class.__gnu_cxx::__normal_iterator.8"* %this1, i32 0, i32 0
  %0 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %_M_current, align 8
  %incdec.ptr = getelementptr inbounds %"struct.objectir::Type"*, %"struct.objectir::Type"** %0, i32 1
  store %"struct.objectir::Type"** %incdec.ptr, %"struct.objectir::Type"*** %_M_current, align 8
  ret %"class.__gnu_cxx::__normal_iterator.8"* %this1
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) %"struct.objectir::Type"*** @_ZNK9__gnu_cxx17__normal_iteratorIPPN8objectir4TypeESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.8"* %this) #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::__normal_iterator.8"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.8"* %this, %"class.__gnu_cxx::__normal_iterator.8"** %this.addr, align 8
  %this1 = load %"class.__gnu_cxx::__normal_iterator.8"*, %"class.__gnu_cxx::__normal_iterator.8"** %this.addr, align 8
  %_M_current = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.8", %"class.__gnu_cxx::__normal_iterator.8"* %this1, i32 0, i32 0
  ret %"struct.objectir::Type"*** %_M_current
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx17__normal_iteratorIPPN8objectir4TypeESt6vectorIS3_SaIS3_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.8"* %this, %"struct.objectir::Type"*** dereferenceable(8) %__i) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::__normal_iterator.8"*, align 8
  %__i.addr = alloca %"struct.objectir::Type"***, align 8
  store %"class.__gnu_cxx::__normal_iterator.8"* %this, %"class.__gnu_cxx::__normal_iterator.8"** %this.addr, align 8
  store %"struct.objectir::Type"*** %__i, %"struct.objectir::Type"**** %__i.addr, align 8
  %this1 = load %"class.__gnu_cxx::__normal_iterator.8"*, %"class.__gnu_cxx::__normal_iterator.8"** %this.addr, align 8
  %_M_current = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.8", %"class.__gnu_cxx::__normal_iterator.8"* %this1, i32 0, i32 0
  %0 = load %"struct.objectir::Type"***, %"struct.objectir::Type"**** %__i.addr, align 8
  %1 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %0, align 8
  store %"struct.objectir::Type"** %1, %"struct.objectir::Type"*** %_M_current, align 8
  ret void
}

; Function Attrs: noinline optnone uwtable
define dso_local void @_ZN8objectir9ArrayType8toStringB5cxx11Ev(%"class.std::__cxx11::basic_string"* noalias sret %agg.result, %"struct.objectir::ArrayType"* %this) unnamed_addr #5 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %result.ptr = alloca i8*, align 8
  %this.addr = alloca %"struct.objectir::ArrayType"*, align 8
  %ref.tmp = alloca %"class.std::ios_base::Init", align 1
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %0 = bitcast %"class.std::__cxx11::basic_string"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"struct.objectir::ArrayType"* %this, %"struct.objectir::ArrayType"** %this.addr, align 8
  %this1 = load %"struct.objectir::ArrayType"*, %"struct.objectir::ArrayType"** %this.addr, align 8
  call void @_ZNSaIcEC1Ev(%"class.std::ios_base::Init"* %ref.tmp) #3
  %1 = getelementptr [12 x i8], [12 x i8]* @.str.11, i64 0, i64 0
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_(%"class.std::__cxx11::basic_string"* %agg.result, i8* %1, %"class.std::ios_base::Init"* dereferenceable(1) %ref.tmp)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  call void @_ZNSaIcED1Ev(%"class.std::ios_base::Init"* %ref.tmp) #3
  ret void

lpad:                                             ; preds = %entry
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  store i8* %3, i8** %exn.slot, align 8
  %4 = extractvalue { i8*, i32 } %2, 1
  store i32 %4, i32* %ehselector.slot, align 4
  call void @_ZNSaIcED1Ev(%"class.std::ios_base::Init"* %ref.tmp) #3
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val2 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val2
}

; Function Attrs: noinline optnone uwtable
define dso_local void @_ZN8objectir9UnionType8toStringB5cxx11Ev(%"class.std::__cxx11::basic_string"* noalias sret %agg.result, %"struct.objectir::ObjectType"* %this) unnamed_addr #5 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %result.ptr = alloca i8*, align 8
  %this.addr = alloca %"struct.objectir::ObjectType"*, align 8
  %ref.tmp = alloca %"class.std::ios_base::Init", align 1
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %0 = bitcast %"class.std::__cxx11::basic_string"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"struct.objectir::ObjectType"* %this, %"struct.objectir::ObjectType"** %this.addr, align 8
  %this1 = load %"struct.objectir::ObjectType"*, %"struct.objectir::ObjectType"** %this.addr, align 8
  call void @_ZNSaIcEC1Ev(%"class.std::ios_base::Init"* %ref.tmp) #3
  %1 = getelementptr [12 x i8], [12 x i8]* @.str.12, i64 0, i64 0
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_(%"class.std::__cxx11::basic_string"* %agg.result, i8* %1, %"class.std::ios_base::Init"* dereferenceable(1) %ref.tmp)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  call void @_ZNSaIcED1Ev(%"class.std::ios_base::Init"* %ref.tmp) #3
  ret void

lpad:                                             ; preds = %entry
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  store i8* %3, i8** %exn.slot, align 8
  %4 = extractvalue { i8*, i32 } %2, 1
  store i32 %4, i32* %ehselector.slot, align 4
  call void @_ZNSaIcED1Ev(%"class.std::ios_base::Init"* %ref.tmp) #3
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val2 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val2
}

; Function Attrs: noinline optnone uwtable
define dso_local void @_ZN8objectir11IntegerType8toStringB5cxx11Ev(%"class.std::__cxx11::basic_string"* noalias sret %agg.result, %"struct.objectir::IntegerType"* %this) unnamed_addr #5 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %result.ptr = alloca i8*, align 8
  %this.addr = alloca %"struct.objectir::IntegerType"*, align 8
  %ref.tmp = alloca %"class.std::ios_base::Init", align 1
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %0 = bitcast %"class.std::__cxx11::basic_string"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"struct.objectir::IntegerType"* %this, %"struct.objectir::IntegerType"** %this.addr, align 8
  %this1 = load %"struct.objectir::IntegerType"*, %"struct.objectir::IntegerType"** %this.addr, align 8
  call void @_ZNSaIcEC1Ev(%"class.std::ios_base::Init"* %ref.tmp) #3
  %1 = getelementptr [14 x i8], [14 x i8]* @.str.13, i64 0, i64 0
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_(%"class.std::__cxx11::basic_string"* %agg.result, i8* %1, %"class.std::ios_base::Init"* dereferenceable(1) %ref.tmp)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  call void @_ZNSaIcED1Ev(%"class.std::ios_base::Init"* %ref.tmp) #3
  ret void

lpad:                                             ; preds = %entry
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  store i8* %3, i8** %exn.slot, align 8
  %4 = extractvalue { i8*, i32 } %2, 1
  store i32 %4, i32* %ehselector.slot, align 4
  call void @_ZNSaIcED1Ev(%"class.std::ios_base::Init"* %ref.tmp) #3
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val2 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val2
}

; Function Attrs: noinline optnone uwtable
define dso_local void @_ZN8objectir9FloatType8toStringB5cxx11Ev(%"class.std::__cxx11::basic_string"* noalias sret %agg.result, %"struct.objectir::FloatType"* %this) unnamed_addr #5 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %result.ptr = alloca i8*, align 8
  %this.addr = alloca %"struct.objectir::FloatType"*, align 8
  %ref.tmp = alloca %"class.std::ios_base::Init", align 1
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %0 = bitcast %"class.std::__cxx11::basic_string"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"struct.objectir::FloatType"* %this, %"struct.objectir::FloatType"** %this.addr, align 8
  %this1 = load %"struct.objectir::FloatType"*, %"struct.objectir::FloatType"** %this.addr, align 8
  call void @_ZNSaIcEC1Ev(%"class.std::ios_base::Init"* %ref.tmp) #3
  %1 = getelementptr [12 x i8], [12 x i8]* @.str.14, i64 0, i64 0
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_(%"class.std::__cxx11::basic_string"* %agg.result, i8* %1, %"class.std::ios_base::Init"* dereferenceable(1) %ref.tmp)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  call void @_ZNSaIcED1Ev(%"class.std::ios_base::Init"* %ref.tmp) #3
  ret void

lpad:                                             ; preds = %entry
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  store i8* %3, i8** %exn.slot, align 8
  %4 = extractvalue { i8*, i32 } %2, 1
  store i32 %4, i32* %ehselector.slot, align 4
  call void @_ZNSaIcED1Ev(%"class.std::ios_base::Init"* %ref.tmp) #3
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val2 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val2
}

; Function Attrs: noinline optnone uwtable
define dso_local void @_ZN8objectir10DoubleType8toStringB5cxx11Ev(%"class.std::__cxx11::basic_string"* noalias sret %agg.result, %"struct.objectir::FloatType"* %this) unnamed_addr #5 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %result.ptr = alloca i8*, align 8
  %this.addr = alloca %"struct.objectir::FloatType"*, align 8
  %ref.tmp = alloca %"class.std::ios_base::Init", align 1
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %0 = bitcast %"class.std::__cxx11::basic_string"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"struct.objectir::FloatType"* %this, %"struct.objectir::FloatType"** %this.addr, align 8
  %this1 = load %"struct.objectir::FloatType"*, %"struct.objectir::FloatType"** %this.addr, align 8
  call void @_ZNSaIcEC1Ev(%"class.std::ios_base::Init"* %ref.tmp) #3
  %1 = getelementptr [13 x i8], [13 x i8]* @.str.15, i64 0, i64 0
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_(%"class.std::__cxx11::basic_string"* %agg.result, i8* %1, %"class.std::ios_base::Init"* dereferenceable(1) %ref.tmp)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  call void @_ZNSaIcED1Ev(%"class.std::ios_base::Init"* %ref.tmp) #3
  ret void

lpad:                                             ; preds = %entry
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  store i8* %3, i8** %exn.slot, align 8
  %4 = extractvalue { i8*, i32 } %2, 1
  store i32 %4, i32* %ehselector.slot, align 4
  call void @_ZNSaIcED1Ev(%"class.std::ios_base::Init"* %ref.tmp) #3
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val2 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val2
}

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_fields.cpp() #0 section ".text.startup" {
entry:
  call void @__cxx_global_var_init.2()
  ret void
}

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_accessor.cpp() #0 section ".text.startup" {
entry:
  call void @__cxx_global_var_init.22()
  ret void
}

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_objects.cpp() #0 section ".text.startup" {
entry:
  call void @__cxx_global_var_init.36()
  ret void
}

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init.36() #0 section ".text.startup" {
entry:
  call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* @_ZStL8__ioinit.37)
  %0 = getelementptr %"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit.37, i32 0, i32 0
  %1 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* %0, i8* @__dso_handle) #3
  ret void
}

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init.22() #0 section ".text.startup" {
entry:
  call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* @_ZStL8__ioinit.23)
  %0 = getelementptr %"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit.23, i32 0, i32 0
  %1 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* %0, i8* @__dso_handle) #3
  ret void
}

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init.2() #0 section ".text.startup" {
entry:
  call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* @_ZStL8__ioinit.3)
  %0 = getelementptr %"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit.3, i32 0, i32 0
  %1 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* %0, i8* @__dso_handle) #3
  ret void
}

; Function Attrs: noinline optnone uwtable
define dso_local void @_ZN8objectir6Object8toStringB5cxx11Ev(%"class.std::__cxx11::basic_string"* noalias sret %agg.result, %"struct.objectir::Object"* %this) #5 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %result.ptr = alloca i8*, align 8
  %this.addr = alloca %"struct.objectir::Object"*, align 8
  %nrvo = alloca i1, align 1
  %ref.tmp = alloca %"class.std::ios_base::Init", align 1
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %__range1 = alloca %"class.std::vector"*, align 8
  %__begin1 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %__end1 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %field = alloca %"struct.objectir::Field"*, align 8
  %ref.tmp9 = alloca %"class.std::__cxx11::basic_string", align 8
  %0 = bitcast %"class.std::__cxx11::basic_string"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"struct.objectir::Object"* %this, %"struct.objectir::Object"** %this.addr, align 8
  %this1 = load %"struct.objectir::Object"*, %"struct.objectir::Object"** %this.addr, align 8
  store i1 false, i1* %nrvo, align 1
  call void @_ZNSaIcEC1Ev(%"class.std::ios_base::Init"* %ref.tmp) #3
  %1 = getelementptr [11 x i8], [11 x i8]* @.str.4, i64 0, i64 0
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_(%"class.std::__cxx11::basic_string"* %agg.result, i8* %1, %"class.std::ios_base::Init"* dereferenceable(1) %ref.tmp)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  call void @_ZNSaIcED1Ev(%"class.std::ios_base::Init"* %ref.tmp) #3
  %fields = getelementptr inbounds %"struct.objectir::Object", %"struct.objectir::Object"* %this1, i32 0, i32 1
  store %"class.std::vector"* %fields, %"class.std::vector"** %__range1, align 8
  %2 = load %"class.std::vector"*, %"class.std::vector"** %__range1, align 8
  %call = call %"struct.objectir::Field"** @_ZNSt6vectorIPN8objectir5FieldESaIS2_EE5beginEv(%"class.std::vector"* %2) #3
  %coerce.dive = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %__begin1, i32 0, i32 0
  store %"struct.objectir::Field"** %call, %"struct.objectir::Field"*** %coerce.dive, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %__range1, align 8
  %call2 = call %"struct.objectir::Field"** @_ZNSt6vectorIPN8objectir5FieldESaIS2_EE3endEv(%"class.std::vector"* %3) #3
  %coerce.dive3 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %__end1, i32 0, i32 0
  store %"struct.objectir::Field"** %call2, %"struct.objectir::Field"*** %coerce.dive3, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %invoke.cont
  %call4 = call zeroext i1 @_ZN9__gnu_cxxneIPPN8objectir5FieldESt6vectorIS3_SaIS3_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %__begin1, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %__end1) #3
  br i1 %call4, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %call5 = call dereferenceable(8) %"struct.objectir::Field"** @_ZNK9__gnu_cxx17__normal_iteratorIPPN8objectir5FieldESt6vectorIS3_SaIS3_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %__begin1) #3
  %4 = load %"struct.objectir::Field"*, %"struct.objectir::Field"** %call5, align 8
  store %"struct.objectir::Field"* %4, %"struct.objectir::Field"** %field, align 8
  %5 = getelementptr [11 x i8], [11 x i8]* @.str.5, i64 0, i64 0
  %call8 = invoke dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc(%"class.std::__cxx11::basic_string"* %agg.result, i8* %5)
          to label %invoke.cont7 unwind label %lpad6.loopexit

invoke.cont7:                                     ; preds = %for.body
  %6 = load %"struct.objectir::Field"*, %"struct.objectir::Field"** %field, align 8
  %7 = bitcast %"struct.objectir::Field"* %6 to void (%"class.std::__cxx11::basic_string"*, %"struct.objectir::Field"*)***
  %vtable = load void (%"class.std::__cxx11::basic_string"*, %"struct.objectir::Field"*)**, void (%"class.std::__cxx11::basic_string"*, %"struct.objectir::Field"*)*** %7, align 8
  %vfn = getelementptr inbounds void (%"class.std::__cxx11::basic_string"*, %"struct.objectir::Field"*)*, void (%"class.std::__cxx11::basic_string"*, %"struct.objectir::Field"*)** %vtable, i64 0
  %8 = load void (%"class.std::__cxx11::basic_string"*, %"struct.objectir::Field"*)*, void (%"class.std::__cxx11::basic_string"*, %"struct.objectir::Field"*)** %vfn, align 8
  invoke void %8(%"class.std::__cxx11::basic_string"* sret %ref.tmp9, %"struct.objectir::Field"* %6)
          to label %invoke.cont10 unwind label %lpad6.loopexit

invoke.cont10:                                    ; preds = %invoke.cont7
  %call13 = invoke dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLERKS4_(%"class.std::__cxx11::basic_string"* %agg.result, %"class.std::__cxx11::basic_string"* dereferenceable(32) %ref.tmp9)
          to label %invoke.cont12 unwind label %lpad11

invoke.cont12:                                    ; preds = %invoke.cont10
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %ref.tmp9) #3
  %9 = getelementptr [3 x i8], [3 x i8]* @.str.6, i64 0, i64 0
  %call15 = invoke dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc(%"class.std::__cxx11::basic_string"* %agg.result, i8* %9)
          to label %invoke.cont14 unwind label %lpad6.loopexit

invoke.cont14:                                    ; preds = %invoke.cont12
  br label %for.inc

for.inc:                                          ; preds = %invoke.cont14
  %call16 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPPN8objectir5FieldESt6vectorIS3_SaIS3_EEEppEv(%"class.__gnu_cxx::__normal_iterator"* %__begin1) #3
  br label %for.cond

lpad:                                             ; preds = %entry
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  store i8* %11, i8** %exn.slot, align 8
  %12 = extractvalue { i8*, i32 } %10, 1
  store i32 %12, i32* %ehselector.slot, align 4
  call void @_ZNSaIcED1Ev(%"class.std::ios_base::Init"* %ref.tmp) #3
  br label %eh.resume

lpad6.loopexit:                                   ; preds = %for.body, %invoke.cont7, %invoke.cont12
  %lpad.loopexit = landingpad { i8*, i32 }
          cleanup
  br label %lpad6

lpad6.loopexit.split-lp:                          ; preds = %for.end
  %lpad.loopexit.split-lp = landingpad { i8*, i32 }
          cleanup
  br label %lpad6

lpad6:                                            ; preds = %lpad6.loopexit.split-lp, %lpad6.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit, %lpad6.loopexit ], [ %lpad.loopexit.split-lp, %lpad6.loopexit.split-lp ]
  %13 = extractvalue { i8*, i32 } %lpad.phi, 0
  store i8* %13, i8** %exn.slot, align 8
  %14 = extractvalue { i8*, i32 } %lpad.phi, 1
  store i32 %14, i32* %ehselector.slot, align 4
  br label %ehcleanup

lpad11:                                           ; preds = %invoke.cont10
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  store i8* %16, i8** %exn.slot, align 8
  %17 = extractvalue { i8*, i32 } %15, 1
  store i32 %17, i32* %ehselector.slot, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %ref.tmp9) #3
  br label %ehcleanup

for.end:                                          ; preds = %for.cond
  %18 = getelementptr [3 x i8], [3 x i8]* @.str.6, i64 0, i64 0
  %call18 = invoke dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc(%"class.std::__cxx11::basic_string"* %agg.result, i8* %18)
          to label %invoke.cont17 unwind label %lpad6.loopexit.split-lp

invoke.cont17:                                    ; preds = %for.end
  store i1 true, i1* %nrvo, align 1
  %nrvo.val = load i1, i1* %nrvo, align 1
  br i1 %nrvo.val, label %invoke.cont17.nrvo.skipdtor_crit_edge, label %nrvo.unused

invoke.cont17.nrvo.skipdtor_crit_edge:            ; preds = %invoke.cont17
  br label %nrvo.skipdtor

nrvo.unused:                                      ; preds = %invoke.cont17
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %agg.result) #3
  br label %nrvo.skipdtor

nrvo.skipdtor:                                    ; preds = %invoke.cont17.nrvo.skipdtor_crit_edge, %nrvo.unused
  ret void

ehcleanup:                                        ; preds = %lpad11, %lpad6
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %agg.result) #3
  br label %eh.resume

eh.resume:                                        ; preds = %ehcleanup, %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val19 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val19
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local %"struct.objectir::Field"** @_ZNSt6vectorIPN8objectir5FieldESaIS2_EE5beginEv(%"class.std::vector"* %this) #6 comdat align 2 {
entry:
  %retval = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %this.addr = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %this, %"class.std::vector"** %this.addr, align 8
  %this1 = load %"class.std::vector"*, %"class.std::vector"** %this.addr, align 8
  %0 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %0, i32 0, i32 0
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl", %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl"* %_M_impl, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPPN8objectir5FieldESt6vectorIS3_SaIS3_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator"* %retval, %"struct.objectir::Field"*** dereferenceable(8) %_M_start) #3
  %coerce.dive = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %retval, i32 0, i32 0
  %1 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %coerce.dive, align 8
  ret %"struct.objectir::Field"** %1
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local %"struct.objectir::Field"** @_ZNSt6vectorIPN8objectir5FieldESaIS2_EE3endEv(%"class.std::vector"* %this) #6 comdat align 2 {
entry:
  %retval = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %this.addr = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %this, %"class.std::vector"** %this.addr, align 8
  %this1 = load %"class.std::vector"*, %"class.std::vector"** %this.addr, align 8
  %0 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %0, i32 0, i32 0
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl", %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl"* %_M_impl, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPPN8objectir5FieldESt6vectorIS3_SaIS3_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator"* %retval, %"struct.objectir::Field"*** dereferenceable(8) %_M_finish) #3
  %coerce.dive = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %retval, i32 0, i32 0
  %1 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %coerce.dive, align 8
  ret %"struct.objectir::Field"** %1
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local zeroext i1 @_ZN9__gnu_cxxneIPPN8objectir5FieldESt6vectorIS3_SaIS3_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %__lhs, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %__rhs) #6 comdat {
entry:
  %__lhs.addr = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %__rhs.addr = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %__lhs, %"class.__gnu_cxx::__normal_iterator"** %__lhs.addr, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %__rhs, %"class.__gnu_cxx::__normal_iterator"** %__rhs.addr, align 8
  %0 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %__lhs.addr, align 8
  %call = call dereferenceable(8) %"struct.objectir::Field"*** @_ZNK9__gnu_cxx17__normal_iteratorIPPN8objectir5FieldESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %0) #3
  %1 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %call, align 8
  %2 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %__rhs.addr, align 8
  %call1 = call dereferenceable(8) %"struct.objectir::Field"*** @_ZNK9__gnu_cxx17__normal_iteratorIPPN8objectir5FieldESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %2) #3
  %3 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %call1, align 8
  %cmp = icmp ne %"struct.objectir::Field"** %1, %3
  ret i1 %cmp
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) %"struct.objectir::Field"** @_ZNK9__gnu_cxx17__normal_iteratorIPPN8objectir5FieldESt6vectorIS3_SaIS3_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %this) #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %this, %"class.__gnu_cxx::__normal_iterator"** %this.addr, align 8
  %this1 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %this.addr, align 8
  %_M_current = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %this1, i32 0, i32 0
  %0 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %_M_current, align 8
  ret %"struct.objectir::Field"** %0
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPPN8objectir5FieldESt6vectorIS3_SaIS3_EEEppEv(%"class.__gnu_cxx::__normal_iterator"* %this) #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %this, %"class.__gnu_cxx::__normal_iterator"** %this.addr, align 8
  %this1 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %this.addr, align 8
  %_M_current = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %this1, i32 0, i32 0
  %0 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %_M_current, align 8
  %incdec.ptr = getelementptr inbounds %"struct.objectir::Field"*, %"struct.objectir::Field"** %0, i32 1
  store %"struct.objectir::Field"** %incdec.ptr, %"struct.objectir::Field"*** %_M_current, align 8
  ret %"class.__gnu_cxx::__normal_iterator"* %this1
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) %"struct.objectir::Field"*** @_ZNK9__gnu_cxx17__normal_iteratorIPPN8objectir5FieldESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %this) #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %this, %"class.__gnu_cxx::__normal_iterator"** %this.addr, align 8
  %this1 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %this.addr, align 8
  %_M_current = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %this1, i32 0, i32 0
  ret %"struct.objectir::Field"*** %_M_current
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx17__normal_iteratorIPPN8objectir5FieldESt6vectorIS3_SaIS3_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator"* %this, %"struct.objectir::Field"*** dereferenceable(8) %__i) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %__i.addr = alloca %"struct.objectir::Field"***, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %this, %"class.__gnu_cxx::__normal_iterator"** %this.addr, align 8
  store %"struct.objectir::Field"*** %__i, %"struct.objectir::Field"**** %__i.addr, align 8
  %this1 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %this.addr, align 8
  %_M_current = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %this1, i32 0, i32 0
  %0 = load %"struct.objectir::Field"***, %"struct.objectir::Field"**** %__i.addr, align 8
  %1 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %0, align 8
  store %"struct.objectir::Field"** %1, %"struct.objectir::Field"*** %_M_current, align 8
  ret void
}

; Function Attrs: noinline optnone uwtable
define dso_local void @_ZN8objectir5Array8toStringB5cxx11Ev(%"class.std::__cxx11::basic_string"* noalias sret %agg.result, %"struct.objectir::Array"* %this) #5 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %result.ptr = alloca i8*, align 8
  %this.addr = alloca %"struct.objectir::Array"*, align 8
  %nrvo = alloca i1, align 1
  %ref.tmp = alloca %"class.std::ios_base::Init", align 1
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %ref.tmp4 = alloca %"class.std::__cxx11::basic_string", align 8
  %0 = bitcast %"class.std::__cxx11::basic_string"* %agg.result to i8*
  store i8* %0, i8** %result.ptr, align 8
  store %"struct.objectir::Array"* %this, %"struct.objectir::Array"** %this.addr, align 8
  %this1 = load %"struct.objectir::Array"*, %"struct.objectir::Array"** %this.addr, align 8
  store i1 false, i1* %nrvo, align 1
  call void @_ZNSaIcEC1Ev(%"class.std::ios_base::Init"* %ref.tmp) #3
  %1 = getelementptr [9 x i8], [9 x i8]* @.str.7, i64 0, i64 0
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_(%"class.std::__cxx11::basic_string"* %agg.result, i8* %1, %"class.std::ios_base::Init"* dereferenceable(1) %ref.tmp)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  call void @_ZNSaIcED1Ev(%"class.std::ios_base::Init"* %ref.tmp) #3
  %2 = getelementptr [8 x i8], [8 x i8]* @.str.8, i64 0, i64 0
  %call = invoke dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc(%"class.std::__cxx11::basic_string"* %agg.result, i8* %2)
          to label %invoke.cont3 unwind label %lpad2

invoke.cont3:                                     ; preds = %invoke.cont
  %3 = bitcast %"struct.objectir::Array"* %this1 to %"struct.objectir::Object"*
  %type = getelementptr inbounds %"struct.objectir::Object", %"struct.objectir::Object"* %3, i32 0, i32 0
  %4 = load %"struct.objectir::Type"*, %"struct.objectir::Type"** %type, align 8
  %5 = bitcast %"struct.objectir::Type"* %4 to void (%"class.std::__cxx11::basic_string"*, %"struct.objectir::Type"*)***
  %vtable = load void (%"class.std::__cxx11::basic_string"*, %"struct.objectir::Type"*)**, void (%"class.std::__cxx11::basic_string"*, %"struct.objectir::Type"*)*** %5, align 8
  %vfn = getelementptr inbounds void (%"class.std::__cxx11::basic_string"*, %"struct.objectir::Type"*)*, void (%"class.std::__cxx11::basic_string"*, %"struct.objectir::Type"*)** %vtable, i64 0
  %6 = load void (%"class.std::__cxx11::basic_string"*, %"struct.objectir::Type"*)*, void (%"class.std::__cxx11::basic_string"*, %"struct.objectir::Type"*)** %vfn, align 8
  invoke void %6(%"class.std::__cxx11::basic_string"* sret %ref.tmp4, %"struct.objectir::Type"* %4)
          to label %invoke.cont5 unwind label %lpad2

invoke.cont5:                                     ; preds = %invoke.cont3
  %call8 = invoke dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLERKS4_(%"class.std::__cxx11::basic_string"* %agg.result, %"class.std::__cxx11::basic_string"* dereferenceable(32) %ref.tmp4)
          to label %invoke.cont7 unwind label %lpad6

invoke.cont7:                                     ; preds = %invoke.cont5
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %ref.tmp4) #3
  %7 = getelementptr [12 x i8], [12 x i8]* @.str.9, i64 0, i64 0
  %call10 = invoke dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc(%"class.std::__cxx11::basic_string"* %agg.result, i8* %7)
          to label %invoke.cont9 unwind label %lpad2

invoke.cont9:                                     ; preds = %invoke.cont7
  %length = getelementptr inbounds %"struct.objectir::Array", %"struct.objectir::Array"* %this1, i32 0, i32 1
  %8 = load i64, i64* %length, align 8
  %conv = trunc i64 %8 to i8
  %call12 = invoke dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc(%"class.std::__cxx11::basic_string"* %agg.result, i8 signext %conv)
          to label %invoke.cont11 unwind label %lpad2

invoke.cont11:                                    ; preds = %invoke.cont9
  %9 = getelementptr [4 x i8], [4 x i8]* @.str.10, i64 0, i64 0
  %call14 = invoke dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc(%"class.std::__cxx11::basic_string"* %agg.result, i8* %9)
          to label %invoke.cont13 unwind label %lpad2

invoke.cont13:                                    ; preds = %invoke.cont11
  store i1 true, i1* %nrvo, align 1
  %nrvo.val = load i1, i1* %nrvo, align 1
  br i1 %nrvo.val, label %invoke.cont13.nrvo.skipdtor_crit_edge, label %nrvo.unused

invoke.cont13.nrvo.skipdtor_crit_edge:            ; preds = %invoke.cont13
  br label %nrvo.skipdtor

lpad:                                             ; preds = %entry
  %10 = landingpad { i8*, i32 }
          cleanup
  %11 = extractvalue { i8*, i32 } %10, 0
  store i8* %11, i8** %exn.slot, align 8
  %12 = extractvalue { i8*, i32 } %10, 1
  store i32 %12, i32* %ehselector.slot, align 4
  call void @_ZNSaIcED1Ev(%"class.std::ios_base::Init"* %ref.tmp) #3
  br label %eh.resume

lpad2:                                            ; preds = %invoke.cont11, %invoke.cont9, %invoke.cont7, %invoke.cont3, %invoke.cont
  %13 = landingpad { i8*, i32 }
          cleanup
  %14 = extractvalue { i8*, i32 } %13, 0
  store i8* %14, i8** %exn.slot, align 8
  %15 = extractvalue { i8*, i32 } %13, 1
  store i32 %15, i32* %ehselector.slot, align 4
  br label %ehcleanup

lpad6:                                            ; preds = %invoke.cont5
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = extractvalue { i8*, i32 } %16, 0
  store i8* %17, i8** %exn.slot, align 8
  %18 = extractvalue { i8*, i32 } %16, 1
  store i32 %18, i32* %ehselector.slot, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %ref.tmp4) #3
  br label %ehcleanup

nrvo.unused:                                      ; preds = %invoke.cont13
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %agg.result) #3
  br label %nrvo.skipdtor

nrvo.skipdtor:                                    ; preds = %invoke.cont13.nrvo.skipdtor_crit_edge, %nrvo.unused
  ret void

ehcleanup:                                        ; preds = %lpad6, %lpad2
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %agg.result) #3
  br label %eh.resume

eh.resume:                                        ; preds = %ehcleanup, %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val15 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val15
}

declare dso_local dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc(%"class.std::__cxx11::basic_string"*, i8 signext) #1

; Function Attrs: noinline nounwind optnone uwtable
define dso_local i32 @_ZN8objectir4Type7getCodeEv(%"struct.objectir::Type"* %this) #6 align 2 {
entry:
  %this.addr = alloca %"struct.objectir::Type"*, align 8
  store %"struct.objectir::Type"* %this, %"struct.objectir::Type"** %this.addr, align 8
  %this1 = load %"struct.objectir::Type"*, %"struct.objectir::Type"** %this.addr, align 8
  %code = getelementptr inbounds %"struct.objectir::Type", %"struct.objectir::Type"* %this1, i32 0, i32 1
  %0 = load i32, i32* %code, align 8
  ret i32 %0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_ZN8objectir4TypeC2ENS_8TypeCodeE(%"struct.objectir::Type"* %this, i32 %code) unnamed_addr #6 align 2 {
entry:
  %this.addr = alloca %"struct.objectir::Type"*, align 8
  %code.addr = alloca i32, align 4
  store %"struct.objectir::Type"* %this, %"struct.objectir::Type"** %this.addr, align 8
  store i32 %code, i32* %code.addr, align 4
  %this1 = load %"struct.objectir::Type"*, %"struct.objectir::Type"** %this.addr, align 8
  %0 = bitcast %"struct.objectir::Type"* %this1 to i32 (...)***
  %1 = getelementptr { [3 x i8*] }, { [3 x i8*] }* @_ZTVN8objectir4TypeE, i32 0, i32 0, i32 2
  %2 = bitcast i8** %1 to i32 (...)**
  store i32 (...)** %2, i32 (...)*** %0, align 8
  %code2 = getelementptr inbounds %"struct.objectir::Type", %"struct.objectir::Type"* %this1, i32 0, i32 1
  %3 = load i32, i32* %code.addr, align 4
  store i32 %3, i32* %code2, align 8
  ret void
}

declare dso_local void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_ZN8objectir4TypeD2Ev(%"struct.objectir::Type"* %this) unnamed_addr #6 align 2 {
entry:
  %this.addr = alloca %"struct.objectir::Type"*, align 8
  store %"struct.objectir::Type"* %this, %"struct.objectir::Type"** %this.addr, align 8
  %this1 = load %"struct.objectir::Type"*, %"struct.objectir::Type"** %this.addr, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_ZN8objectir10ObjectTypeC2Ev(%"struct.objectir::ObjectType"* %this) unnamed_addr #6 align 2 {
entry:
  %this.addr = alloca %"struct.objectir::ObjectType"*, align 8
  store %"struct.objectir::ObjectType"* %this, %"struct.objectir::ObjectType"** %this.addr, align 8
  %this1 = load %"struct.objectir::ObjectType"*, %"struct.objectir::ObjectType"** %this.addr, align 8
  %0 = bitcast %"struct.objectir::ObjectType"* %this1 to %"struct.objectir::Type"*
  call void @_ZN8objectir4TypeC2ENS_8TypeCodeE(%"struct.objectir::Type"* %0, i32 0)
  %1 = bitcast %"struct.objectir::ObjectType"* %this1 to i32 (...)***
  %2 = getelementptr { [3 x i8*] }, { [3 x i8*] }* @_ZTVN8objectir10ObjectTypeE, i32 0, i32 0, i32 2
  %3 = bitcast i8** %2 to i32 (...)**
  store i32 (...)** %3, i32 (...)*** %1, align 8
  %fields = getelementptr inbounds %"struct.objectir::ObjectType", %"struct.objectir::ObjectType"* %this1, i32 0, i32 1
  call void @_ZNSt6vectorIPN8objectir4TypeESaIS2_EEC2Ev(%"class.std::vector.3"* %fields) #3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIPN8objectir4TypeESaIS2_EEC2Ev(%"class.std::vector.3"* %this) unnamed_addr #6 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %this, %"class.std::vector.3"** %this.addr, align 8
  %this1 = load %"class.std::vector.3"*, %"class.std::vector.3"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.3"* %this1 to %"struct.std::_Vector_base.4"*
  invoke void @_ZNSt12_Vector_baseIPN8objectir4TypeESaIS2_EEC2Ev(%"struct.std::_Vector_base.4"* %0)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  ret void

terminate.lpad:                                   ; preds = %entry
  %1 = landingpad { i8*, i32 }
          catch i8* null
  %2 = extractvalue { i8*, i32 } %1, 0
  call void @__clang_call_terminate(i8* %2) #14
  unreachable
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIPN8objectir4TypeESaIS2_EEC2Ev(%"struct.std::_Vector_base.4"* %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base.4"*, align 8
  store %"struct.std::_Vector_base.4"* %this, %"struct.std::_Vector_base.4"** %this.addr, align 8
  %this1 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %this.addr, align 8
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %this1, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIPN8objectir4TypeESaIS2_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<objectir::Type *, std::allocator<objectir::Type *> >::_Vector_impl"* %_M_impl)
  ret void
}

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8*) #7 comdat {
  %2 = call i8* @__cxa_begin_catch(i8* %0) #3
  call void @_ZSt9terminatev() #14
  unreachable
}

declare dso_local i8* @__cxa_begin_catch(i8*)

declare dso_local void @_ZSt9terminatev()

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIPN8objectir4TypeESaIS2_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<objectir::Type *, std::allocator<objectir::Type *> >::_Vector_impl"* %this) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base<objectir::Type *, std::allocator<objectir::Type *> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<objectir::Type *, std::allocator<objectir::Type *> >::_Vector_impl"* %this, %"struct.std::_Vector_base<objectir::Type *, std::allocator<objectir::Type *> >::_Vector_impl"** %this.addr, align 8
  %this1 = load %"struct.std::_Vector_base<objectir::Type *, std::allocator<objectir::Type *> >::_Vector_impl"*, %"struct.std::_Vector_base<objectir::Type *, std::allocator<objectir::Type *> >::_Vector_impl"** %this.addr, align 8
  %0 = bitcast %"struct.std::_Vector_base<objectir::Type *, std::allocator<objectir::Type *> >::_Vector_impl"* %this1 to %"class.std::ios_base::Init"*
  call void @_ZNSaIPN8objectir4TypeEEC2Ev(%"class.std::ios_base::Init"* %0) #3
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<objectir::Type *, std::allocator<objectir::Type *> >::_Vector_impl", %"struct.std::_Vector_base<objectir::Type *, std::allocator<objectir::Type *> >::_Vector_impl"* %this1, i32 0, i32 0
  store %"struct.objectir::Type"** null, %"struct.objectir::Type"*** %_M_start, align 8
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<objectir::Type *, std::allocator<objectir::Type *> >::_Vector_impl", %"struct.std::_Vector_base<objectir::Type *, std::allocator<objectir::Type *> >::_Vector_impl"* %this1, i32 0, i32 1
  store %"struct.objectir::Type"** null, %"struct.objectir::Type"*** %_M_finish, align 8
  %_M_end_of_storage = getelementptr inbounds %"struct.std::_Vector_base<objectir::Type *, std::allocator<objectir::Type *> >::_Vector_impl", %"struct.std::_Vector_base<objectir::Type *, std::allocator<objectir::Type *> >::_Vector_impl"* %this1, i32 0, i32 2
  store %"struct.objectir::Type"** null, %"struct.objectir::Type"*** %_M_end_of_storage, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSaIPN8objectir4TypeEEC2Ev(%"class.std::ios_base::Init"* %this) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::ios_base::Init"*, align 8
  store %"class.std::ios_base::Init"* %this, %"class.std::ios_base::Init"** %this.addr, align 8
  %this1 = load %"class.std::ios_base::Init"*, %"class.std::ios_base::Init"** %this.addr, align 8
  %0 = bitcast %"class.std::ios_base::Init"* %this1 to %"class.std::ios_base::Init"*
  call void @_ZN9__gnu_cxx13new_allocatorIPN8objectir4TypeEEC2Ev(%"class.std::ios_base::Init"* %0) #3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIPN8objectir4TypeEEC2Ev(%"class.std::ios_base::Init"* %this) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::ios_base::Init"*, align 8
  store %"class.std::ios_base::Init"* %this, %"class.std::ios_base::Init"** %this.addr, align 8
  %this1 = load %"class.std::ios_base::Init"*, %"class.std::ios_base::Init"** %this.addr, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_ZN8objectir10ObjectTypeD2Ev(%"struct.objectir::ObjectType"* %this) unnamed_addr #6 align 2 {
entry:
  %this.addr = alloca %"struct.objectir::ObjectType"*, align 8
  %__range1 = alloca %"class.std::vector.3"*, align 8
  %__begin1 = alloca %"class.__gnu_cxx::__normal_iterator.8", align 8
  %__end1 = alloca %"class.__gnu_cxx::__normal_iterator.8", align 8
  %field = alloca %"struct.objectir::Type"*, align 8
  store %"struct.objectir::ObjectType"* %this, %"struct.objectir::ObjectType"** %this.addr, align 8
  %this1 = load %"struct.objectir::ObjectType"*, %"struct.objectir::ObjectType"** %this.addr, align 8
  %0 = bitcast %"struct.objectir::ObjectType"* %this1 to i32 (...)***
  %1 = getelementptr { [3 x i8*] }, { [3 x i8*] }* @_ZTVN8objectir10ObjectTypeE, i32 0, i32 0, i32 2
  %2 = bitcast i8** %1 to i32 (...)**
  store i32 (...)** %2, i32 (...)*** %0, align 8
  %fields = getelementptr inbounds %"struct.objectir::ObjectType", %"struct.objectir::ObjectType"* %this1, i32 0, i32 1
  store %"class.std::vector.3"* %fields, %"class.std::vector.3"** %__range1, align 8
  %3 = load %"class.std::vector.3"*, %"class.std::vector.3"** %__range1, align 8
  %call = call %"struct.objectir::Type"** @_ZNSt6vectorIPN8objectir4TypeESaIS2_EE5beginEv(%"class.std::vector.3"* %3) #3
  %coerce.dive = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.8", %"class.__gnu_cxx::__normal_iterator.8"* %__begin1, i32 0, i32 0
  store %"struct.objectir::Type"** %call, %"struct.objectir::Type"*** %coerce.dive, align 8
  %4 = load %"class.std::vector.3"*, %"class.std::vector.3"** %__range1, align 8
  %call2 = call %"struct.objectir::Type"** @_ZNSt6vectorIPN8objectir4TypeESaIS2_EE3endEv(%"class.std::vector.3"* %4) #3
  %coerce.dive3 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.8", %"class.__gnu_cxx::__normal_iterator.8"* %__end1, i32 0, i32 0
  store %"struct.objectir::Type"** %call2, %"struct.objectir::Type"*** %coerce.dive3, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %call4 = call zeroext i1 @_ZN9__gnu_cxxneIPPN8objectir4TypeESt6vectorIS3_SaIS3_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_(%"class.__gnu_cxx::__normal_iterator.8"* dereferenceable(8) %__begin1, %"class.__gnu_cxx::__normal_iterator.8"* dereferenceable(8) %__end1) #3
  br i1 %call4, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %call5 = call dereferenceable(8) %"struct.objectir::Type"** @_ZNK9__gnu_cxx17__normal_iteratorIPPN8objectir4TypeESt6vectorIS3_SaIS3_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.8"* %__begin1) #3
  %5 = load %"struct.objectir::Type"*, %"struct.objectir::Type"** %call5, align 8
  store %"struct.objectir::Type"* %5, %"struct.objectir::Type"** %field, align 8
  %6 = load %"struct.objectir::Type"*, %"struct.objectir::Type"** %field, align 8
  %isnull = icmp eq %"struct.objectir::Type"* %6, null
  br i1 %isnull, label %for.body.delete.end_crit_edge, label %delete.notnull

for.body.delete.end_crit_edge:                    ; preds = %for.body
  br label %delete.end

delete.notnull:                                   ; preds = %for.body
  call void @_ZN8objectir4TypeD1Ev(%"struct.objectir::Type"* %6) #3
  %7 = bitcast %"struct.objectir::Type"* %6 to i8*
  call void @_ZdlPv(i8* %7) #15
  br label %delete.end

delete.end:                                       ; preds = %for.body.delete.end_crit_edge, %delete.notnull
  br label %for.inc

for.inc:                                          ; preds = %delete.end
  %call6 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.8"* @_ZN9__gnu_cxx17__normal_iteratorIPPN8objectir4TypeESt6vectorIS3_SaIS3_EEEppEv(%"class.__gnu_cxx::__normal_iterator.8"* %__begin1) #3
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %fields7 = getelementptr inbounds %"struct.objectir::ObjectType", %"struct.objectir::ObjectType"* %this1, i32 0, i32 1
  call void @_ZNSt6vectorIPN8objectir4TypeESaIS2_EED2Ev(%"class.std::vector.3"* %fields7) #3
  %8 = bitcast %"struct.objectir::ObjectType"* %this1 to %"struct.objectir::Type"*
  call void @_ZN8objectir4TypeD2Ev(%"struct.objectir::Type"* %8) #3
  ret void
}

; Function Attrs: nobuiltin nounwind
declare dso_local void @_ZdlPv(i8*) #8

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIPN8objectir4TypeESaIS2_EED2Ev(%"class.std::vector.3"* %this) unnamed_addr #6 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.std::vector.3"*, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  store %"class.std::vector.3"* %this, %"class.std::vector.3"** %this.addr, align 8
  %this1 = load %"class.std::vector.3"*, %"class.std::vector.3"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.3"* %this1 to %"struct.std::_Vector_base.4"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %0, i32 0, i32 0
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<objectir::Type *, std::allocator<objectir::Type *> >::_Vector_impl", %"struct.std::_Vector_base<objectir::Type *, std::allocator<objectir::Type *> >::_Vector_impl"* %_M_impl, i32 0, i32 0
  %1 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %_M_start, align 8
  %2 = bitcast %"class.std::vector.3"* %this1 to %"struct.std::_Vector_base.4"*
  %_M_impl2 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %2, i32 0, i32 0
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<objectir::Type *, std::allocator<objectir::Type *> >::_Vector_impl", %"struct.std::_Vector_base<objectir::Type *, std::allocator<objectir::Type *> >::_Vector_impl"* %_M_impl2, i32 0, i32 1
  %3 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %_M_finish, align 8
  %4 = bitcast %"class.std::vector.3"* %this1 to %"struct.std::_Vector_base.4"*
  %call = call dereferenceable(1) %"class.std::ios_base::Init"* @_ZNSt12_Vector_baseIPN8objectir4TypeESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %4) #3
  invoke void @_ZSt8_DestroyIPPN8objectir4TypeES2_EvT_S4_RSaIT0_E(%"struct.objectir::Type"** %1, %"struct.objectir::Type"** %3, %"class.std::ios_base::Init"* dereferenceable(1) %call)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %5 = bitcast %"class.std::vector.3"* %this1 to %"struct.std::_Vector_base.4"*
  call void @_ZNSt12_Vector_baseIPN8objectir4TypeESaIS2_EED2Ev(%"struct.std::_Vector_base.4"* %5) #3
  ret void

lpad:                                             ; preds = %entry
  %6 = landingpad { i8*, i32 }
          catch i8* null
  %7 = extractvalue { i8*, i32 } %6, 0
  store i8* %7, i8** %exn.slot, align 8
  %8 = extractvalue { i8*, i32 } %6, 1
  store i32 %8, i32* %ehselector.slot, align 4
  %9 = bitcast %"class.std::vector.3"* %this1 to %"struct.std::_Vector_base.4"*
  call void @_ZNSt12_Vector_baseIPN8objectir4TypeESaIS2_EED2Ev(%"struct.std::_Vector_base.4"* %9) #3
  br label %terminate.handler

terminate.handler:                                ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  call void @__clang_call_terminate(i8* %exn) #14
  unreachable
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(1) %"class.std::ios_base::Init"* @_ZNSt12_Vector_baseIPN8objectir4TypeESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %this) #6 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base.4"*, align 8
  store %"struct.std::_Vector_base.4"* %this, %"struct.std::_Vector_base.4"** %this.addr, align 8
  %this1 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %this.addr, align 8
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %this1, i32 0, i32 0
  %0 = bitcast %"struct.std::_Vector_base<objectir::Type *, std::allocator<objectir::Type *> >::_Vector_impl"* %_M_impl to %"class.std::ios_base::Init"*
  ret %"class.std::ios_base::Init"* %0
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZSt8_DestroyIPPN8objectir4TypeES2_EvT_S4_RSaIT0_E(%"struct.objectir::Type"** %__first, %"struct.objectir::Type"** %__last, %"class.std::ios_base::Init"* dereferenceable(1)) #5 comdat {
entry:
  %__first.addr = alloca %"struct.objectir::Type"**, align 8
  %__last.addr = alloca %"struct.objectir::Type"**, align 8
  %.addr = alloca %"class.std::ios_base::Init"*, align 8
  store %"struct.objectir::Type"** %__first, %"struct.objectir::Type"*** %__first.addr, align 8
  store %"struct.objectir::Type"** %__last, %"struct.objectir::Type"*** %__last.addr, align 8
  store %"class.std::ios_base::Init"* %0, %"class.std::ios_base::Init"** %.addr, align 8
  %1 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %__first.addr, align 8
  %2 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %__last.addr, align 8
  call void @_ZSt8_DestroyIPPN8objectir4TypeEEvT_S4_(%"struct.objectir::Type"** %1, %"struct.objectir::Type"** %2)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIPN8objectir4TypeESaIS2_EED2Ev(%"struct.std::_Vector_base.4"* %this) unnamed_addr #6 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"struct.std::_Vector_base.4"*, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  store %"struct.std::_Vector_base.4"* %this, %"struct.std::_Vector_base.4"** %this.addr, align 8
  %this1 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %this.addr, align 8
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %this1, i32 0, i32 0
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<objectir::Type *, std::allocator<objectir::Type *> >::_Vector_impl", %"struct.std::_Vector_base<objectir::Type *, std::allocator<objectir::Type *> >::_Vector_impl"* %_M_impl, i32 0, i32 0
  %0 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %_M_start, align 8
  %_M_impl2 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %this1, i32 0, i32 0
  %_M_end_of_storage = getelementptr inbounds %"struct.std::_Vector_base<objectir::Type *, std::allocator<objectir::Type *> >::_Vector_impl", %"struct.std::_Vector_base<objectir::Type *, std::allocator<objectir::Type *> >::_Vector_impl"* %_M_impl2, i32 0, i32 2
  %1 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %_M_end_of_storage, align 8
  %_M_impl3 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %this1, i32 0, i32 0
  %_M_start4 = getelementptr inbounds %"struct.std::_Vector_base<objectir::Type *, std::allocator<objectir::Type *> >::_Vector_impl", %"struct.std::_Vector_base<objectir::Type *, std::allocator<objectir::Type *> >::_Vector_impl"* %_M_impl3, i32 0, i32 0
  %2 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %_M_start4, align 8
  %sub.ptr.lhs.cast = ptrtoint %"struct.objectir::Type"** %1 to i64
  %sub.ptr.rhs.cast = ptrtoint %"struct.objectir::Type"** %2 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  invoke void @_ZNSt12_Vector_baseIPN8objectir4TypeESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.4"* %this1, %"struct.objectir::Type"** %0, i64 %sub.ptr.div)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %_M_impl5 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %this1, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIPN8objectir4TypeESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<objectir::Type *, std::allocator<objectir::Type *> >::_Vector_impl"* %_M_impl5) #3
  ret void

lpad:                                             ; preds = %entry
  %3 = landingpad { i8*, i32 }
          catch i8* null
  %4 = extractvalue { i8*, i32 } %3, 0
  store i8* %4, i8** %exn.slot, align 8
  %5 = extractvalue { i8*, i32 } %3, 1
  store i32 %5, i32* %ehselector.slot, align 4
  %_M_impl6 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %this1, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIPN8objectir4TypeESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<objectir::Type *, std::allocator<objectir::Type *> >::_Vector_impl"* %_M_impl6) #3
  br label %terminate.handler

terminate.handler:                                ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  call void @__clang_call_terminate(i8* %exn) #14
  unreachable
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIPN8objectir4TypeESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.4"* %this, %"struct.objectir::Type"** %__p, i64 %__n) #5 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base.4"*, align 8
  %__p.addr = alloca %"struct.objectir::Type"**, align 8
  %__n.addr = alloca i64, align 8
  store %"struct.std::_Vector_base.4"* %this, %"struct.std::_Vector_base.4"** %this.addr, align 8
  store %"struct.objectir::Type"** %__p, %"struct.objectir::Type"*** %__p.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  %this1 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %this.addr, align 8
  %0 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %__p.addr, align 8
  %tobool = icmp ne %"struct.objectir::Type"** %0, null
  br i1 %tobool, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  br label %if.end

if.then:                                          ; preds = %entry
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %this1, i32 0, i32 0
  %1 = bitcast %"struct.std::_Vector_base<objectir::Type *, std::allocator<objectir::Type *> >::_Vector_impl"* %_M_impl to %"class.std::ios_base::Init"*
  %2 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %__p.addr, align 8
  %3 = load i64, i64* %__n.addr, align 8
  call void @_ZNSt16allocator_traitsISaIPN8objectir4TypeEEE10deallocateERS3_PS2_m(%"class.std::ios_base::Init"* dereferenceable(1) %1, %"struct.objectir::Type"** %2, i64 %3)
  br label %if.end

if.end:                                           ; preds = %entry.if.end_crit_edge, %if.then
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIPN8objectir4TypeESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<objectir::Type *, std::allocator<objectir::Type *> >::_Vector_impl"* %this) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base<objectir::Type *, std::allocator<objectir::Type *> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<objectir::Type *, std::allocator<objectir::Type *> >::_Vector_impl"* %this, %"struct.std::_Vector_base<objectir::Type *, std::allocator<objectir::Type *> >::_Vector_impl"** %this.addr, align 8
  %this1 = load %"struct.std::_Vector_base<objectir::Type *, std::allocator<objectir::Type *> >::_Vector_impl"*, %"struct.std::_Vector_base<objectir::Type *, std::allocator<objectir::Type *> >::_Vector_impl"** %this.addr, align 8
  %0 = bitcast %"struct.std::_Vector_base<objectir::Type *, std::allocator<objectir::Type *> >::_Vector_impl"* %this1 to %"class.std::ios_base::Init"*
  call void @_ZNSaIPN8objectir4TypeEED2Ev(%"class.std::ios_base::Init"* %0) #3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSaIPN8objectir4TypeEED2Ev(%"class.std::ios_base::Init"* %this) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::ios_base::Init"*, align 8
  store %"class.std::ios_base::Init"* %this, %"class.std::ios_base::Init"** %this.addr, align 8
  %this1 = load %"class.std::ios_base::Init"*, %"class.std::ios_base::Init"** %this.addr, align 8
  %0 = bitcast %"class.std::ios_base::Init"* %this1 to %"class.std::ios_base::Init"*
  call void @_ZN9__gnu_cxx13new_allocatorIPN8objectir4TypeEED2Ev(%"class.std::ios_base::Init"* %0) #3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIPN8objectir4TypeEED2Ev(%"class.std::ios_base::Init"* %this) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::ios_base::Init"*, align 8
  store %"class.std::ios_base::Init"* %this, %"class.std::ios_base::Init"** %this.addr, align 8
  %this1 = load %"class.std::ios_base::Init"*, %"class.std::ios_base::Init"** %this.addr, align 8
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt16allocator_traitsISaIPN8objectir4TypeEEE10deallocateERS3_PS2_m(%"class.std::ios_base::Init"* dereferenceable(1) %__a, %"struct.objectir::Type"** %__p, i64 %__n) #5 comdat align 2 {
entry:
  %__a.addr = alloca %"class.std::ios_base::Init"*, align 8
  %__p.addr = alloca %"struct.objectir::Type"**, align 8
  %__n.addr = alloca i64, align 8
  store %"class.std::ios_base::Init"* %__a, %"class.std::ios_base::Init"** %__a.addr, align 8
  store %"struct.objectir::Type"** %__p, %"struct.objectir::Type"*** %__p.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  %0 = load %"class.std::ios_base::Init"*, %"class.std::ios_base::Init"** %__a.addr, align 8
  %1 = bitcast %"class.std::ios_base::Init"* %0 to %"class.std::ios_base::Init"*
  %2 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %__p.addr, align 8
  %3 = load i64, i64* %__n.addr, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIPN8objectir4TypeEE10deallocateEPS3_m(%"class.std::ios_base::Init"* %1, %"struct.objectir::Type"** %2, i64 %3)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIPN8objectir4TypeEE10deallocateEPS3_m(%"class.std::ios_base::Init"* %this, %"struct.objectir::Type"** %__p, i64) #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::ios_base::Init"*, align 8
  %__p.addr = alloca %"struct.objectir::Type"**, align 8
  %.addr = alloca i64, align 8
  store %"class.std::ios_base::Init"* %this, %"class.std::ios_base::Init"** %this.addr, align 8
  store %"struct.objectir::Type"** %__p, %"struct.objectir::Type"*** %__p.addr, align 8
  store i64 %0, i64* %.addr, align 8
  %this1 = load %"class.std::ios_base::Init"*, %"class.std::ios_base::Init"** %this.addr, align 8
  %1 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %__p.addr, align 8
  %2 = bitcast %"struct.objectir::Type"** %1 to i8*
  call void @_ZdlPv(i8* %2) #3
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZSt8_DestroyIPPN8objectir4TypeEEvT_S4_(%"struct.objectir::Type"** %__first, %"struct.objectir::Type"** %__last) #5 comdat {
entry:
  %__first.addr = alloca %"struct.objectir::Type"**, align 8
  %__last.addr = alloca %"struct.objectir::Type"**, align 8
  store %"struct.objectir::Type"** %__first, %"struct.objectir::Type"*** %__first.addr, align 8
  store %"struct.objectir::Type"** %__last, %"struct.objectir::Type"*** %__last.addr, align 8
  %0 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %__first.addr, align 8
  %1 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %__last.addr, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPPN8objectir4TypeEEEvT_S6_(%"struct.objectir::Type"** %0, %"struct.objectir::Type"** %1)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt12_Destroy_auxILb1EE9__destroyIPPN8objectir4TypeEEEvT_S6_(%"struct.objectir::Type"**, %"struct.objectir::Type"**) #6 comdat align 2 {
entry:
  %.addr = alloca %"struct.objectir::Type"**, align 8
  %.addr1 = alloca %"struct.objectir::Type"**, align 8
  store %"struct.objectir::Type"** %0, %"struct.objectir::Type"*** %.addr, align 8
  store %"struct.objectir::Type"** %1, %"struct.objectir::Type"*** %.addr1, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_ZN8objectir9ArrayTypeC2EPNS_4TypeE(%"struct.objectir::ArrayType"* %this, %"struct.objectir::Type"* %type) unnamed_addr #6 align 2 {
entry:
  %this.addr = alloca %"struct.objectir::ArrayType"*, align 8
  %type.addr = alloca %"struct.objectir::Type"*, align 8
  store %"struct.objectir::ArrayType"* %this, %"struct.objectir::ArrayType"** %this.addr, align 8
  store %"struct.objectir::Type"* %type, %"struct.objectir::Type"** %type.addr, align 8
  %this1 = load %"struct.objectir::ArrayType"*, %"struct.objectir::ArrayType"** %this.addr, align 8
  %0 = bitcast %"struct.objectir::ArrayType"* %this1 to %"struct.objectir::Type"*
  call void @_ZN8objectir4TypeC2ENS_8TypeCodeE(%"struct.objectir::Type"* %0, i32 1)
  %1 = bitcast %"struct.objectir::ArrayType"* %this1 to i32 (...)***
  %2 = getelementptr { [3 x i8*] }, { [3 x i8*] }* @_ZTVN8objectir9ArrayTypeE, i32 0, i32 0, i32 2
  %3 = bitcast i8** %2 to i32 (...)**
  store i32 (...)** %3, i32 (...)*** %1, align 8
  %elementType = getelementptr inbounds %"struct.objectir::ArrayType", %"struct.objectir::ArrayType"* %this1, i32 0, i32 1
  %4 = load %"struct.objectir::Type"*, %"struct.objectir::Type"** %type.addr, align 8
  store %"struct.objectir::Type"* %4, %"struct.objectir::Type"** %elementType, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_ZN8objectir9ArrayTypeD2Ev(%"struct.objectir::ArrayType"* %this) unnamed_addr #6 align 2 {
entry:
  %this.addr = alloca %"struct.objectir::ArrayType"*, align 8
  store %"struct.objectir::ArrayType"* %this, %"struct.objectir::ArrayType"** %this.addr, align 8
  %this1 = load %"struct.objectir::ArrayType"*, %"struct.objectir::ArrayType"** %this.addr, align 8
  %0 = bitcast %"struct.objectir::ArrayType"* %this1 to i32 (...)***
  %1 = getelementptr { [3 x i8*] }, { [3 x i8*] }* @_ZTVN8objectir9ArrayTypeE, i32 0, i32 0, i32 2
  %2 = bitcast i8** %1 to i32 (...)**
  store i32 (...)** %2, i32 (...)*** %0, align 8
  %elementType = getelementptr inbounds %"struct.objectir::ArrayType", %"struct.objectir::ArrayType"* %this1, i32 0, i32 1
  %3 = load %"struct.objectir::Type"*, %"struct.objectir::Type"** %elementType, align 8
  %isnull = icmp eq %"struct.objectir::Type"* %3, null
  br i1 %isnull, label %entry.delete.end_crit_edge, label %delete.notnull

entry.delete.end_crit_edge:                       ; preds = %entry
  br label %delete.end

delete.notnull:                                   ; preds = %entry
  call void @_ZN8objectir4TypeD1Ev(%"struct.objectir::Type"* %3) #3
  %4 = bitcast %"struct.objectir::Type"* %3 to i8*
  call void @_ZdlPv(i8* %4) #15
  br label %delete.end

delete.end:                                       ; preds = %entry.delete.end_crit_edge, %delete.notnull
  %5 = bitcast %"struct.objectir::ArrayType"* %this1 to %"struct.objectir::Type"*
  call void @_ZN8objectir4TypeD2Ev(%"struct.objectir::Type"* %5) #3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_ZN8objectir9UnionTypeC2Ev(%"struct.objectir::ObjectType"* %this) unnamed_addr #6 align 2 {
entry:
  %this.addr = alloca %"struct.objectir::ObjectType"*, align 8
  store %"struct.objectir::ObjectType"* %this, %"struct.objectir::ObjectType"** %this.addr, align 8
  %this1 = load %"struct.objectir::ObjectType"*, %"struct.objectir::ObjectType"** %this.addr, align 8
  %0 = bitcast %"struct.objectir::ObjectType"* %this1 to %"struct.objectir::Type"*
  call void @_ZN8objectir4TypeC2ENS_8TypeCodeE(%"struct.objectir::Type"* %0, i32 2)
  %1 = bitcast %"struct.objectir::ObjectType"* %this1 to i32 (...)***
  %2 = getelementptr { [3 x i8*] }, { [3 x i8*] }* @_ZTVN8objectir9UnionTypeE, i32 0, i32 0, i32 2
  %3 = bitcast i8** %2 to i32 (...)**
  store i32 (...)** %3, i32 (...)*** %1, align 8
  %members = getelementptr inbounds %"struct.objectir::ObjectType", %"struct.objectir::ObjectType"* %this1, i32 0, i32 1
  call void @_ZNSt6vectorIPN8objectir4TypeESaIS2_EEC2Ev(%"class.std::vector.3"* %members) #3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_ZN8objectir9UnionTypeD2Ev(%"struct.objectir::ObjectType"* %this) unnamed_addr #6 align 2 {
entry:
  %this.addr = alloca %"struct.objectir::ObjectType"*, align 8
  %__range1 = alloca %"class.std::vector.3"*, align 8
  %__begin1 = alloca %"class.__gnu_cxx::__normal_iterator.8", align 8
  %__end1 = alloca %"class.__gnu_cxx::__normal_iterator.8", align 8
  %member = alloca %"struct.objectir::Type"*, align 8
  store %"struct.objectir::ObjectType"* %this, %"struct.objectir::ObjectType"** %this.addr, align 8
  %this1 = load %"struct.objectir::ObjectType"*, %"struct.objectir::ObjectType"** %this.addr, align 8
  %0 = bitcast %"struct.objectir::ObjectType"* %this1 to i32 (...)***
  %1 = getelementptr { [3 x i8*] }, { [3 x i8*] }* @_ZTVN8objectir9UnionTypeE, i32 0, i32 0, i32 2
  %2 = bitcast i8** %1 to i32 (...)**
  store i32 (...)** %2, i32 (...)*** %0, align 8
  %members = getelementptr inbounds %"struct.objectir::ObjectType", %"struct.objectir::ObjectType"* %this1, i32 0, i32 1
  store %"class.std::vector.3"* %members, %"class.std::vector.3"** %__range1, align 8
  %3 = load %"class.std::vector.3"*, %"class.std::vector.3"** %__range1, align 8
  %call = call %"struct.objectir::Type"** @_ZNSt6vectorIPN8objectir4TypeESaIS2_EE5beginEv(%"class.std::vector.3"* %3) #3
  %coerce.dive = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.8", %"class.__gnu_cxx::__normal_iterator.8"* %__begin1, i32 0, i32 0
  store %"struct.objectir::Type"** %call, %"struct.objectir::Type"*** %coerce.dive, align 8
  %4 = load %"class.std::vector.3"*, %"class.std::vector.3"** %__range1, align 8
  %call2 = call %"struct.objectir::Type"** @_ZNSt6vectorIPN8objectir4TypeESaIS2_EE3endEv(%"class.std::vector.3"* %4) #3
  %coerce.dive3 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.8", %"class.__gnu_cxx::__normal_iterator.8"* %__end1, i32 0, i32 0
  store %"struct.objectir::Type"** %call2, %"struct.objectir::Type"*** %coerce.dive3, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %call4 = call zeroext i1 @_ZN9__gnu_cxxneIPPN8objectir4TypeESt6vectorIS3_SaIS3_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_(%"class.__gnu_cxx::__normal_iterator.8"* dereferenceable(8) %__begin1, %"class.__gnu_cxx::__normal_iterator.8"* dereferenceable(8) %__end1) #3
  br i1 %call4, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %call5 = call dereferenceable(8) %"struct.objectir::Type"** @_ZNK9__gnu_cxx17__normal_iteratorIPPN8objectir4TypeESt6vectorIS3_SaIS3_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.8"* %__begin1) #3
  %5 = load %"struct.objectir::Type"*, %"struct.objectir::Type"** %call5, align 8
  store %"struct.objectir::Type"* %5, %"struct.objectir::Type"** %member, align 8
  %6 = load %"struct.objectir::Type"*, %"struct.objectir::Type"** %member, align 8
  %isnull = icmp eq %"struct.objectir::Type"* %6, null
  br i1 %isnull, label %for.body.delete.end_crit_edge, label %delete.notnull

for.body.delete.end_crit_edge:                    ; preds = %for.body
  br label %delete.end

delete.notnull:                                   ; preds = %for.body
  call void @_ZN8objectir4TypeD1Ev(%"struct.objectir::Type"* %6) #3
  %7 = bitcast %"struct.objectir::Type"* %6 to i8*
  call void @_ZdlPv(i8* %7) #15
  br label %delete.end

delete.end:                                       ; preds = %for.body.delete.end_crit_edge, %delete.notnull
  br label %for.inc

for.inc:                                          ; preds = %delete.end
  %call6 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.8"* @_ZN9__gnu_cxx17__normal_iteratorIPPN8objectir4TypeESt6vectorIS3_SaIS3_EEEppEv(%"class.__gnu_cxx::__normal_iterator.8"* %__begin1) #3
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %members7 = getelementptr inbounds %"struct.objectir::ObjectType", %"struct.objectir::ObjectType"* %this1, i32 0, i32 1
  call void @_ZNSt6vectorIPN8objectir4TypeESaIS2_EED2Ev(%"class.std::vector.3"* %members7) #3
  %8 = bitcast %"struct.objectir::ObjectType"* %this1 to %"struct.objectir::Type"*
  call void @_ZN8objectir4TypeD2Ev(%"struct.objectir::Type"* %8) #3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_ZN8objectir11IntegerTypeC2Emb(%"struct.objectir::IntegerType"* %this, i64 %bitwidth, i1 zeroext %isSigned) unnamed_addr #6 align 2 {
entry:
  %this.addr = alloca %"struct.objectir::IntegerType"*, align 8
  %bitwidth.addr = alloca i64, align 8
  %isSigned.addr = alloca i8, align 1
  store %"struct.objectir::IntegerType"* %this, %"struct.objectir::IntegerType"** %this.addr, align 8
  store i64 %bitwidth, i64* %bitwidth.addr, align 8
  %frombool = zext i1 %isSigned to i8
  store i8 %frombool, i8* %isSigned.addr, align 1
  %this1 = load %"struct.objectir::IntegerType"*, %"struct.objectir::IntegerType"** %this.addr, align 8
  %0 = bitcast %"struct.objectir::IntegerType"* %this1 to %"struct.objectir::Type"*
  call void @_ZN8objectir4TypeC2ENS_8TypeCodeE(%"struct.objectir::Type"* %0, i32 3)
  %1 = bitcast %"struct.objectir::IntegerType"* %this1 to i32 (...)***
  %2 = getelementptr { [3 x i8*] }, { [3 x i8*] }* @_ZTVN8objectir11IntegerTypeE, i32 0, i32 0, i32 2
  %3 = bitcast i8** %2 to i32 (...)**
  store i32 (...)** %3, i32 (...)*** %1, align 8
  %bitwidth2 = getelementptr inbounds %"struct.objectir::IntegerType", %"struct.objectir::IntegerType"* %this1, i32 0, i32 2
  %4 = load i64, i64* %bitwidth.addr, align 8
  store i64 %4, i64* %bitwidth2, align 8
  %isSigned3 = getelementptr inbounds %"struct.objectir::IntegerType", %"struct.objectir::IntegerType"* %this1, i32 0, i32 3
  %5 = load i8, i8* %isSigned.addr, align 1
  %tobool = trunc i8 %5 to i1
  %frombool4 = zext i1 %tobool to i8
  store i8 %frombool4, i8* %isSigned3, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_ZN8objectir11IntegerTypeD2Ev(%"struct.objectir::IntegerType"* %this) unnamed_addr #6 align 2 {
entry:
  %this.addr = alloca %"struct.objectir::IntegerType"*, align 8
  store %"struct.objectir::IntegerType"* %this, %"struct.objectir::IntegerType"** %this.addr, align 8
  %this1 = load %"struct.objectir::IntegerType"*, %"struct.objectir::IntegerType"** %this.addr, align 8
  %0 = bitcast %"struct.objectir::IntegerType"* %this1 to %"struct.objectir::Type"*
  call void @_ZN8objectir4TypeD2Ev(%"struct.objectir::Type"* %0) #3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_ZN8objectir9FloatTypeC2Ev(%"struct.objectir::FloatType"* %this) unnamed_addr #6 align 2 {
entry:
  %this.addr = alloca %"struct.objectir::FloatType"*, align 8
  store %"struct.objectir::FloatType"* %this, %"struct.objectir::FloatType"** %this.addr, align 8
  %this1 = load %"struct.objectir::FloatType"*, %"struct.objectir::FloatType"** %this.addr, align 8
  %0 = bitcast %"struct.objectir::FloatType"* %this1 to %"struct.objectir::Type"*
  call void @_ZN8objectir4TypeC2ENS_8TypeCodeE(%"struct.objectir::Type"* %0, i32 4)
  %1 = bitcast %"struct.objectir::FloatType"* %this1 to i32 (...)***
  %2 = getelementptr { [3 x i8*] }, { [3 x i8*] }* @_ZTVN8objectir9FloatTypeE, i32 0, i32 0, i32 2
  %3 = bitcast i8** %2 to i32 (...)**
  store i32 (...)** %3, i32 (...)*** %1, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_ZN8objectir9FloatTypeD2Ev(%"struct.objectir::FloatType"* %this) unnamed_addr #6 align 2 {
entry:
  %this.addr = alloca %"struct.objectir::FloatType"*, align 8
  store %"struct.objectir::FloatType"* %this, %"struct.objectir::FloatType"** %this.addr, align 8
  %this1 = load %"struct.objectir::FloatType"*, %"struct.objectir::FloatType"** %this.addr, align 8
  %0 = bitcast %"struct.objectir::FloatType"* %this1 to %"struct.objectir::Type"*
  call void @_ZN8objectir4TypeD2Ev(%"struct.objectir::Type"* %0) #3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_ZN8objectir10DoubleTypeC2Ev(%"struct.objectir::FloatType"* %this) unnamed_addr #6 align 2 {
entry:
  %this.addr = alloca %"struct.objectir::FloatType"*, align 8
  store %"struct.objectir::FloatType"* %this, %"struct.objectir::FloatType"** %this.addr, align 8
  %this1 = load %"struct.objectir::FloatType"*, %"struct.objectir::FloatType"** %this.addr, align 8
  %0 = bitcast %"struct.objectir::FloatType"* %this1 to %"struct.objectir::Type"*
  call void @_ZN8objectir4TypeC2ENS_8TypeCodeE(%"struct.objectir::Type"* %0, i32 5)
  %1 = bitcast %"struct.objectir::FloatType"* %this1 to i32 (...)***
  %2 = getelementptr { [3 x i8*] }, { [3 x i8*] }* @_ZTVN8objectir10DoubleTypeE, i32 0, i32 0, i32 2
  %3 = bitcast i8** %2 to i32 (...)**
  store i32 (...)** %3, i32 (...)*** %1, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_ZN8objectir10DoubleTypeD2Ev(%"struct.objectir::FloatType"* %this) unnamed_addr #6 align 2 {
entry:
  %this.addr = alloca %"struct.objectir::FloatType"*, align 8
  store %"struct.objectir::FloatType"* %this, %"struct.objectir::FloatType"** %this.addr, align 8
  %this1 = load %"struct.objectir::FloatType"*, %"struct.objectir::FloatType"** %this.addr, align 8
  %0 = bitcast %"struct.objectir::FloatType"* %this1 to %"struct.objectir::Type"*
  call void @_ZN8objectir4TypeD2Ev(%"struct.objectir::Type"* %0) #3
  ret void
}

; Function Attrs: noinline optnone uwtable
define dso_local %"struct.objectir::Type"* @getObjectType(i32 %numFields, ...) #5 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %numFields.addr = alloca i32, align 4
  %type = alloca %"struct.objectir::ObjectType"*, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %args = alloca [1 x %struct.__va_list_tag], align 16
  %i = alloca i32, align 4
  %arg = alloca %"struct.objectir::Type"*, align 8
  store i32 %numFields, i32* %numFields.addr, align 4
  %call = call i8* @_Znwm(i64 40) #16
  %0 = bitcast i8* %call to %"struct.objectir::ObjectType"*
  invoke void @_ZN8objectir10ObjectTypeC1Ev(%"struct.objectir::ObjectType"* %0)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  store %"struct.objectir::ObjectType"* %0, %"struct.objectir::ObjectType"** %type, align 8
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i64 0, i64 0
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*
  call void @llvm.va_start(i8* %arraydecay1)
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %invoke.cont
  %1 = load i32, i32* %i, align 4
  %2 = load i32, i32* %numFields.addr, align 4
  %cmp = icmp slt i32 %1, %2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i64 0, i64 0
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 0
  %gp_offset = load i32, i32* %gp_offset_p, align 16
  %fits_in_gp = icmp ule i32 %gp_offset, 40
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem

vaarg.in_reg:                                     ; preds = %for.body
  %3 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 3
  %reg_save_area = load i8*, i8** %3, align 16
  %4 = getelementptr i8, i8* %reg_save_area, i32 %gp_offset
  %5 = bitcast i8* %4 to %"struct.objectir::Type"**
  %6 = add i32 %gp_offset, 8
  store i32 %6, i32* %gp_offset_p, align 16
  br label %vaarg.end

lpad:                                             ; preds = %entry
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  store i8* %8, i8** %exn.slot, align 8
  %9 = extractvalue { i8*, i32 } %7, 1
  store i32 %9, i32* %ehselector.slot, align 4
  call void @_ZdlPv(i8* %call) #15
  br label %eh.resume

vaarg.in_mem:                                     ; preds = %for.body
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 2
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8
  %10 = bitcast i8* %overflow_arg_area to %"struct.objectir::Type"**
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i32 8
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8
  br label %vaarg.end

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr = phi %"struct.objectir::Type"** [ %5, %vaarg.in_reg ], [ %10, %vaarg.in_mem ]
  %11 = load %"struct.objectir::Type"*, %"struct.objectir::Type"** %vaarg.addr, align 8
  store %"struct.objectir::Type"* %11, %"struct.objectir::Type"** %arg, align 8
  %12 = load %"struct.objectir::ObjectType"*, %"struct.objectir::ObjectType"** %type, align 8
  %fields = getelementptr inbounds %"struct.objectir::ObjectType", %"struct.objectir::ObjectType"* %12, i32 0, i32 1
  call void @_ZNSt6vectorIPN8objectir4TypeESaIS2_EE9push_backERKS2_(%"class.std::vector.3"* %fields, %"struct.objectir::Type"** dereferenceable(8) %arg)
  br label %for.inc

for.inc:                                          ; preds = %vaarg.end
  %13 = load i32, i32* %i, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i64 0, i64 0
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*
  call void @llvm.va_end(i8* %arraydecay34)
  %14 = load %"struct.objectir::ObjectType"*, %"struct.objectir::ObjectType"** %type, align 8
  %15 = bitcast %"struct.objectir::ObjectType"* %14 to %"struct.objectir::Type"*
  ret %"struct.objectir::Type"* %15

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val5 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val5
}

; Function Attrs: nobuiltin
declare dso_local noalias i8* @_Znwm(i64) #9

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #3

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIPN8objectir4TypeESaIS2_EE9push_backERKS2_(%"class.std::vector.3"* %this, %"struct.objectir::Type"** dereferenceable(8) %__x) #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector.3"*, align 8
  %__x.addr = alloca %"struct.objectir::Type"**, align 8
  %agg.tmp = alloca %"class.__gnu_cxx::__normal_iterator.8", align 8
  store %"class.std::vector.3"* %this, %"class.std::vector.3"** %this.addr, align 8
  store %"struct.objectir::Type"** %__x, %"struct.objectir::Type"*** %__x.addr, align 8
  %this1 = load %"class.std::vector.3"*, %"class.std::vector.3"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.3"* %this1 to %"struct.std::_Vector_base.4"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %0, i32 0, i32 0
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<objectir::Type *, std::allocator<objectir::Type *> >::_Vector_impl", %"struct.std::_Vector_base<objectir::Type *, std::allocator<objectir::Type *> >::_Vector_impl"* %_M_impl, i32 0, i32 1
  %1 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %_M_finish, align 8
  %2 = bitcast %"class.std::vector.3"* %this1 to %"struct.std::_Vector_base.4"*
  %_M_impl2 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %2, i32 0, i32 0
  %_M_end_of_storage = getelementptr inbounds %"struct.std::_Vector_base<objectir::Type *, std::allocator<objectir::Type *> >::_Vector_impl", %"struct.std::_Vector_base<objectir::Type *, std::allocator<objectir::Type *> >::_Vector_impl"* %_M_impl2, i32 0, i32 2
  %3 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %_M_end_of_storage, align 8
  %cmp = icmp ne %"struct.objectir::Type"** %1, %3
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %4 = bitcast %"class.std::vector.3"* %this1 to %"struct.std::_Vector_base.4"*
  %_M_impl3 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %4, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<objectir::Type *, std::allocator<objectir::Type *> >::_Vector_impl"* %_M_impl3 to %"class.std::ios_base::Init"*
  %6 = bitcast %"class.std::vector.3"* %this1 to %"struct.std::_Vector_base.4"*
  %_M_impl4 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %6, i32 0, i32 0
  %_M_finish5 = getelementptr inbounds %"struct.std::_Vector_base<objectir::Type *, std::allocator<objectir::Type *> >::_Vector_impl", %"struct.std::_Vector_base<objectir::Type *, std::allocator<objectir::Type *> >::_Vector_impl"* %_M_impl4, i32 0, i32 1
  %7 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %_M_finish5, align 8
  %8 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %__x.addr, align 8
  call void @_ZNSt16allocator_traitsISaIPN8objectir4TypeEEE9constructIS2_JRKS2_EEEvRS3_PT_DpOT0_(%"class.std::ios_base::Init"* dereferenceable(1) %5, %"struct.objectir::Type"** %7, %"struct.objectir::Type"** dereferenceable(8) %8)
  %9 = bitcast %"class.std::vector.3"* %this1 to %"struct.std::_Vector_base.4"*
  %_M_impl6 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %9, i32 0, i32 0
  %_M_finish7 = getelementptr inbounds %"struct.std::_Vector_base<objectir::Type *, std::allocator<objectir::Type *> >::_Vector_impl", %"struct.std::_Vector_base<objectir::Type *, std::allocator<objectir::Type *> >::_Vector_impl"* %_M_impl6, i32 0, i32 1
  %10 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %_M_finish7, align 8
  %incdec.ptr = getelementptr inbounds %"struct.objectir::Type"*, %"struct.objectir::Type"** %10, i32 1
  store %"struct.objectir::Type"** %incdec.ptr, %"struct.objectir::Type"*** %_M_finish7, align 8
  br label %if.end

if.else:                                          ; preds = %entry
  %call = call %"struct.objectir::Type"** @_ZNSt6vectorIPN8objectir4TypeESaIS2_EE3endEv(%"class.std::vector.3"* %this1) #3
  %coerce.dive = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.8", %"class.__gnu_cxx::__normal_iterator.8"* %agg.tmp, i32 0, i32 0
  store %"struct.objectir::Type"** %call, %"struct.objectir::Type"*** %coerce.dive, align 8
  %11 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %__x.addr, align 8
  %coerce.dive8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.8", %"class.__gnu_cxx::__normal_iterator.8"* %agg.tmp, i32 0, i32 0
  %12 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %coerce.dive8, align 8
  call void @_ZNSt6vectorIPN8objectir4TypeESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_(%"class.std::vector.3"* %this1, %"struct.objectir::Type"** %12, %"struct.objectir::Type"** dereferenceable(8) %11)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void
}

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #3

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt16allocator_traitsISaIPN8objectir4TypeEEE9constructIS2_JRKS2_EEEvRS3_PT_DpOT0_(%"class.std::ios_base::Init"* dereferenceable(1) %__a, %"struct.objectir::Type"** %__p, %"struct.objectir::Type"** dereferenceable(8) %__args) #5 comdat align 2 {
entry:
  %__a.addr = alloca %"class.std::ios_base::Init"*, align 8
  %__p.addr = alloca %"struct.objectir::Type"**, align 8
  %__args.addr = alloca %"struct.objectir::Type"**, align 8
  store %"class.std::ios_base::Init"* %__a, %"class.std::ios_base::Init"** %__a.addr, align 8
  store %"struct.objectir::Type"** %__p, %"struct.objectir::Type"*** %__p.addr, align 8
  store %"struct.objectir::Type"** %__args, %"struct.objectir::Type"*** %__args.addr, align 8
  %0 = load %"class.std::ios_base::Init"*, %"class.std::ios_base::Init"** %__a.addr, align 8
  %1 = bitcast %"class.std::ios_base::Init"* %0 to %"class.std::ios_base::Init"*
  %2 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %__p.addr, align 8
  %3 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %__args.addr, align 8
  %call = call dereferenceable(8) %"struct.objectir::Type"** @_ZSt7forwardIRKPN8objectir4TypeEEOT_RNSt16remove_referenceIS5_E4typeE(%"struct.objectir::Type"** dereferenceable(8) %3) #3
  call void @_ZN9__gnu_cxx13new_allocatorIPN8objectir4TypeEE9constructIS3_JRKS3_EEEvPT_DpOT0_(%"class.std::ios_base::Init"* %1, %"struct.objectir::Type"** %2, %"struct.objectir::Type"** dereferenceable(8) %call)
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIPN8objectir4TypeESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_(%"class.std::vector.3"* %this, %"struct.objectir::Type"** %__position.coerce, %"struct.objectir::Type"** dereferenceable(8) %__args) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__position = alloca %"class.__gnu_cxx::__normal_iterator.8", align 8
  %this.addr = alloca %"class.std::vector.3"*, align 8
  %__args.addr = alloca %"struct.objectir::Type"**, align 8
  %__len = alloca i64, align 8
  %__old_start = alloca %"struct.objectir::Type"**, align 8
  %__old_finish = alloca %"struct.objectir::Type"**, align 8
  %__elems_before = alloca i64, align 8
  %ref.tmp = alloca %"class.__gnu_cxx::__normal_iterator.8", align 8
  %__new_start = alloca %"struct.objectir::Type"**, align 8
  %__new_finish = alloca %"struct.objectir::Type"**, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %coerce.dive = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.8", %"class.__gnu_cxx::__normal_iterator.8"* %__position, i32 0, i32 0
  store %"struct.objectir::Type"** %__position.coerce, %"struct.objectir::Type"*** %coerce.dive, align 8
  store %"class.std::vector.3"* %this, %"class.std::vector.3"** %this.addr, align 8
  store %"struct.objectir::Type"** %__args, %"struct.objectir::Type"*** %__args.addr, align 8
  %this1 = load %"class.std::vector.3"*, %"class.std::vector.3"** %this.addr, align 8
  %0 = getelementptr [26 x i8], [26 x i8]* @.str.16, i64 0, i64 0
  %call = call i64 @_ZNKSt6vectorIPN8objectir4TypeESaIS2_EE12_M_check_lenEmPKc(%"class.std::vector.3"* %this1, i64 1, i8* %0)
  store i64 %call, i64* %__len, align 8
  %1 = bitcast %"class.std::vector.3"* %this1 to %"struct.std::_Vector_base.4"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %1, i32 0, i32 0
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<objectir::Type *, std::allocator<objectir::Type *> >::_Vector_impl", %"struct.std::_Vector_base<objectir::Type *, std::allocator<objectir::Type *> >::_Vector_impl"* %_M_impl, i32 0, i32 0
  %2 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %_M_start, align 8
  store %"struct.objectir::Type"** %2, %"struct.objectir::Type"*** %__old_start, align 8
  %3 = bitcast %"class.std::vector.3"* %this1 to %"struct.std::_Vector_base.4"*
  %_M_impl2 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %3, i32 0, i32 0
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<objectir::Type *, std::allocator<objectir::Type *> >::_Vector_impl", %"struct.std::_Vector_base<objectir::Type *, std::allocator<objectir::Type *> >::_Vector_impl"* %_M_impl2, i32 0, i32 1
  %4 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %_M_finish, align 8
  store %"struct.objectir::Type"** %4, %"struct.objectir::Type"*** %__old_finish, align 8
  %call3 = call %"struct.objectir::Type"** @_ZNSt6vectorIPN8objectir4TypeESaIS2_EE5beginEv(%"class.std::vector.3"* %this1) #3
  %coerce.dive4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.8", %"class.__gnu_cxx::__normal_iterator.8"* %ref.tmp, i32 0, i32 0
  store %"struct.objectir::Type"** %call3, %"struct.objectir::Type"*** %coerce.dive4, align 8
  %call5 = call i64 @_ZN9__gnu_cxxmiIPPN8objectir4TypeESt6vectorIS3_SaIS3_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_(%"class.__gnu_cxx::__normal_iterator.8"* dereferenceable(8) %__position, %"class.__gnu_cxx::__normal_iterator.8"* dereferenceable(8) %ref.tmp) #3
  store i64 %call5, i64* %__elems_before, align 8
  %5 = bitcast %"class.std::vector.3"* %this1 to %"struct.std::_Vector_base.4"*
  %6 = load i64, i64* %__len, align 8
  %call6 = call %"struct.objectir::Type"** @_ZNSt12_Vector_baseIPN8objectir4TypeESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.4"* %5, i64 %6)
  store %"struct.objectir::Type"** %call6, %"struct.objectir::Type"*** %__new_start, align 8
  %7 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %__new_start, align 8
  store %"struct.objectir::Type"** %7, %"struct.objectir::Type"*** %__new_finish, align 8
  %8 = bitcast %"class.std::vector.3"* %this1 to %"struct.std::_Vector_base.4"*
  %_M_impl7 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %8, i32 0, i32 0
  %9 = bitcast %"struct.std::_Vector_base<objectir::Type *, std::allocator<objectir::Type *> >::_Vector_impl"* %_M_impl7 to %"class.std::ios_base::Init"*
  %10 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %__new_start, align 8
  %11 = load i64, i64* %__elems_before, align 8
  %add.ptr = getelementptr inbounds %"struct.objectir::Type"*, %"struct.objectir::Type"** %10, i64 %11
  %12 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %__args.addr, align 8
  %call8 = call dereferenceable(8) %"struct.objectir::Type"** @_ZSt7forwardIRKPN8objectir4TypeEEOT_RNSt16remove_referenceIS5_E4typeE(%"struct.objectir::Type"** dereferenceable(8) %12) #3
  invoke void @_ZNSt16allocator_traitsISaIPN8objectir4TypeEEE9constructIS2_JRKS2_EEEvRS3_PT_DpOT0_(%"class.std::ios_base::Init"* dereferenceable(1) %9, %"struct.objectir::Type"** %add.ptr, %"struct.objectir::Type"** dereferenceable(8) %call8)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  store %"struct.objectir::Type"** null, %"struct.objectir::Type"*** %__new_finish, align 8
  %13 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %__old_start, align 8
  %call9 = call dereferenceable(8) %"struct.objectir::Type"*** @_ZNK9__gnu_cxx17__normal_iteratorIPPN8objectir4TypeESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.8"* %__position) #3
  %14 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %call9, align 8
  %15 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %__new_start, align 8
  %16 = bitcast %"class.std::vector.3"* %this1 to %"struct.std::_Vector_base.4"*
  %call10 = call dereferenceable(1) %"class.std::ios_base::Init"* @_ZNSt12_Vector_baseIPN8objectir4TypeESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %16) #3
  %call12 = invoke %"struct.objectir::Type"** @_ZSt34__uninitialized_move_if_noexcept_aIPPN8objectir4TypeES3_SaIS2_EET0_T_S6_S5_RT1_(%"struct.objectir::Type"** %13, %"struct.objectir::Type"** %14, %"struct.objectir::Type"** %15, %"class.std::ios_base::Init"* dereferenceable(1) %call10)
          to label %invoke.cont11 unwind label %lpad

invoke.cont11:                                    ; preds = %invoke.cont
  store %"struct.objectir::Type"** %call12, %"struct.objectir::Type"*** %__new_finish, align 8
  %17 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %__new_finish, align 8
  %incdec.ptr = getelementptr inbounds %"struct.objectir::Type"*, %"struct.objectir::Type"** %17, i32 1
  store %"struct.objectir::Type"** %incdec.ptr, %"struct.objectir::Type"*** %__new_finish, align 8
  %call13 = call dereferenceable(8) %"struct.objectir::Type"*** @_ZNK9__gnu_cxx17__normal_iteratorIPPN8objectir4TypeESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.8"* %__position) #3
  %18 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %call13, align 8
  %19 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %__old_finish, align 8
  %20 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %__new_finish, align 8
  %21 = bitcast %"class.std::vector.3"* %this1 to %"struct.std::_Vector_base.4"*
  %call14 = call dereferenceable(1) %"class.std::ios_base::Init"* @_ZNSt12_Vector_baseIPN8objectir4TypeESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %21) #3
  %call16 = invoke %"struct.objectir::Type"** @_ZSt34__uninitialized_move_if_noexcept_aIPPN8objectir4TypeES3_SaIS2_EET0_T_S6_S5_RT1_(%"struct.objectir::Type"** %18, %"struct.objectir::Type"** %19, %"struct.objectir::Type"** %20, %"class.std::ios_base::Init"* dereferenceable(1) %call14)
          to label %invoke.cont15 unwind label %lpad

invoke.cont15:                                    ; preds = %invoke.cont11
  store %"struct.objectir::Type"** %call16, %"struct.objectir::Type"*** %__new_finish, align 8
  br label %try.cont

lpad:                                             ; preds = %invoke.cont11, %invoke.cont, %entry
  %22 = landingpad { i8*, i32 }
          catch i8* null
  %23 = extractvalue { i8*, i32 } %22, 0
  store i8* %23, i8** %exn.slot, align 8
  %24 = extractvalue { i8*, i32 } %22, 1
  store i32 %24, i32* %ehselector.slot, align 4
  br label %catch

catch:                                            ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %25 = call i8* @__cxa_begin_catch(i8* %exn) #3
  %26 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %__new_finish, align 8
  %tobool = icmp ne %"struct.objectir::Type"** %26, null
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %catch
  %27 = bitcast %"class.std::vector.3"* %this1 to %"struct.std::_Vector_base.4"*
  %_M_impl17 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %27, i32 0, i32 0
  %28 = bitcast %"struct.std::_Vector_base<objectir::Type *, std::allocator<objectir::Type *> >::_Vector_impl"* %_M_impl17 to %"class.std::ios_base::Init"*
  %29 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %__new_start, align 8
  %30 = load i64, i64* %__elems_before, align 8
  %add.ptr18 = getelementptr inbounds %"struct.objectir::Type"*, %"struct.objectir::Type"** %29, i64 %30
  invoke void @_ZNSt16allocator_traitsISaIPN8objectir4TypeEEE7destroyIS2_EEvRS3_PT_(%"class.std::ios_base::Init"* dereferenceable(1) %28, %"struct.objectir::Type"** %add.ptr18)
          to label %invoke.cont20 unwind label %lpad19

invoke.cont20:                                    ; preds = %if.then
  br label %if.end

lpad19:                                           ; preds = %invoke.cont23, %if.end, %if.else, %if.then
  %31 = landingpad { i8*, i32 }
          cleanup
  %32 = extractvalue { i8*, i32 } %31, 0
  store i8* %32, i8** %exn.slot, align 8
  %33 = extractvalue { i8*, i32 } %31, 1
  store i32 %33, i32* %ehselector.slot, align 4
  invoke void @__cxa_end_catch()
          to label %invoke.cont24 unwind label %terminate.lpad

if.else:                                          ; preds = %catch
  %34 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %__new_start, align 8
  %35 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %__new_finish, align 8
  %36 = bitcast %"class.std::vector.3"* %this1 to %"struct.std::_Vector_base.4"*
  %call21 = call dereferenceable(1) %"class.std::ios_base::Init"* @_ZNSt12_Vector_baseIPN8objectir4TypeESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %36) #3
  invoke void @_ZSt8_DestroyIPPN8objectir4TypeES2_EvT_S4_RSaIT0_E(%"struct.objectir::Type"** %34, %"struct.objectir::Type"** %35, %"class.std::ios_base::Init"* dereferenceable(1) %call21)
          to label %invoke.cont22 unwind label %lpad19

invoke.cont22:                                    ; preds = %if.else
  br label %if.end

if.end:                                           ; preds = %invoke.cont22, %invoke.cont20
  %37 = bitcast %"class.std::vector.3"* %this1 to %"struct.std::_Vector_base.4"*
  %38 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %__new_start, align 8
  %39 = load i64, i64* %__len, align 8
  invoke void @_ZNSt12_Vector_baseIPN8objectir4TypeESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.4"* %37, %"struct.objectir::Type"** %38, i64 %39)
          to label %invoke.cont23 unwind label %lpad19

invoke.cont23:                                    ; preds = %if.end
  invoke void @__cxa_rethrow() #17
          to label %unreachable unwind label %lpad19

invoke.cont24:                                    ; preds = %lpad19
  br label %eh.resume

try.cont:                                         ; preds = %invoke.cont15
  %40 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %__old_start, align 8
  %41 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %__old_finish, align 8
  %42 = bitcast %"class.std::vector.3"* %this1 to %"struct.std::_Vector_base.4"*
  %call25 = call dereferenceable(1) %"class.std::ios_base::Init"* @_ZNSt12_Vector_baseIPN8objectir4TypeESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %42) #3
  call void @_ZSt8_DestroyIPPN8objectir4TypeES2_EvT_S4_RSaIT0_E(%"struct.objectir::Type"** %40, %"struct.objectir::Type"** %41, %"class.std::ios_base::Init"* dereferenceable(1) %call25)
  %43 = bitcast %"class.std::vector.3"* %this1 to %"struct.std::_Vector_base.4"*
  %44 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %__old_start, align 8
  %45 = bitcast %"class.std::vector.3"* %this1 to %"struct.std::_Vector_base.4"*
  %_M_impl26 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %45, i32 0, i32 0
  %_M_end_of_storage = getelementptr inbounds %"struct.std::_Vector_base<objectir::Type *, std::allocator<objectir::Type *> >::_Vector_impl", %"struct.std::_Vector_base<objectir::Type *, std::allocator<objectir::Type *> >::_Vector_impl"* %_M_impl26, i32 0, i32 2
  %46 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %_M_end_of_storage, align 8
  %47 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %__old_start, align 8
  %sub.ptr.lhs.cast = ptrtoint %"struct.objectir::Type"** %46 to i64
  %sub.ptr.rhs.cast = ptrtoint %"struct.objectir::Type"** %47 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  call void @_ZNSt12_Vector_baseIPN8objectir4TypeESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.4"* %43, %"struct.objectir::Type"** %44, i64 %sub.ptr.div)
  %48 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %__new_start, align 8
  %49 = bitcast %"class.std::vector.3"* %this1 to %"struct.std::_Vector_base.4"*
  %_M_impl27 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %49, i32 0, i32 0
  %_M_start28 = getelementptr inbounds %"struct.std::_Vector_base<objectir::Type *, std::allocator<objectir::Type *> >::_Vector_impl", %"struct.std::_Vector_base<objectir::Type *, std::allocator<objectir::Type *> >::_Vector_impl"* %_M_impl27, i32 0, i32 0
  store %"struct.objectir::Type"** %48, %"struct.objectir::Type"*** %_M_start28, align 8
  %50 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %__new_finish, align 8
  %51 = bitcast %"class.std::vector.3"* %this1 to %"struct.std::_Vector_base.4"*
  %_M_impl29 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %51, i32 0, i32 0
  %_M_finish30 = getelementptr inbounds %"struct.std::_Vector_base<objectir::Type *, std::allocator<objectir::Type *> >::_Vector_impl", %"struct.std::_Vector_base<objectir::Type *, std::allocator<objectir::Type *> >::_Vector_impl"* %_M_impl29, i32 0, i32 1
  store %"struct.objectir::Type"** %50, %"struct.objectir::Type"*** %_M_finish30, align 8
  %52 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %__new_start, align 8
  %53 = load i64, i64* %__len, align 8
  %add.ptr31 = getelementptr inbounds %"struct.objectir::Type"*, %"struct.objectir::Type"** %52, i64 %53
  %54 = bitcast %"class.std::vector.3"* %this1 to %"struct.std::_Vector_base.4"*
  %_M_impl32 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %54, i32 0, i32 0
  %_M_end_of_storage33 = getelementptr inbounds %"struct.std::_Vector_base<objectir::Type *, std::allocator<objectir::Type *> >::_Vector_impl", %"struct.std::_Vector_base<objectir::Type *, std::allocator<objectir::Type *> >::_Vector_impl"* %_M_impl32, i32 0, i32 2
  store %"struct.objectir::Type"** %add.ptr31, %"struct.objectir::Type"*** %_M_end_of_storage33, align 8
  ret void

eh.resume:                                        ; preds = %invoke.cont24
  %exn34 = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn34, 0
  %lpad.val35 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val35

terminate.lpad:                                   ; preds = %lpad19
  %55 = landingpad { i8*, i32 }
          catch i8* null
  %56 = extractvalue { i8*, i32 } %55, 0
  call void @__clang_call_terminate(i8* %56) #14
  br label %UnifiedUnreachableBlock

unreachable:                                      ; preds = %invoke.cont23
  br label %UnifiedUnreachableBlock

UnifiedUnreachableBlock:                          ; preds = %unreachable, %terminate.lpad
  unreachable
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local i64 @_ZNKSt6vectorIPN8objectir4TypeESaIS2_EE12_M_check_lenEmPKc(%"class.std::vector.3"* %this, i64 %__n, i8* %__s) #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector.3"*, align 8
  %__n.addr = alloca i64, align 8
  %__s.addr = alloca i8*, align 8
  %__len = alloca i64, align 8
  %ref.tmp = alloca i64, align 8
  store %"class.std::vector.3"* %this, %"class.std::vector.3"** %this.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  store i8* %__s, i8** %__s.addr, align 8
  %this1 = load %"class.std::vector.3"*, %"class.std::vector.3"** %this.addr, align 8
  %call = call i64 @_ZNKSt6vectorIPN8objectir4TypeESaIS2_EE8max_sizeEv(%"class.std::vector.3"* %this1) #3
  %call2 = call i64 @_ZNKSt6vectorIPN8objectir4TypeESaIS2_EE4sizeEv(%"class.std::vector.3"* %this1) #3
  %sub = sub i64 %call, %call2
  %0 = load i64, i64* %__n.addr, align 8
  %cmp = icmp ult i64 %sub, %0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %__s.addr, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %1) #17
  unreachable

if.end:                                           ; preds = %entry
  %call3 = call i64 @_ZNKSt6vectorIPN8objectir4TypeESaIS2_EE4sizeEv(%"class.std::vector.3"* %this1) #3
  %call4 = call i64 @_ZNKSt6vectorIPN8objectir4TypeESaIS2_EE4sizeEv(%"class.std::vector.3"* %this1) #3
  store i64 %call4, i64* %ref.tmp, align 8
  %call5 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %ref.tmp, i64* dereferenceable(8) %__n.addr)
  %2 = load i64, i64* %call5, align 8
  %add = add i64 %call3, %2
  store i64 %add, i64* %__len, align 8
  %3 = load i64, i64* %__len, align 8
  %call6 = call i64 @_ZNKSt6vectorIPN8objectir4TypeESaIS2_EE4sizeEv(%"class.std::vector.3"* %this1) #3
  %cmp7 = icmp ult i64 %3, %call6
  br i1 %cmp7, label %if.end.cond.true_crit_edge, label %lor.lhs.false

if.end.cond.true_crit_edge:                       ; preds = %if.end
  br label %cond.true

lor.lhs.false:                                    ; preds = %if.end
  %4 = load i64, i64* %__len, align 8
  %call8 = call i64 @_ZNKSt6vectorIPN8objectir4TypeESaIS2_EE8max_sizeEv(%"class.std::vector.3"* %this1) #3
  %cmp9 = icmp ugt i64 %4, %call8
  br i1 %cmp9, label %lor.lhs.false.cond.true_crit_edge, label %cond.false

lor.lhs.false.cond.true_crit_edge:                ; preds = %lor.lhs.false
  br label %cond.true

cond.true:                                        ; preds = %lor.lhs.false.cond.true_crit_edge, %if.end.cond.true_crit_edge
  %call10 = call i64 @_ZNKSt6vectorIPN8objectir4TypeESaIS2_EE8max_sizeEv(%"class.std::vector.3"* %this1) #3
  br label %cond.end

cond.false:                                       ; preds = %lor.lhs.false
  %5 = load i64, i64* %__len, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %call10, %cond.true ], [ %5, %cond.false ]
  ret i64 %cond
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local i64 @_ZN9__gnu_cxxmiIPPN8objectir4TypeESt6vectorIS3_SaIS3_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_(%"class.__gnu_cxx::__normal_iterator.8"* dereferenceable(8) %__lhs, %"class.__gnu_cxx::__normal_iterator.8"* dereferenceable(8) %__rhs) #6 comdat {
entry:
  %__lhs.addr = alloca %"class.__gnu_cxx::__normal_iterator.8"*, align 8
  %__rhs.addr = alloca %"class.__gnu_cxx::__normal_iterator.8"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.8"* %__lhs, %"class.__gnu_cxx::__normal_iterator.8"** %__lhs.addr, align 8
  store %"class.__gnu_cxx::__normal_iterator.8"* %__rhs, %"class.__gnu_cxx::__normal_iterator.8"** %__rhs.addr, align 8
  %0 = load %"class.__gnu_cxx::__normal_iterator.8"*, %"class.__gnu_cxx::__normal_iterator.8"** %__lhs.addr, align 8
  %call = call dereferenceable(8) %"struct.objectir::Type"*** @_ZNK9__gnu_cxx17__normal_iteratorIPPN8objectir4TypeESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.8"* %0) #3
  %1 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %call, align 8
  %2 = load %"class.__gnu_cxx::__normal_iterator.8"*, %"class.__gnu_cxx::__normal_iterator.8"** %__rhs.addr, align 8
  %call1 = call dereferenceable(8) %"struct.objectir::Type"*** @_ZNK9__gnu_cxx17__normal_iteratorIPPN8objectir4TypeESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.8"* %2) #3
  %3 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %call1, align 8
  %sub.ptr.lhs.cast = ptrtoint %"struct.objectir::Type"** %1 to i64
  %sub.ptr.rhs.cast = ptrtoint %"struct.objectir::Type"** %3 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  ret i64 %sub.ptr.div
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local %"struct.objectir::Type"** @_ZNSt12_Vector_baseIPN8objectir4TypeESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.4"* %this, i64 %__n) #5 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base.4"*, align 8
  %__n.addr = alloca i64, align 8
  store %"struct.std::_Vector_base.4"* %this, %"struct.std::_Vector_base.4"** %this.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  %this1 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %this.addr, align 8
  %0 = load i64, i64* %__n.addr, align 8
  %cmp = icmp ne i64 %0, 0
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %this1, i32 0, i32 0
  %1 = bitcast %"struct.std::_Vector_base<objectir::Type *, std::allocator<objectir::Type *> >::_Vector_impl"* %_M_impl to %"class.std::ios_base::Init"*
  %2 = load i64, i64* %__n.addr, align 8
  %call = call %"struct.objectir::Type"** @_ZNSt16allocator_traitsISaIPN8objectir4TypeEEE8allocateERS3_m(%"class.std::ios_base::Init"* dereferenceable(1) %1, i64 %2)
  br label %cond.end

cond.false:                                       ; preds = %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %"struct.objectir::Type"** [ %call, %cond.true ], [ null, %cond.false ]
  ret %"struct.objectir::Type"** %cond
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) %"struct.objectir::Type"** @_ZSt7forwardIRKPN8objectir4TypeEEOT_RNSt16remove_referenceIS5_E4typeE(%"struct.objectir::Type"** dereferenceable(8) %__t) #6 comdat {
entry:
  %__t.addr = alloca %"struct.objectir::Type"**, align 8
  store %"struct.objectir::Type"** %__t, %"struct.objectir::Type"*** %__t.addr, align 8
  %0 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %__t.addr, align 8
  ret %"struct.objectir::Type"** %0
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local %"struct.objectir::Type"** @_ZSt34__uninitialized_move_if_noexcept_aIPPN8objectir4TypeES3_SaIS2_EET0_T_S6_S5_RT1_(%"struct.objectir::Type"** %__first, %"struct.objectir::Type"** %__last, %"struct.objectir::Type"** %__result, %"class.std::ios_base::Init"* dereferenceable(1) %__alloc) #5 comdat {
entry:
  %__first.addr = alloca %"struct.objectir::Type"**, align 8
  %__last.addr = alloca %"struct.objectir::Type"**, align 8
  %__result.addr = alloca %"struct.objectir::Type"**, align 8
  %__alloc.addr = alloca %"class.std::ios_base::Init"*, align 8
  %agg.tmp = alloca %"class.__gnu_cxx::__normal_iterator.8", align 8
  %agg.tmp1 = alloca %"class.__gnu_cxx::__normal_iterator.8", align 8
  store %"struct.objectir::Type"** %__first, %"struct.objectir::Type"*** %__first.addr, align 8
  store %"struct.objectir::Type"** %__last, %"struct.objectir::Type"*** %__last.addr, align 8
  store %"struct.objectir::Type"** %__result, %"struct.objectir::Type"*** %__result.addr, align 8
  store %"class.std::ios_base::Init"* %__alloc, %"class.std::ios_base::Init"** %__alloc.addr, align 8
  %0 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %__first.addr, align 8
  %call = call %"struct.objectir::Type"** @_ZSt32__make_move_if_noexcept_iteratorIPN8objectir4TypeESt13move_iteratorIPS2_EET0_PT_(%"struct.objectir::Type"** %0)
  %coerce.dive = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.8", %"class.__gnu_cxx::__normal_iterator.8"* %agg.tmp, i32 0, i32 0
  store %"struct.objectir::Type"** %call, %"struct.objectir::Type"*** %coerce.dive, align 8
  %1 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %__last.addr, align 8
  %call2 = call %"struct.objectir::Type"** @_ZSt32__make_move_if_noexcept_iteratorIPN8objectir4TypeESt13move_iteratorIPS2_EET0_PT_(%"struct.objectir::Type"** %1)
  %coerce.dive3 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.8", %"class.__gnu_cxx::__normal_iterator.8"* %agg.tmp1, i32 0, i32 0
  store %"struct.objectir::Type"** %call2, %"struct.objectir::Type"*** %coerce.dive3, align 8
  %2 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %__result.addr, align 8
  %3 = load %"class.std::ios_base::Init"*, %"class.std::ios_base::Init"** %__alloc.addr, align 8
  %coerce.dive4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.8", %"class.__gnu_cxx::__normal_iterator.8"* %agg.tmp, i32 0, i32 0
  %4 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %coerce.dive4, align 8
  %coerce.dive5 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.8", %"class.__gnu_cxx::__normal_iterator.8"* %agg.tmp1, i32 0, i32 0
  %5 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %coerce.dive5, align 8
  %call6 = call %"struct.objectir::Type"** @_ZSt22__uninitialized_copy_aISt13move_iteratorIPPN8objectir4TypeEES4_S3_ET0_T_S7_S6_RSaIT1_E(%"struct.objectir::Type"** %4, %"struct.objectir::Type"** %5, %"struct.objectir::Type"** %2, %"class.std::ios_base::Init"* dereferenceable(1) %3)
  ret %"struct.objectir::Type"** %call6
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt16allocator_traitsISaIPN8objectir4TypeEEE7destroyIS2_EEvRS3_PT_(%"class.std::ios_base::Init"* dereferenceable(1) %__a, %"struct.objectir::Type"** %__p) #5 comdat align 2 {
entry:
  %__a.addr = alloca %"class.std::ios_base::Init"*, align 8
  %__p.addr = alloca %"struct.objectir::Type"**, align 8
  store %"class.std::ios_base::Init"* %__a, %"class.std::ios_base::Init"** %__a.addr, align 8
  store %"struct.objectir::Type"** %__p, %"struct.objectir::Type"*** %__p.addr, align 8
  %0 = load %"class.std::ios_base::Init"*, %"class.std::ios_base::Init"** %__a.addr, align 8
  %1 = bitcast %"class.std::ios_base::Init"* %0 to %"class.std::ios_base::Init"*
  %2 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %__p.addr, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIPN8objectir4TypeEE7destroyIS3_EEvPT_(%"class.std::ios_base::Init"* %1, %"struct.objectir::Type"** %2)
  ret void
}

declare dso_local void @__cxa_end_catch()

declare dso_local void @__cxa_rethrow()

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIPN8objectir4TypeEE7destroyIS3_EEvPT_(%"class.std::ios_base::Init"* %this, %"struct.objectir::Type"** %__p) #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::ios_base::Init"*, align 8
  %__p.addr = alloca %"struct.objectir::Type"**, align 8
  store %"class.std::ios_base::Init"* %this, %"class.std::ios_base::Init"** %this.addr, align 8
  store %"struct.objectir::Type"** %__p, %"struct.objectir::Type"*** %__p.addr, align 8
  %this1 = load %"class.std::ios_base::Init"*, %"class.std::ios_base::Init"** %this.addr, align 8
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local %"struct.objectir::Type"** @_ZSt32__make_move_if_noexcept_iteratorIPN8objectir4TypeESt13move_iteratorIPS2_EET0_PT_(%"struct.objectir::Type"** %__i) #5 comdat {
entry:
  %retval = alloca %"class.__gnu_cxx::__normal_iterator.8", align 8
  %__i.addr = alloca %"struct.objectir::Type"**, align 8
  store %"struct.objectir::Type"** %__i, %"struct.objectir::Type"*** %__i.addr, align 8
  %0 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %__i.addr, align 8
  call void @_ZNSt13move_iteratorIPPN8objectir4TypeEEC2ES3_(%"class.__gnu_cxx::__normal_iterator.8"* %retval, %"struct.objectir::Type"** %0)
  %coerce.dive = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.8", %"class.__gnu_cxx::__normal_iterator.8"* %retval, i32 0, i32 0
  %1 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %coerce.dive, align 8
  ret %"struct.objectir::Type"** %1
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local %"struct.objectir::Type"** @_ZSt22__uninitialized_copy_aISt13move_iteratorIPPN8objectir4TypeEES4_S3_ET0_T_S7_S6_RSaIT1_E(%"struct.objectir::Type"** %__first.coerce, %"struct.objectir::Type"** %__last.coerce, %"struct.objectir::Type"** %__result, %"class.std::ios_base::Init"* dereferenceable(1)) #5 comdat {
entry:
  %__first = alloca %"class.__gnu_cxx::__normal_iterator.8", align 8
  %__last = alloca %"class.__gnu_cxx::__normal_iterator.8", align 8
  %__result.addr = alloca %"struct.objectir::Type"**, align 8
  %.addr = alloca %"class.std::ios_base::Init"*, align 8
  %agg.tmp = alloca %"class.__gnu_cxx::__normal_iterator.8", align 8
  %agg.tmp2 = alloca %"class.__gnu_cxx::__normal_iterator.8", align 8
  %coerce.dive = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.8", %"class.__gnu_cxx::__normal_iterator.8"* %__first, i32 0, i32 0
  store %"struct.objectir::Type"** %__first.coerce, %"struct.objectir::Type"*** %coerce.dive, align 8
  %coerce.dive1 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.8", %"class.__gnu_cxx::__normal_iterator.8"* %__last, i32 0, i32 0
  store %"struct.objectir::Type"** %__last.coerce, %"struct.objectir::Type"*** %coerce.dive1, align 8
  store %"struct.objectir::Type"** %__result, %"struct.objectir::Type"*** %__result.addr, align 8
  store %"class.std::ios_base::Init"* %0, %"class.std::ios_base::Init"** %.addr, align 8
  %1 = bitcast %"class.__gnu_cxx::__normal_iterator.8"* %agg.tmp to i8*
  %2 = bitcast %"class.__gnu_cxx::__normal_iterator.8"* %__first to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 8, i1 false)
  %3 = bitcast %"class.__gnu_cxx::__normal_iterator.8"* %agg.tmp2 to i8*
  %4 = bitcast %"class.__gnu_cxx::__normal_iterator.8"* %__last to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 8, i1 false)
  %5 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %__result.addr, align 8
  %coerce.dive3 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.8", %"class.__gnu_cxx::__normal_iterator.8"* %agg.tmp, i32 0, i32 0
  %6 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %coerce.dive3, align 8
  %coerce.dive4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.8", %"class.__gnu_cxx::__normal_iterator.8"* %agg.tmp2, i32 0, i32 0
  %7 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %coerce.dive4, align 8
  %call = call %"struct.objectir::Type"** @_ZSt18uninitialized_copyISt13move_iteratorIPPN8objectir4TypeEES4_ET0_T_S7_S6_(%"struct.objectir::Type"** %6, %"struct.objectir::Type"** %7, %"struct.objectir::Type"** %5)
  ret %"struct.objectir::Type"** %call
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #10

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local %"struct.objectir::Type"** @_ZSt18uninitialized_copyISt13move_iteratorIPPN8objectir4TypeEES4_ET0_T_S7_S6_(%"struct.objectir::Type"** %__first.coerce, %"struct.objectir::Type"** %__last.coerce, %"struct.objectir::Type"** %__result) #5 comdat {
entry:
  %__first = alloca %"class.__gnu_cxx::__normal_iterator.8", align 8
  %__last = alloca %"class.__gnu_cxx::__normal_iterator.8", align 8
  %__result.addr = alloca %"struct.objectir::Type"**, align 8
  %__assignable = alloca i8, align 1
  %agg.tmp = alloca %"class.__gnu_cxx::__normal_iterator.8", align 8
  %agg.tmp2 = alloca %"class.__gnu_cxx::__normal_iterator.8", align 8
  %coerce.dive = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.8", %"class.__gnu_cxx::__normal_iterator.8"* %__first, i32 0, i32 0
  store %"struct.objectir::Type"** %__first.coerce, %"struct.objectir::Type"*** %coerce.dive, align 8
  %coerce.dive1 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.8", %"class.__gnu_cxx::__normal_iterator.8"* %__last, i32 0, i32 0
  store %"struct.objectir::Type"** %__last.coerce, %"struct.objectir::Type"*** %coerce.dive1, align 8
  store %"struct.objectir::Type"** %__result, %"struct.objectir::Type"*** %__result.addr, align 8
  store i8 1, i8* %__assignable, align 1
  %0 = bitcast %"class.__gnu_cxx::__normal_iterator.8"* %agg.tmp to i8*
  %1 = bitcast %"class.__gnu_cxx::__normal_iterator.8"* %__first to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 8, i1 false)
  %2 = bitcast %"class.__gnu_cxx::__normal_iterator.8"* %agg.tmp2 to i8*
  %3 = bitcast %"class.__gnu_cxx::__normal_iterator.8"* %__last to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 8, i1 false)
  %4 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %__result.addr, align 8
  %coerce.dive3 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.8", %"class.__gnu_cxx::__normal_iterator.8"* %agg.tmp, i32 0, i32 0
  %5 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %coerce.dive3, align 8
  %coerce.dive4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.8", %"class.__gnu_cxx::__normal_iterator.8"* %agg.tmp2, i32 0, i32 0
  %6 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %coerce.dive4, align 8
  %call = call %"struct.objectir::Type"** @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPPN8objectir4TypeEES6_EET0_T_S9_S8_(%"struct.objectir::Type"** %5, %"struct.objectir::Type"** %6, %"struct.objectir::Type"** %4)
  ret %"struct.objectir::Type"** %call
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local %"struct.objectir::Type"** @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPPN8objectir4TypeEES6_EET0_T_S9_S8_(%"struct.objectir::Type"** %__first.coerce, %"struct.objectir::Type"** %__last.coerce, %"struct.objectir::Type"** %__result) #5 comdat align 2 {
entry:
  %__first = alloca %"class.__gnu_cxx::__normal_iterator.8", align 8
  %__last = alloca %"class.__gnu_cxx::__normal_iterator.8", align 8
  %__result.addr = alloca %"struct.objectir::Type"**, align 8
  %agg.tmp = alloca %"class.__gnu_cxx::__normal_iterator.8", align 8
  %agg.tmp2 = alloca %"class.__gnu_cxx::__normal_iterator.8", align 8
  %coerce.dive = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.8", %"class.__gnu_cxx::__normal_iterator.8"* %__first, i32 0, i32 0
  store %"struct.objectir::Type"** %__first.coerce, %"struct.objectir::Type"*** %coerce.dive, align 8
  %coerce.dive1 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.8", %"class.__gnu_cxx::__normal_iterator.8"* %__last, i32 0, i32 0
  store %"struct.objectir::Type"** %__last.coerce, %"struct.objectir::Type"*** %coerce.dive1, align 8
  store %"struct.objectir::Type"** %__result, %"struct.objectir::Type"*** %__result.addr, align 8
  %0 = bitcast %"class.__gnu_cxx::__normal_iterator.8"* %agg.tmp to i8*
  %1 = bitcast %"class.__gnu_cxx::__normal_iterator.8"* %__first to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 8, i1 false)
  %2 = bitcast %"class.__gnu_cxx::__normal_iterator.8"* %agg.tmp2 to i8*
  %3 = bitcast %"class.__gnu_cxx::__normal_iterator.8"* %__last to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 8, i1 false)
  %4 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %__result.addr, align 8
  %coerce.dive3 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.8", %"class.__gnu_cxx::__normal_iterator.8"* %agg.tmp, i32 0, i32 0
  %5 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %coerce.dive3, align 8
  %coerce.dive4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.8", %"class.__gnu_cxx::__normal_iterator.8"* %agg.tmp2, i32 0, i32 0
  %6 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %coerce.dive4, align 8
  %call = call %"struct.objectir::Type"** @_ZSt4copyISt13move_iteratorIPPN8objectir4TypeEES4_ET0_T_S7_S6_(%"struct.objectir::Type"** %5, %"struct.objectir::Type"** %6, %"struct.objectir::Type"** %4)
  ret %"struct.objectir::Type"** %call
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local %"struct.objectir::Type"** @_ZSt4copyISt13move_iteratorIPPN8objectir4TypeEES4_ET0_T_S7_S6_(%"struct.objectir::Type"** %__first.coerce, %"struct.objectir::Type"** %__last.coerce, %"struct.objectir::Type"** %__result) #5 comdat {
entry:
  %__first = alloca %"class.__gnu_cxx::__normal_iterator.8", align 8
  %__last = alloca %"class.__gnu_cxx::__normal_iterator.8", align 8
  %__result.addr = alloca %"struct.objectir::Type"**, align 8
  %agg.tmp = alloca %"class.__gnu_cxx::__normal_iterator.8", align 8
  %agg.tmp3 = alloca %"class.__gnu_cxx::__normal_iterator.8", align 8
  %coerce.dive = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.8", %"class.__gnu_cxx::__normal_iterator.8"* %__first, i32 0, i32 0
  store %"struct.objectir::Type"** %__first.coerce, %"struct.objectir::Type"*** %coerce.dive, align 8
  %coerce.dive1 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.8", %"class.__gnu_cxx::__normal_iterator.8"* %__last, i32 0, i32 0
  store %"struct.objectir::Type"** %__last.coerce, %"struct.objectir::Type"*** %coerce.dive1, align 8
  store %"struct.objectir::Type"** %__result, %"struct.objectir::Type"*** %__result.addr, align 8
  %0 = bitcast %"class.__gnu_cxx::__normal_iterator.8"* %agg.tmp to i8*
  %1 = bitcast %"class.__gnu_cxx::__normal_iterator.8"* %__first to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 8, i1 false)
  %coerce.dive2 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.8", %"class.__gnu_cxx::__normal_iterator.8"* %agg.tmp, i32 0, i32 0
  %2 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %coerce.dive2, align 8
  %call = call %"struct.objectir::Type"** @_ZSt12__miter_baseIPPN8objectir4TypeEEDTcl12__miter_basecldtfp_4baseEEESt13move_iteratorIT_E(%"struct.objectir::Type"** %2)
  %3 = bitcast %"class.__gnu_cxx::__normal_iterator.8"* %agg.tmp3 to i8*
  %4 = bitcast %"class.__gnu_cxx::__normal_iterator.8"* %__last to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 8, i1 false)
  %coerce.dive4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.8", %"class.__gnu_cxx::__normal_iterator.8"* %agg.tmp3, i32 0, i32 0
  %5 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %coerce.dive4, align 8
  %call5 = call %"struct.objectir::Type"** @_ZSt12__miter_baseIPPN8objectir4TypeEEDTcl12__miter_basecldtfp_4baseEEESt13move_iteratorIT_E(%"struct.objectir::Type"** %5)
  %6 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %__result.addr, align 8
  %call6 = call %"struct.objectir::Type"** @_ZSt14__copy_move_a2ILb1EPPN8objectir4TypeES3_ET1_T0_S5_S4_(%"struct.objectir::Type"** %call, %"struct.objectir::Type"** %call5, %"struct.objectir::Type"** %6)
  ret %"struct.objectir::Type"** %call6
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local %"struct.objectir::Type"** @_ZSt12__miter_baseIPPN8objectir4TypeEEDTcl12__miter_basecldtfp_4baseEEESt13move_iteratorIT_E(%"struct.objectir::Type"** %__it.coerce) #5 comdat {
entry:
  %__it = alloca %"class.__gnu_cxx::__normal_iterator.8", align 8
  %coerce.dive = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.8", %"class.__gnu_cxx::__normal_iterator.8"* %__it, i32 0, i32 0
  store %"struct.objectir::Type"** %__it.coerce, %"struct.objectir::Type"*** %coerce.dive, align 8
  %call = call %"struct.objectir::Type"** @_ZNKSt13move_iteratorIPPN8objectir4TypeEE4baseEv(%"class.__gnu_cxx::__normal_iterator.8"* %__it)
  %call1 = call %"struct.objectir::Type"** @_ZSt12__miter_baseIPPN8objectir4TypeEET_S4_(%"struct.objectir::Type"** %call)
  ret %"struct.objectir::Type"** %call1
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local %"struct.objectir::Type"** @_ZSt14__copy_move_a2ILb1EPPN8objectir4TypeES3_ET1_T0_S5_S4_(%"struct.objectir::Type"** %__first, %"struct.objectir::Type"** %__last, %"struct.objectir::Type"** %__result) #5 comdat {
entry:
  %__first.addr = alloca %"struct.objectir::Type"**, align 8
  %__last.addr = alloca %"struct.objectir::Type"**, align 8
  %__result.addr = alloca %"struct.objectir::Type"**, align 8
  store %"struct.objectir::Type"** %__first, %"struct.objectir::Type"*** %__first.addr, align 8
  store %"struct.objectir::Type"** %__last, %"struct.objectir::Type"*** %__last.addr, align 8
  store %"struct.objectir::Type"** %__result, %"struct.objectir::Type"*** %__result.addr, align 8
  %0 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %__first.addr, align 8
  %call = call %"struct.objectir::Type"** @_ZSt12__niter_baseIPPN8objectir4TypeEET_S4_(%"struct.objectir::Type"** %0)
  %1 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %__last.addr, align 8
  %call1 = call %"struct.objectir::Type"** @_ZSt12__niter_baseIPPN8objectir4TypeEET_S4_(%"struct.objectir::Type"** %1)
  %2 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %__result.addr, align 8
  %call2 = call %"struct.objectir::Type"** @_ZSt12__niter_baseIPPN8objectir4TypeEET_S4_(%"struct.objectir::Type"** %2)
  %call3 = call %"struct.objectir::Type"** @_ZSt13__copy_move_aILb1EPPN8objectir4TypeES3_ET1_T0_S5_S4_(%"struct.objectir::Type"** %call, %"struct.objectir::Type"** %call1, %"struct.objectir::Type"** %call2)
  ret %"struct.objectir::Type"** %call3
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local %"struct.objectir::Type"** @_ZSt12__niter_baseIPPN8objectir4TypeEET_S4_(%"struct.objectir::Type"** %__it) #6 comdat {
entry:
  %__it.addr = alloca %"struct.objectir::Type"**, align 8
  store %"struct.objectir::Type"** %__it, %"struct.objectir::Type"*** %__it.addr, align 8
  %0 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %__it.addr, align 8
  ret %"struct.objectir::Type"** %0
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local %"struct.objectir::Type"** @_ZSt13__copy_move_aILb1EPPN8objectir4TypeES3_ET1_T0_S5_S4_(%"struct.objectir::Type"** %__first, %"struct.objectir::Type"** %__last, %"struct.objectir::Type"** %__result) #5 comdat {
entry:
  %__first.addr = alloca %"struct.objectir::Type"**, align 8
  %__last.addr = alloca %"struct.objectir::Type"**, align 8
  %__result.addr = alloca %"struct.objectir::Type"**, align 8
  %__simple = alloca i8, align 1
  store %"struct.objectir::Type"** %__first, %"struct.objectir::Type"*** %__first.addr, align 8
  store %"struct.objectir::Type"** %__last, %"struct.objectir::Type"*** %__last.addr, align 8
  store %"struct.objectir::Type"** %__result, %"struct.objectir::Type"*** %__result.addr, align 8
  store i8 1, i8* %__simple, align 1
  %0 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %__first.addr, align 8
  %1 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %__last.addr, align 8
  %2 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %__result.addr, align 8
  %call = call %"struct.objectir::Type"** @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIPN8objectir4TypeEEEPT_PKS6_S9_S7_(%"struct.objectir::Type"** %0, %"struct.objectir::Type"** %1, %"struct.objectir::Type"** %2)
  ret %"struct.objectir::Type"** %call
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local %"struct.objectir::Type"** @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIPN8objectir4TypeEEEPT_PKS6_S9_S7_(%"struct.objectir::Type"** %__first, %"struct.objectir::Type"** %__last, %"struct.objectir::Type"** %__result) #6 comdat align 2 {
entry:
  %__first.addr = alloca %"struct.objectir::Type"**, align 8
  %__last.addr = alloca %"struct.objectir::Type"**, align 8
  %__result.addr = alloca %"struct.objectir::Type"**, align 8
  %_Num = alloca i64, align 8
  store %"struct.objectir::Type"** %__first, %"struct.objectir::Type"*** %__first.addr, align 8
  store %"struct.objectir::Type"** %__last, %"struct.objectir::Type"*** %__last.addr, align 8
  store %"struct.objectir::Type"** %__result, %"struct.objectir::Type"*** %__result.addr, align 8
  %0 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %__last.addr, align 8
  %1 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %__first.addr, align 8
  %sub.ptr.lhs.cast = ptrtoint %"struct.objectir::Type"** %0 to i64
  %sub.ptr.rhs.cast = ptrtoint %"struct.objectir::Type"** %1 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  store i64 %sub.ptr.div, i64* %_Num, align 8
  %2 = load i64, i64* %_Num, align 8
  %tobool = icmp ne i64 %2, 0
  br i1 %tobool, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  br label %if.end

if.then:                                          ; preds = %entry
  %3 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %__result.addr, align 8
  %4 = bitcast %"struct.objectir::Type"** %3 to i8*
  %5 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %__first.addr, align 8
  %6 = bitcast %"struct.objectir::Type"** %5 to i8*
  %7 = load i64, i64* %_Num, align 8
  %mul = mul i64 8, %7
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %6, i64 %mul, i1 false)
  br label %if.end

if.end:                                           ; preds = %entry.if.end_crit_edge, %if.then
  %8 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %__result.addr, align 8
  %9 = load i64, i64* %_Num, align 8
  %add.ptr = getelementptr inbounds %"struct.objectir::Type"*, %"struct.objectir::Type"** %8, i64 %9
  ret %"struct.objectir::Type"** %add.ptr
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #10

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local %"struct.objectir::Type"** @_ZNKSt13move_iteratorIPPN8objectir4TypeEE4baseEv(%"class.__gnu_cxx::__normal_iterator.8"* %this) #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::__normal_iterator.8"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.8"* %this, %"class.__gnu_cxx::__normal_iterator.8"** %this.addr, align 8
  %this1 = load %"class.__gnu_cxx::__normal_iterator.8"*, %"class.__gnu_cxx::__normal_iterator.8"** %this.addr, align 8
  %_M_current = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.8", %"class.__gnu_cxx::__normal_iterator.8"* %this1, i32 0, i32 0
  %0 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %_M_current, align 8
  ret %"struct.objectir::Type"** %0
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local %"struct.objectir::Type"** @_ZSt12__miter_baseIPPN8objectir4TypeEET_S4_(%"struct.objectir::Type"** %__it) #6 comdat {
entry:
  %__it.addr = alloca %"struct.objectir::Type"**, align 8
  store %"struct.objectir::Type"** %__it, %"struct.objectir::Type"*** %__it.addr, align 8
  %0 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %__it.addr, align 8
  ret %"struct.objectir::Type"** %0
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt13move_iteratorIPPN8objectir4TypeEEC2ES3_(%"class.__gnu_cxx::__normal_iterator.8"* %this, %"struct.objectir::Type"** %__i) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::__normal_iterator.8"*, align 8
  %__i.addr = alloca %"struct.objectir::Type"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.8"* %this, %"class.__gnu_cxx::__normal_iterator.8"** %this.addr, align 8
  store %"struct.objectir::Type"** %__i, %"struct.objectir::Type"*** %__i.addr, align 8
  %this1 = load %"class.__gnu_cxx::__normal_iterator.8"*, %"class.__gnu_cxx::__normal_iterator.8"** %this.addr, align 8
  %_M_current = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.8", %"class.__gnu_cxx::__normal_iterator.8"* %this1, i32 0, i32 0
  %0 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %__i.addr, align 8
  store %"struct.objectir::Type"** %0, %"struct.objectir::Type"*** %_M_current, align 8
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local %"struct.objectir::Type"** @_ZNSt16allocator_traitsISaIPN8objectir4TypeEEE8allocateERS3_m(%"class.std::ios_base::Init"* dereferenceable(1) %__a, i64 %__n) #5 comdat align 2 {
entry:
  %__a.addr = alloca %"class.std::ios_base::Init"*, align 8
  %__n.addr = alloca i64, align 8
  store %"class.std::ios_base::Init"* %__a, %"class.std::ios_base::Init"** %__a.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  %0 = load %"class.std::ios_base::Init"*, %"class.std::ios_base::Init"** %__a.addr, align 8
  %1 = bitcast %"class.std::ios_base::Init"* %0 to %"class.std::ios_base::Init"*
  %2 = load i64, i64* %__n.addr, align 8
  %call = call %"struct.objectir::Type"** @_ZN9__gnu_cxx13new_allocatorIPN8objectir4TypeEE8allocateEmPKv(%"class.std::ios_base::Init"* %1, i64 %2, i8* null)
  ret %"struct.objectir::Type"** %call
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local %"struct.objectir::Type"** @_ZN9__gnu_cxx13new_allocatorIPN8objectir4TypeEE8allocateEmPKv(%"class.std::ios_base::Init"* %this, i64 %__n, i8*) #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::ios_base::Init"*, align 8
  %__n.addr = alloca i64, align 8
  %.addr = alloca i8*, align 8
  store %"class.std::ios_base::Init"* %this, %"class.std::ios_base::Init"** %this.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  store i8* %0, i8** %.addr, align 8
  %this1 = load %"class.std::ios_base::Init"*, %"class.std::ios_base::Init"** %this.addr, align 8
  %1 = load i64, i64* %__n.addr, align 8
  %call = call i64 @_ZNK9__gnu_cxx13new_allocatorIPN8objectir4TypeEE8max_sizeEv(%"class.std::ios_base::Init"* %this1) #3
  %cmp = icmp ugt i64 %1, %call
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @_ZSt17__throw_bad_allocv() #17
  unreachable

if.end:                                           ; preds = %entry
  %2 = load i64, i64* %__n.addr, align 8
  %mul = mul i64 %2, 8
  %call2 = call i8* @_Znwm(i64 %mul)
  %3 = bitcast i8* %call2 to %"struct.objectir::Type"**
  ret %"struct.objectir::Type"** %3
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local i64 @_ZNK9__gnu_cxx13new_allocatorIPN8objectir4TypeEE8max_sizeEv(%"class.std::ios_base::Init"* %this) #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::ios_base::Init"*, align 8
  store %"class.std::ios_base::Init"* %this, %"class.std::ios_base::Init"** %this.addr, align 8
  %this1 = load %"class.std::ios_base::Init"*, %"class.std::ios_base::Init"** %this.addr, align 8
  ret i64 2305843009213693951
}

; Function Attrs: noreturn
declare dso_local void @_ZSt17__throw_bad_allocv() #11

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local i64 @_ZNKSt6vectorIPN8objectir4TypeESaIS2_EE8max_sizeEv(%"class.std::vector.3"* %this) #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %this, %"class.std::vector.3"** %this.addr, align 8
  %this1 = load %"class.std::vector.3"*, %"class.std::vector.3"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.3"* %this1 to %"struct.std::_Vector_base.4"*
  %call = call dereferenceable(1) %"class.std::ios_base::Init"* @_ZNKSt12_Vector_baseIPN8objectir4TypeESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %0) #3
  %call2 = call i64 @_ZNSt16allocator_traitsISaIPN8objectir4TypeEEE8max_sizeERKS3_(%"class.std::ios_base::Init"* dereferenceable(1) %call) #3
  ret i64 %call2
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local i64 @_ZNKSt6vectorIPN8objectir4TypeESaIS2_EE4sizeEv(%"class.std::vector.3"* %this) #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %this, %"class.std::vector.3"** %this.addr, align 8
  %this1 = load %"class.std::vector.3"*, %"class.std::vector.3"** %this.addr, align 8
  %0 = bitcast %"class.std::vector.3"* %this1 to %"struct.std::_Vector_base.4"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %0, i32 0, i32 0
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<objectir::Type *, std::allocator<objectir::Type *> >::_Vector_impl", %"struct.std::_Vector_base<objectir::Type *, std::allocator<objectir::Type *> >::_Vector_impl"* %_M_impl, i32 0, i32 1
  %1 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %_M_finish, align 8
  %2 = bitcast %"class.std::vector.3"* %this1 to %"struct.std::_Vector_base.4"*
  %_M_impl2 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %2, i32 0, i32 0
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<objectir::Type *, std::allocator<objectir::Type *> >::_Vector_impl", %"struct.std::_Vector_base<objectir::Type *, std::allocator<objectir::Type *> >::_Vector_impl"* %_M_impl2, i32 0, i32 0
  %3 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %_M_start, align 8
  %sub.ptr.lhs.cast = ptrtoint %"struct.objectir::Type"** %1 to i64
  %sub.ptr.rhs.cast = ptrtoint %"struct.objectir::Type"** %3 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  ret i64 %sub.ptr.div
}

; Function Attrs: noreturn
declare dso_local void @_ZSt20__throw_length_errorPKc(i8*) #11

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %__a, i64* dereferenceable(8) %__b) #6 comdat {
entry:
  %retval = alloca i64*, align 8
  %__a.addr = alloca i64*, align 8
  %__b.addr = alloca i64*, align 8
  store i64* %__a, i64** %__a.addr, align 8
  store i64* %__b, i64** %__b.addr, align 8
  %0 = load i64*, i64** %__a.addr, align 8
  %1 = load i64, i64* %0, align 8
  %2 = load i64*, i64** %__b.addr, align 8
  %3 = load i64, i64* %2, align 8
  %cmp = icmp ult i64 %1, %3
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %4 = load i64*, i64** %__b.addr, align 8
  store i64* %4, i64** %retval, align 8
  br label %return

if.end:                                           ; preds = %entry
  %5 = load i64*, i64** %__a.addr, align 8
  store i64* %5, i64** %retval, align 8
  br label %return

return:                                           ; preds = %if.end, %if.then
  %6 = load i64*, i64** %retval, align 8
  ret i64* %6
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(1) %"class.std::ios_base::Init"* @_ZNKSt12_Vector_baseIPN8objectir4TypeESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %this) #6 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base.4"*, align 8
  store %"struct.std::_Vector_base.4"* %this, %"struct.std::_Vector_base.4"** %this.addr, align 8
  %this1 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %this.addr, align 8
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %this1, i32 0, i32 0
  %0 = bitcast %"struct.std::_Vector_base<objectir::Type *, std::allocator<objectir::Type *> >::_Vector_impl"* %_M_impl to %"class.std::ios_base::Init"*
  ret %"class.std::ios_base::Init"* %0
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local i64 @_ZNSt16allocator_traitsISaIPN8objectir4TypeEEE8max_sizeERKS3_(%"class.std::ios_base::Init"* dereferenceable(1) %__a) #6 comdat align 2 {
entry:
  %__a.addr = alloca %"class.std::ios_base::Init"*, align 8
  store %"class.std::ios_base::Init"* %__a, %"class.std::ios_base::Init"** %__a.addr, align 8
  %0 = load %"class.std::ios_base::Init"*, %"class.std::ios_base::Init"** %__a.addr, align 8
  %1 = bitcast %"class.std::ios_base::Init"* %0 to %"class.std::ios_base::Init"*
  %call = call i64 @_ZNK9__gnu_cxx13new_allocatorIPN8objectir4TypeEE8max_sizeEv(%"class.std::ios_base::Init"* %1) #3
  ret i64 %call
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIPN8objectir4TypeEE9constructIS3_JRKS3_EEEvPT_DpOT0_(%"class.std::ios_base::Init"* %this, %"struct.objectir::Type"** %__p, %"struct.objectir::Type"** dereferenceable(8) %__args) #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::ios_base::Init"*, align 8
  %__p.addr = alloca %"struct.objectir::Type"**, align 8
  %__args.addr = alloca %"struct.objectir::Type"**, align 8
  store %"class.std::ios_base::Init"* %this, %"class.std::ios_base::Init"** %this.addr, align 8
  store %"struct.objectir::Type"** %__p, %"struct.objectir::Type"*** %__p.addr, align 8
  store %"struct.objectir::Type"** %__args, %"struct.objectir::Type"*** %__args.addr, align 8
  %this1 = load %"class.std::ios_base::Init"*, %"class.std::ios_base::Init"** %this.addr, align 8
  %0 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %__p.addr, align 8
  %1 = bitcast %"struct.objectir::Type"** %0 to i8*
  %2 = bitcast i8* %1 to %"struct.objectir::Type"**
  %3 = load %"struct.objectir::Type"**, %"struct.objectir::Type"*** %__args.addr, align 8
  %call = call dereferenceable(8) %"struct.objectir::Type"** @_ZSt7forwardIRKPN8objectir4TypeEEOT_RNSt16remove_referenceIS5_E4typeE(%"struct.objectir::Type"** dereferenceable(8) %3) #3
  %4 = load %"struct.objectir::Type"*, %"struct.objectir::Type"** %call, align 8
  store %"struct.objectir::Type"* %4, %"struct.objectir::Type"** %2, align 8
  ret void
}

; Function Attrs: noinline optnone uwtable
define dso_local %"struct.objectir::Type"* @getArrayType(%"struct.objectir::Type"* %type) #5 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %type.addr = alloca %"struct.objectir::Type"*, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  store %"struct.objectir::Type"* %type, %"struct.objectir::Type"** %type.addr, align 8
  %call = call i8* @_Znwm(i64 24) #16
  %0 = bitcast i8* %call to %"struct.objectir::ArrayType"*
  %1 = load %"struct.objectir::Type"*, %"struct.objectir::Type"** %type.addr, align 8
  invoke void @_ZN8objectir9ArrayTypeC1EPNS_4TypeE(%"struct.objectir::ArrayType"* %0, %"struct.objectir::Type"* %1)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %2 = bitcast %"struct.objectir::ArrayType"* %0 to %"struct.objectir::Type"*
  ret %"struct.objectir::Type"* %2

lpad:                                             ; preds = %entry
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  store i8* %4, i8** %exn.slot, align 8
  %5 = extractvalue { i8*, i32 } %3, 1
  store i32 %5, i32* %ehselector.slot, align 4
  call void @_ZdlPv(i8* %call) #15
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val1 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val1
}

; Function Attrs: noinline optnone uwtable
define dso_local %"struct.objectir::Type"* @getUnionType(i32 %numMembers, ...) #5 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %numMembers.addr = alloca i32, align 4
  %type = alloca %"struct.objectir::ObjectType"*, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %args = alloca [1 x %struct.__va_list_tag], align 16
  %i = alloca i32, align 4
  %arg = alloca %"struct.objectir::Type"*, align 8
  store i32 %numMembers, i32* %numMembers.addr, align 4
  %call = call i8* @_Znwm(i64 40) #16
  %0 = bitcast i8* %call to %"struct.objectir::ObjectType"*
  invoke void @_ZN8objectir9UnionTypeC1Ev(%"struct.objectir::ObjectType"* %0)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  store %"struct.objectir::ObjectType"* %0, %"struct.objectir::ObjectType"** %type, align 8
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i64 0, i64 0
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*
  call void @llvm.va_start(i8* %arraydecay1)
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %invoke.cont
  %1 = load i32, i32* %i, align 4
  %2 = load i32, i32* %numMembers.addr, align 4
  %cmp = icmp slt i32 %1, %2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i64 0, i64 0
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 0
  %gp_offset = load i32, i32* %gp_offset_p, align 16
  %fits_in_gp = icmp ule i32 %gp_offset, 40
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem

vaarg.in_reg:                                     ; preds = %for.body
  %3 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 3
  %reg_save_area = load i8*, i8** %3, align 16
  %4 = getelementptr i8, i8* %reg_save_area, i32 %gp_offset
  %5 = bitcast i8* %4 to %"struct.objectir::Type"**
  %6 = add i32 %gp_offset, 8
  store i32 %6, i32* %gp_offset_p, align 16
  br label %vaarg.end

lpad:                                             ; preds = %entry
  %7 = landingpad { i8*, i32 }
          cleanup
  %8 = extractvalue { i8*, i32 } %7, 0
  store i8* %8, i8** %exn.slot, align 8
  %9 = extractvalue { i8*, i32 } %7, 1
  store i32 %9, i32* %ehselector.slot, align 4
  call void @_ZdlPv(i8* %call) #15
  br label %eh.resume

vaarg.in_mem:                                     ; preds = %for.body
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 2
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8
  %10 = bitcast i8* %overflow_arg_area to %"struct.objectir::Type"**
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i32 8
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8
  br label %vaarg.end

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr = phi %"struct.objectir::Type"** [ %5, %vaarg.in_reg ], [ %10, %vaarg.in_mem ]
  %11 = load %"struct.objectir::Type"*, %"struct.objectir::Type"** %vaarg.addr, align 8
  store %"struct.objectir::Type"* %11, %"struct.objectir::Type"** %arg, align 8
  %12 = load %"struct.objectir::ObjectType"*, %"struct.objectir::ObjectType"** %type, align 8
  %members = getelementptr inbounds %"struct.objectir::ObjectType", %"struct.objectir::ObjectType"* %12, i32 0, i32 1
  call void @_ZNSt6vectorIPN8objectir4TypeESaIS2_EE9push_backERKS2_(%"class.std::vector.3"* %members, %"struct.objectir::Type"** dereferenceable(8) %arg)
  br label %for.inc

for.inc:                                          ; preds = %vaarg.end
  %13 = load i32, i32* %i, align 4
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i64 0, i64 0
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*
  call void @llvm.va_end(i8* %arraydecay34)
  %14 = load %"struct.objectir::ObjectType"*, %"struct.objectir::ObjectType"** %type, align 8
  %15 = bitcast %"struct.objectir::ObjectType"* %14 to %"struct.objectir::Type"*
  ret %"struct.objectir::Type"* %15

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val5 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val5
}

; Function Attrs: noinline optnone uwtable
define dso_local %"struct.objectir::Type"* @getIntegerType(i64 %bitwidth, i1 zeroext %isSigned) #5 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %bitwidth.addr = alloca i64, align 8
  %isSigned.addr = alloca i8, align 1
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  store i64 %bitwidth, i64* %bitwidth.addr, align 8
  %frombool = zext i1 %isSigned to i8
  store i8 %frombool, i8* %isSigned.addr, align 1
  %call = call i8* @_Znwm(i64 32) #16
  %0 = bitcast i8* %call to %"struct.objectir::IntegerType"*
  %1 = load i64, i64* %bitwidth.addr, align 8
  %2 = load i8, i8* %isSigned.addr, align 1
  %tobool = trunc i8 %2 to i1
  invoke void @_ZN8objectir11IntegerTypeC1Emb(%"struct.objectir::IntegerType"* %0, i64 %1, i1 zeroext %tobool)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %3 = bitcast %"struct.objectir::IntegerType"* %0 to %"struct.objectir::Type"*
  ret %"struct.objectir::Type"* %3

lpad:                                             ; preds = %entry
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  store i8* %5, i8** %exn.slot, align 8
  %6 = extractvalue { i8*, i32 } %4, 1
  store i32 %6, i32* %ehselector.slot, align 4
  call void @_ZdlPv(i8* %call) #15
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val1 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val1
}

; Function Attrs: noinline optnone uwtable
define dso_local %"struct.objectir::Type"* @getUInt64Type() #5 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %call = call i8* @_Znwm(i64 32) #16
  %0 = bitcast i8* %call to %"struct.objectir::IntegerType"*
  invoke void @_ZN8objectir11IntegerTypeC1Emb(%"struct.objectir::IntegerType"* %0, i64 64, i1 zeroext false)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %1 = bitcast %"struct.objectir::IntegerType"* %0 to %"struct.objectir::Type"*
  ret %"struct.objectir::Type"* %1

lpad:                                             ; preds = %entry
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  store i8* %3, i8** %exn.slot, align 8
  %4 = extractvalue { i8*, i32 } %2, 1
  store i32 %4, i32* %ehselector.slot, align 4
  call void @_ZdlPv(i8* %call) #15
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val1 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val1
}

; Function Attrs: noinline optnone uwtable
define dso_local %"struct.objectir::Type"* @getUInt32Type() #5 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %call = call i8* @_Znwm(i64 32) #16
  %0 = bitcast i8* %call to %"struct.objectir::IntegerType"*
  invoke void @_ZN8objectir11IntegerTypeC1Emb(%"struct.objectir::IntegerType"* %0, i64 32, i1 zeroext false)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %1 = bitcast %"struct.objectir::IntegerType"* %0 to %"struct.objectir::Type"*
  ret %"struct.objectir::Type"* %1

lpad:                                             ; preds = %entry
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  store i8* %3, i8** %exn.slot, align 8
  %4 = extractvalue { i8*, i32 } %2, 1
  store i32 %4, i32* %ehselector.slot, align 4
  call void @_ZdlPv(i8* %call) #15
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val1 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val1
}

; Function Attrs: noinline optnone uwtable
define dso_local %"struct.objectir::Type"* @getUInt16Type() #5 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %call = call i8* @_Znwm(i64 32) #16
  %0 = bitcast i8* %call to %"struct.objectir::IntegerType"*
  invoke void @_ZN8objectir11IntegerTypeC1Emb(%"struct.objectir::IntegerType"* %0, i64 16, i1 zeroext false)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %1 = bitcast %"struct.objectir::IntegerType"* %0 to %"struct.objectir::Type"*
  ret %"struct.objectir::Type"* %1

lpad:                                             ; preds = %entry
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  store i8* %3, i8** %exn.slot, align 8
  %4 = extractvalue { i8*, i32 } %2, 1
  store i32 %4, i32* %ehselector.slot, align 4
  call void @_ZdlPv(i8* %call) #15
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val1 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val1
}

; Function Attrs: noinline optnone uwtable
define dso_local %"struct.objectir::Type"* @getUInt8Type() #5 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %call = call i8* @_Znwm(i64 32) #16
  %0 = bitcast i8* %call to %"struct.objectir::IntegerType"*
  invoke void @_ZN8objectir11IntegerTypeC1Emb(%"struct.objectir::IntegerType"* %0, i64 8, i1 zeroext false)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %1 = bitcast %"struct.objectir::IntegerType"* %0 to %"struct.objectir::Type"*
  ret %"struct.objectir::Type"* %1

lpad:                                             ; preds = %entry
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  store i8* %3, i8** %exn.slot, align 8
  %4 = extractvalue { i8*, i32 } %2, 1
  store i32 %4, i32* %ehselector.slot, align 4
  call void @_ZdlPv(i8* %call) #15
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val1 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val1
}

; Function Attrs: noinline optnone uwtable
define dso_local %"struct.objectir::Type"* @getInt64Type() #5 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %call = call i8* @_Znwm(i64 32) #16
  %0 = bitcast i8* %call to %"struct.objectir::IntegerType"*
  invoke void @_ZN8objectir11IntegerTypeC1Emb(%"struct.objectir::IntegerType"* %0, i64 64, i1 zeroext true)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %1 = bitcast %"struct.objectir::IntegerType"* %0 to %"struct.objectir::Type"*
  ret %"struct.objectir::Type"* %1

lpad:                                             ; preds = %entry
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  store i8* %3, i8** %exn.slot, align 8
  %4 = extractvalue { i8*, i32 } %2, 1
  store i32 %4, i32* %ehselector.slot, align 4
  call void @_ZdlPv(i8* %call) #15
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val1 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val1
}

; Function Attrs: noinline optnone uwtable
define dso_local %"struct.objectir::Type"* @getInt32Type() #5 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %call = call i8* @_Znwm(i64 32) #16
  %0 = bitcast i8* %call to %"struct.objectir::IntegerType"*
  invoke void @_ZN8objectir11IntegerTypeC1Emb(%"struct.objectir::IntegerType"* %0, i64 32, i1 zeroext true)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %1 = bitcast %"struct.objectir::IntegerType"* %0 to %"struct.objectir::Type"*
  ret %"struct.objectir::Type"* %1

lpad:                                             ; preds = %entry
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  store i8* %3, i8** %exn.slot, align 8
  %4 = extractvalue { i8*, i32 } %2, 1
  store i32 %4, i32* %ehselector.slot, align 4
  call void @_ZdlPv(i8* %call) #15
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val1 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val1
}

; Function Attrs: noinline optnone uwtable
define dso_local %"struct.objectir::Type"* @getInt16Type() #5 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %call = call i8* @_Znwm(i64 32) #16
  %0 = bitcast i8* %call to %"struct.objectir::IntegerType"*
  invoke void @_ZN8objectir11IntegerTypeC1Emb(%"struct.objectir::IntegerType"* %0, i64 16, i1 zeroext true)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %1 = bitcast %"struct.objectir::IntegerType"* %0 to %"struct.objectir::Type"*
  ret %"struct.objectir::Type"* %1

lpad:                                             ; preds = %entry
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  store i8* %3, i8** %exn.slot, align 8
  %4 = extractvalue { i8*, i32 } %2, 1
  store i32 %4, i32* %ehselector.slot, align 4
  call void @_ZdlPv(i8* %call) #15
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val1 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val1
}

; Function Attrs: noinline optnone uwtable
define dso_local %"struct.objectir::Type"* @getInt8Type() #5 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %call = call i8* @_Znwm(i64 32) #16
  %0 = bitcast i8* %call to %"struct.objectir::IntegerType"*
  invoke void @_ZN8objectir11IntegerTypeC1Emb(%"struct.objectir::IntegerType"* %0, i64 8, i1 zeroext true)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %1 = bitcast %"struct.objectir::IntegerType"* %0 to %"struct.objectir::Type"*
  ret %"struct.objectir::Type"* %1

lpad:                                             ; preds = %entry
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  store i8* %3, i8** %exn.slot, align 8
  %4 = extractvalue { i8*, i32 } %2, 1
  store i32 %4, i32* %ehselector.slot, align 4
  call void @_ZdlPv(i8* %call) #15
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val1 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val1
}

; Function Attrs: noinline optnone uwtable
define dso_local %"struct.objectir::Type"* @getBooleanType() #5 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %call = call i8* @_Znwm(i64 32) #16
  %0 = bitcast i8* %call to %"struct.objectir::IntegerType"*
  invoke void @_ZN8objectir11IntegerTypeC1Emb(%"struct.objectir::IntegerType"* %0, i64 1, i1 zeroext false)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %1 = bitcast %"struct.objectir::IntegerType"* %0 to %"struct.objectir::Type"*
  ret %"struct.objectir::Type"* %1

lpad:                                             ; preds = %entry
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  store i8* %3, i8** %exn.slot, align 8
  %4 = extractvalue { i8*, i32 } %2, 1
  store i32 %4, i32* %ehselector.slot, align 4
  call void @_ZdlPv(i8* %call) #15
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val1 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val1
}

; Function Attrs: noinline optnone uwtable
define dso_local %"struct.objectir::Type"* @getFloatType() #5 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %call = call i8* @_Znwm(i64 16) #16
  %0 = bitcast i8* %call to %"struct.objectir::FloatType"*
  invoke void @_ZN8objectir9FloatTypeC1Ev(%"struct.objectir::FloatType"* %0)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %1 = bitcast %"struct.objectir::FloatType"* %0 to %"struct.objectir::Type"*
  ret %"struct.objectir::Type"* %1

lpad:                                             ; preds = %entry
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  store i8* %3, i8** %exn.slot, align 8
  %4 = extractvalue { i8*, i32 } %2, 1
  store i32 %4, i32* %ehselector.slot, align 4
  call void @_ZdlPv(i8* %call) #15
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val1 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val1
}

; Function Attrs: noinline optnone uwtable
define dso_local %"struct.objectir::Type"* @getDoubleType() #5 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %call = call i8* @_Znwm(i64 16) #16
  %0 = bitcast i8* %call to %"struct.objectir::FloatType"*
  invoke void @_ZN8objectir10DoubleTypeC1Ev(%"struct.objectir::FloatType"* %0)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %1 = bitcast %"struct.objectir::FloatType"* %0 to %"struct.objectir::Type"*
  ret %"struct.objectir::Type"* %1

lpad:                                             ; preds = %entry
  %2 = landingpad { i8*, i32 }
          cleanup
  %3 = extractvalue { i8*, i32 } %2, 0
  store i8* %3, i8** %exn.slot, align 8
  %4 = extractvalue { i8*, i32 } %2, 1
  store i32 %4, i32* %ehselector.slot, align 4
  call void @_ZdlPv(i8* %call) #15
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val1 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val1
}

; Function Attrs: noinline optnone uwtable
define dso_local %"struct.objectir::Object"* @buildObject(%"struct.objectir::Type"* %type) #5 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %type.addr = alloca %"struct.objectir::Type"*, align 8
  %obj = alloca %"struct.objectir::Object"*, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  store %"struct.objectir::Type"* %type, %"struct.objectir::Type"** %type.addr, align 8
  %call = call i8* @_Znwm(i64 32) #16
  %0 = bitcast i8* %call to %"struct.objectir::Object"*
  %1 = load %"struct.objectir::Type"*, %"struct.objectir::Type"** %type.addr, align 8
  invoke void @_ZN8objectir6ObjectC1EPNS_4TypeE(%"struct.objectir::Object"* %0, %"struct.objectir::Type"* %1)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  store %"struct.objectir::Object"* %0, %"struct.objectir::Object"** %obj, align 8
  %2 = load %"struct.objectir::Object"*, %"struct.objectir::Object"** %obj, align 8
  ret %"struct.objectir::Object"* %2

lpad:                                             ; preds = %entry
  %3 = landingpad { i8*, i32 }
          cleanup
  %4 = extractvalue { i8*, i32 } %3, 0
  store i8* %4, i8** %exn.slot, align 8
  %5 = extractvalue { i8*, i32 } %3, 1
  store i32 %5, i32* %ehselector.slot, align 4
  call void @_ZdlPv(i8* %call) #15
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val1 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val1
}

; Function Attrs: noinline optnone uwtable
define dso_local void @_ZN8objectir6ObjectC2EPNS_4TypeE(%"struct.objectir::Object"* %this, %"struct.objectir::Type"* %type) unnamed_addr #5 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"struct.objectir::Object"*, align 8
  %type.addr = alloca %"struct.objectir::Type"*, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %objectType = alloca %"struct.objectir::ObjectType"*, align 8
  %__range2 = alloca %"class.std::vector.3"*, align 8
  %__begin2 = alloca %"class.__gnu_cxx::__normal_iterator.8", align 8
  %__end2 = alloca %"class.__gnu_cxx::__normal_iterator.8", align 8
  %fieldType = alloca %"struct.objectir::Type"*, align 8
  %ref.tmp = alloca %"class.std::__cxx11::basic_string", align 8
  %field = alloca %"struct.objectir::Field"*, align 8
  %ref.tmp17 = alloca %"class.std::__cxx11::basic_string", align 8
  store %"struct.objectir::Object"* %this, %"struct.objectir::Object"** %this.addr, align 8
  store %"struct.objectir::Type"* %type, %"struct.objectir::Type"** %type.addr, align 8
  %this1 = load %"struct.objectir::Object"*, %"struct.objectir::Object"** %this.addr, align 8
  %type2 = getelementptr inbounds %"struct.objectir::Object", %"struct.objectir::Object"* %this1, i32 0, i32 0
  %0 = load %"struct.objectir::Type"*, %"struct.objectir::Type"** %type.addr, align 8
  store %"struct.objectir::Type"* %0, %"struct.objectir::Type"** %type2, align 8
  %fields = getelementptr inbounds %"struct.objectir::Object", %"struct.objectir::Object"* %this1, i32 0, i32 1
  call void @_ZNSt6vectorIPN8objectir5FieldESaIS2_EEC2Ev(%"class.std::vector"* %fields) #3
  %1 = load %"struct.objectir::Type"*, %"struct.objectir::Type"** %type.addr, align 8
  %call = invoke i32 @_ZN8objectir4Type7getCodeEv(%"struct.objectir::Type"* %1)
          to label %invoke.cont unwind label %lpad.loopexit.split-lp

invoke.cont:                                      ; preds = %entry
  br label %NodeBlock

NodeBlock:                                        ; preds = %invoke.cont
  %Pivot = icmp slt i32 %call, 1
  br i1 %Pivot, label %LeafBlock, label %LeafBlock1

LeafBlock1:                                       ; preds = %NodeBlock
  %SwitchLeaf2 = icmp eq i32 %call, 1
  br i1 %SwitchLeaf2, label %sw.bb29, label %LeafBlock1.NewDefault_crit_edge

LeafBlock1.NewDefault_crit_edge:                  ; preds = %LeafBlock1
  br label %NewDefault

LeafBlock:                                        ; preds = %NodeBlock
  %SwitchLeaf = icmp eq i32 %call, 0
  br i1 %SwitchLeaf, label %sw.bb, label %LeafBlock.NewDefault_crit_edge

LeafBlock.NewDefault_crit_edge:                   ; preds = %LeafBlock
  br label %NewDefault

lpad.loopexit:                                    ; preds = %for.body, %invoke.cont13, %invoke.cont15, %invoke.cont24
  %lpad.loopexit3 = landingpad { i8*, i32 }
          cleanup
  br label %lpad

lpad.loopexit.split-lp:                           ; preds = %entry
  %lpad.loopexit.split-lp4 = landingpad { i8*, i32 }
          cleanup
  br label %lpad

lpad:                                             ; preds = %lpad.loopexit.split-lp, %lpad.loopexit
  %lpad.phi = phi { i8*, i32 } [ %lpad.loopexit3, %lpad.loopexit ], [ %lpad.loopexit.split-lp4, %lpad.loopexit.split-lp ]
  %2 = extractvalue { i8*, i32 } %lpad.phi, 0
  store i8* %2, i8** %exn.slot, align 8
  %3 = extractvalue { i8*, i32 } %lpad.phi, 1
  store i32 %3, i32* %ehselector.slot, align 4
  br label %ehcleanup

sw.bb:                                            ; preds = %LeafBlock
  %4 = load %"struct.objectir::Type"*, %"struct.objectir::Type"** %type.addr, align 8
  %5 = bitcast %"struct.objectir::Type"* %4 to %"struct.objectir::ObjectType"*
  store %"struct.objectir::ObjectType"* %5, %"struct.objectir::ObjectType"** %objectType, align 8
  %6 = load %"struct.objectir::ObjectType"*, %"struct.objectir::ObjectType"** %objectType, align 8
  %fields3 = getelementptr inbounds %"struct.objectir::ObjectType", %"struct.objectir::ObjectType"* %6, i32 0, i32 1
  store %"class.std::vector.3"* %fields3, %"class.std::vector.3"** %__range2, align 8
  %7 = load %"class.std::vector.3"*, %"class.std::vector.3"** %__range2, align 8
  %call4 = call %"struct.objectir::Type"** @_ZNSt6vectorIPN8objectir4TypeESaIS2_EE5beginEv(%"class.std::vector.3"* %7) #3
  %coerce.dive = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.8", %"class.__gnu_cxx::__normal_iterator.8"* %__begin2, i32 0, i32 0
  store %"struct.objectir::Type"** %call4, %"struct.objectir::Type"*** %coerce.dive, align 8
  %8 = load %"class.std::vector.3"*, %"class.std::vector.3"** %__range2, align 8
  %call5 = call %"struct.objectir::Type"** @_ZNSt6vectorIPN8objectir4TypeESaIS2_EE3endEv(%"class.std::vector.3"* %8) #3
  %coerce.dive6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.8", %"class.__gnu_cxx::__normal_iterator.8"* %__end2, i32 0, i32 0
  store %"struct.objectir::Type"** %call5, %"struct.objectir::Type"*** %coerce.dive6, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %sw.bb
  %call7 = call zeroext i1 @_ZN9__gnu_cxxneIPPN8objectir4TypeESt6vectorIS3_SaIS3_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_(%"class.__gnu_cxx::__normal_iterator.8"* dereferenceable(8) %__begin2, %"class.__gnu_cxx::__normal_iterator.8"* dereferenceable(8) %__end2) #3
  br i1 %call7, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %call8 = call dereferenceable(8) %"struct.objectir::Type"** @_ZNK9__gnu_cxx17__normal_iteratorIPPN8objectir4TypeESt6vectorIS3_SaIS3_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.8"* %__begin2) #3
  %9 = load %"struct.objectir::Type"*, %"struct.objectir::Type"** %call8, align 8
  store %"struct.objectir::Type"* %9, %"struct.objectir::Type"** %fieldType, align 8
  %10 = load %"struct.objectir::Type"*, %"struct.objectir::Type"** %fieldType, align 8
  %11 = bitcast %"struct.objectir::Type"* %10 to void (%"class.std::__cxx11::basic_string"*, %"struct.objectir::Type"*)***
  %vtable = load void (%"class.std::__cxx11::basic_string"*, %"struct.objectir::Type"*)**, void (%"class.std::__cxx11::basic_string"*, %"struct.objectir::Type"*)*** %11, align 8
  %vfn = getelementptr inbounds void (%"class.std::__cxx11::basic_string"*, %"struct.objectir::Type"*)*, void (%"class.std::__cxx11::basic_string"*, %"struct.objectir::Type"*)** %vtable, i64 0
  %12 = load void (%"class.std::__cxx11::basic_string"*, %"struct.objectir::Type"*)*, void (%"class.std::__cxx11::basic_string"*, %"struct.objectir::Type"*)** %vfn, align 8
  invoke void %12(%"class.std::__cxx11::basic_string"* sret %ref.tmp, %"struct.objectir::Type"* %10)
          to label %invoke.cont9 unwind label %lpad.loopexit

invoke.cont9:                                     ; preds = %for.body
  %call12 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE(%"class.std::basic_ostream"* dereferenceable(272) @_ZSt4cerr, %"class.std::__cxx11::basic_string"* dereferenceable(32) %ref.tmp)
          to label %invoke.cont11 unwind label %lpad10

invoke.cont11:                                    ; preds = %invoke.cont9
  %13 = getelementptr [2 x i8], [2 x i8]* @.str.40, i64 0, i64 0
  %call14 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) %call12, i8* %13)
          to label %invoke.cont13 unwind label %lpad10

invoke.cont13:                                    ; preds = %invoke.cont11
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %ref.tmp) #3
  %14 = load %"struct.objectir::Type"*, %"struct.objectir::Type"** %fieldType, align 8
  %call16 = invoke %"struct.objectir::Field"* @_ZN8objectir5Field11createFieldEPNS_4TypeE(%"struct.objectir::Type"* %14)
          to label %invoke.cont15 unwind label %lpad.loopexit

invoke.cont15:                                    ; preds = %invoke.cont13
  store %"struct.objectir::Field"* %call16, %"struct.objectir::Field"** %field, align 8
  %15 = load %"struct.objectir::Field"*, %"struct.objectir::Field"** %field, align 8
  %16 = bitcast %"struct.objectir::Field"* %15 to void (%"class.std::__cxx11::basic_string"*, %"struct.objectir::Field"*)***
  %vtable18 = load void (%"class.std::__cxx11::basic_string"*, %"struct.objectir::Field"*)**, void (%"class.std::__cxx11::basic_string"*, %"struct.objectir::Field"*)*** %16, align 8
  %vfn19 = getelementptr inbounds void (%"class.std::__cxx11::basic_string"*, %"struct.objectir::Field"*)*, void (%"class.std::__cxx11::basic_string"*, %"struct.objectir::Field"*)** %vtable18, i64 0
  %17 = load void (%"class.std::__cxx11::basic_string"*, %"struct.objectir::Field"*)*, void (%"class.std::__cxx11::basic_string"*, %"struct.objectir::Field"*)** %vfn19, align 8
  invoke void %17(%"class.std::__cxx11::basic_string"* sret %ref.tmp17, %"struct.objectir::Field"* %15)
          to label %invoke.cont20 unwind label %lpad.loopexit

invoke.cont20:                                    ; preds = %invoke.cont15
  %call23 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE(%"class.std::basic_ostream"* dereferenceable(272) @_ZSt4cerr, %"class.std::__cxx11::basic_string"* dereferenceable(32) %ref.tmp17)
          to label %invoke.cont22 unwind label %lpad21

invoke.cont22:                                    ; preds = %invoke.cont20
  %18 = getelementptr [2 x i8], [2 x i8]* @.str.40, i64 0, i64 0
  %call25 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) %call23, i8* %18)
          to label %invoke.cont24 unwind label %lpad21

invoke.cont24:                                    ; preds = %invoke.cont22
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %ref.tmp17) #3
  %fields26 = getelementptr inbounds %"struct.objectir::Object", %"struct.objectir::Object"* %this1, i32 0, i32 1
  invoke void @_ZNSt6vectorIPN8objectir5FieldESaIS2_EE9push_backERKS2_(%"class.std::vector"* %fields26, %"struct.objectir::Field"** dereferenceable(8) %field)
          to label %invoke.cont27 unwind label %lpad.loopexit

invoke.cont27:                                    ; preds = %invoke.cont24
  br label %for.inc

for.inc:                                          ; preds = %invoke.cont27
  %call28 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.8"* @_ZN9__gnu_cxx17__normal_iteratorIPPN8objectir4TypeESt6vectorIS3_SaIS3_EEEppEv(%"class.__gnu_cxx::__normal_iterator.8"* %__begin2) #3
  br label %for.cond

lpad10:                                           ; preds = %invoke.cont11, %invoke.cont9
  %19 = landingpad { i8*, i32 }
          cleanup
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %exn.slot, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %ehselector.slot, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %ref.tmp) #3
  br label %ehcleanup

lpad21:                                           ; preds = %invoke.cont22, %invoke.cont20
  %22 = landingpad { i8*, i32 }
          cleanup
  %23 = extractvalue { i8*, i32 } %22, 0
  store i8* %23, i8** %exn.slot, align 8
  %24 = extractvalue { i8*, i32 } %22, 1
  store i32 %24, i32* %ehselector.slot, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %ref.tmp17) #3
  br label %ehcleanup

for.end:                                          ; preds = %for.cond
  br label %sw.epilog

sw.bb29:                                          ; preds = %LeafBlock1
  br label %sw.epilog

NewDefault:                                       ; preds = %LeafBlock.NewDefault_crit_edge, %LeafBlock1.NewDefault_crit_edge
  br label %sw.default

sw.default:                                       ; preds = %NewDefault
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb29, %for.end
  ret void

ehcleanup:                                        ; preds = %lpad21, %lpad10, %lpad
  call void @_ZNSt6vectorIPN8objectir5FieldESaIS2_EED2Ev(%"class.std::vector"* %fields) #3
  br label %eh.resume

eh.resume:                                        ; preds = %ehcleanup
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val30 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val30
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIPN8objectir5FieldESaIS2_EEC2Ev(%"class.std::vector"* %this) unnamed_addr #6 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %this, %"class.std::vector"** %this.addr, align 8
  %this1 = load %"class.std::vector"*, %"class.std::vector"** %this.addr, align 8
  %0 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  invoke void @_ZNSt12_Vector_baseIPN8objectir5FieldESaIS2_EEC2Ev(%"struct.std::_Vector_base"* %0)
          to label %invoke.cont unwind label %terminate.lpad

invoke.cont:                                      ; preds = %entry
  ret void

terminate.lpad:                                   ; preds = %entry
  %1 = landingpad { i8*, i32 }
          catch i8* null
  %2 = extractvalue { i8*, i32 } %1, 0
  call void @__clang_call_terminate(i8* %2) #14
  unreachable
}

declare dso_local dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS4_S5_T1_EE(%"class.std::basic_ostream"* dereferenceable(272), %"class.std::__cxx11::basic_string"* dereferenceable(32)) #1

declare dso_local dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272), i8*) #1

; Function Attrs: noinline optnone uwtable
define dso_local %"struct.objectir::Field"* @_ZN8objectir5Field11createFieldEPNS_4TypeE(%"struct.objectir::Type"* %type) #5 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %retval = alloca %"struct.objectir::Field"*, align 8
  %type.addr = alloca %"struct.objectir::Type"*, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  store %"struct.objectir::Type"* %type, %"struct.objectir::Type"** %type.addr, align 8
  %0 = load %"struct.objectir::Type"*, %"struct.objectir::Type"** %type.addr, align 8
  %call = call i32 @_ZN8objectir4Type7getCodeEv(%"struct.objectir::Type"* %0)
  br label %NodeBlock5

NodeBlock5:                                       ; preds = %entry
  %Pivot6 = icmp slt i32 %call, 4
  br i1 %Pivot6, label %NodeBlock, label %NodeBlock3

NodeBlock3:                                       ; preds = %NodeBlock5
  %Pivot4 = icmp slt i32 %call, 5
  br i1 %Pivot4, label %sw.bb8, label %LeafBlock1

LeafBlock1:                                       ; preds = %NodeBlock3
  %SwitchLeaf2 = icmp eq i32 %call, 5
  br i1 %SwitchLeaf2, label %sw.bb13, label %LeafBlock1.NewDefault_crit_edge

LeafBlock1.NewDefault_crit_edge:                  ; preds = %LeafBlock1
  br label %NewDefault

NodeBlock:                                        ; preds = %NodeBlock5
  %Pivot = icmp slt i32 %call, 3
  br i1 %Pivot, label %LeafBlock, label %sw.bb3

LeafBlock:                                        ; preds = %NodeBlock
  %SwitchLeaf = icmp sge i32 %call, 0
  br i1 %SwitchLeaf, label %sw.bb, label %LeafBlock.NewDefault_crit_edge

LeafBlock.NewDefault_crit_edge:                   ; preds = %LeafBlock
  br label %NewDefault

sw.bb:                                            ; preds = %LeafBlock
  %1 = getelementptr [19 x i8], [19 x i8]* @.str.17, i64 0, i64 0
  %call1 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) @_ZSt4cerr, i8* %1)
  %call2 = call i8* @_Znwm(i64 24) #16
  %2 = bitcast i8* %call2 to %"struct.objectir::ObjectField"*
  %3 = load %"struct.objectir::Type"*, %"struct.objectir::Type"** %type.addr, align 8
  invoke void @_ZN8objectir11ObjectFieldC1EPNS_4TypeE(%"struct.objectir::ObjectField"* %2, %"struct.objectir::Type"* %3)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %sw.bb
  %4 = bitcast %"struct.objectir::ObjectField"* %2 to %"struct.objectir::Field"*
  store %"struct.objectir::Field"* %4, %"struct.objectir::Field"** %retval, align 8
  br label %return

lpad:                                             ; preds = %sw.bb
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  store i8* %6, i8** %exn.slot, align 8
  %7 = extractvalue { i8*, i32 } %5, 1
  store i32 %7, i32* %ehselector.slot, align 4
  call void @_ZdlPv(i8* %call2) #15
  br label %eh.resume

sw.bb3:                                           ; preds = %NodeBlock
  %8 = getelementptr [20 x i8], [20 x i8]* @.str.1.18, i64 0, i64 0
  %call4 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) @_ZSt4cerr, i8* %8)
  %call5 = call i8* @_Znwm(i64 24) #16
  %9 = bitcast i8* %call5 to %"struct.objectir::IntegerField"*
  %10 = load %"struct.objectir::Type"*, %"struct.objectir::Type"** %type.addr, align 8
  invoke void @_ZN8objectir12IntegerFieldC1EPNS_4TypeE(%"struct.objectir::IntegerField"* %9, %"struct.objectir::Type"* %10)
          to label %invoke.cont7 unwind label %lpad6

invoke.cont7:                                     ; preds = %sw.bb3
  %11 = bitcast %"struct.objectir::IntegerField"* %9 to %"struct.objectir::Field"*
  store %"struct.objectir::Field"* %11, %"struct.objectir::Field"** %retval, align 8
  br label %return

lpad6:                                            ; preds = %sw.bb3
  %12 = landingpad { i8*, i32 }
          cleanup
  %13 = extractvalue { i8*, i32 } %12, 0
  store i8* %13, i8** %exn.slot, align 8
  %14 = extractvalue { i8*, i32 } %12, 1
  store i32 %14, i32* %ehselector.slot, align 4
  call void @_ZdlPv(i8* %call5) #15
  br label %eh.resume

sw.bb8:                                           ; preds = %NodeBlock3
  %15 = getelementptr [18 x i8], [18 x i8]* @.str.2.19, i64 0, i64 0
  %call9 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) @_ZSt4cerr, i8* %15)
  %call10 = call i8* @_Znwm(i64 24) #16
  %16 = bitcast i8* %call10 to %"struct.objectir::FloatField"*
  %17 = load %"struct.objectir::Type"*, %"struct.objectir::Type"** %type.addr, align 8
  invoke void @_ZN8objectir10FloatFieldC1EPNS_4TypeE(%"struct.objectir::FloatField"* %16, %"struct.objectir::Type"* %17)
          to label %invoke.cont12 unwind label %lpad11

invoke.cont12:                                    ; preds = %sw.bb8
  %18 = bitcast %"struct.objectir::FloatField"* %16 to %"struct.objectir::Field"*
  store %"struct.objectir::Field"* %18, %"struct.objectir::Field"** %retval, align 8
  br label %return

lpad11:                                           ; preds = %sw.bb8
  %19 = landingpad { i8*, i32 }
          cleanup
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %exn.slot, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %ehselector.slot, align 4
  call void @_ZdlPv(i8* %call10) #15
  br label %eh.resume

sw.bb13:                                          ; preds = %LeafBlock1
  %22 = getelementptr [19 x i8], [19 x i8]* @.str.3.20, i64 0, i64 0
  %call14 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) @_ZSt4cerr, i8* %22)
  %call15 = call i8* @_Znwm(i64 24) #16
  %23 = bitcast i8* %call15 to %"struct.objectir::DoubleField"*
  %24 = load %"struct.objectir::Type"*, %"struct.objectir::Type"** %type.addr, align 8
  invoke void @_ZN8objectir11DoubleFieldC1EPNS_4TypeE(%"struct.objectir::DoubleField"* %23, %"struct.objectir::Type"* %24)
          to label %invoke.cont17 unwind label %lpad16

invoke.cont17:                                    ; preds = %sw.bb13
  %25 = bitcast %"struct.objectir::DoubleField"* %23 to %"struct.objectir::Field"*
  store %"struct.objectir::Field"* %25, %"struct.objectir::Field"** %retval, align 8
  br label %return

lpad16:                                           ; preds = %sw.bb13
  %26 = landingpad { i8*, i32 }
          cleanup
  %27 = extractvalue { i8*, i32 } %26, 0
  store i8* %27, i8** %exn.slot, align 8
  %28 = extractvalue { i8*, i32 } %26, 1
  store i32 %28, i32* %ehselector.slot, align 4
  call void @_ZdlPv(i8* %call15) #15
  br label %eh.resume

NewDefault:                                       ; preds = %LeafBlock.NewDefault_crit_edge, %LeafBlock1.NewDefault_crit_edge
  br label %sw.default

sw.default:                                       ; preds = %NewDefault
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default
  call void @llvm.trap()
  unreachable

return:                                           ; preds = %invoke.cont17, %invoke.cont12, %invoke.cont7, %invoke.cont
  %29 = load %"struct.objectir::Field"*, %"struct.objectir::Field"** %retval, align 8
  ret %"struct.objectir::Field"* %29

eh.resume:                                        ; preds = %lpad16, %lpad11, %lpad6, %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val18 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val18
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIPN8objectir5FieldESaIS2_EE9push_backERKS2_(%"class.std::vector"* %this, %"struct.objectir::Field"** dereferenceable(8) %__x) #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector"*, align 8
  %__x.addr = alloca %"struct.objectir::Field"**, align 8
  %agg.tmp = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.std::vector"* %this, %"class.std::vector"** %this.addr, align 8
  store %"struct.objectir::Field"** %__x, %"struct.objectir::Field"*** %__x.addr, align 8
  %this1 = load %"class.std::vector"*, %"class.std::vector"** %this.addr, align 8
  %0 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %0, i32 0, i32 0
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl", %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl"* %_M_impl, i32 0, i32 1
  %1 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %_M_finish, align 8
  %2 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %_M_impl2 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %2, i32 0, i32 0
  %_M_end_of_storage = getelementptr inbounds %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl", %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl"* %_M_impl2, i32 0, i32 2
  %3 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %_M_end_of_storage, align 8
  %cmp = icmp ne %"struct.objectir::Field"** %1, %3
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %4 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %_M_impl3 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %4, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl"* %_M_impl3 to %"class.std::ios_base::Init"*
  %6 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %_M_impl4 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %_M_finish5 = getelementptr inbounds %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl", %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl"* %_M_impl4, i32 0, i32 1
  %7 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %_M_finish5, align 8
  %8 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__x.addr, align 8
  call void @_ZNSt16allocator_traitsISaIPN8objectir5FieldEEE9constructIS2_JRKS2_EEEvRS3_PT_DpOT0_(%"class.std::ios_base::Init"* dereferenceable(1) %5, %"struct.objectir::Field"** %7, %"struct.objectir::Field"** dereferenceable(8) %8)
  %9 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %_M_impl6 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %9, i32 0, i32 0
  %_M_finish7 = getelementptr inbounds %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl", %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl"* %_M_impl6, i32 0, i32 1
  %10 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %_M_finish7, align 8
  %incdec.ptr = getelementptr inbounds %"struct.objectir::Field"*, %"struct.objectir::Field"** %10, i32 1
  store %"struct.objectir::Field"** %incdec.ptr, %"struct.objectir::Field"*** %_M_finish7, align 8
  br label %if.end

if.else:                                          ; preds = %entry
  %call = call %"struct.objectir::Field"** @_ZNSt6vectorIPN8objectir5FieldESaIS2_EE3endEv(%"class.std::vector"* %this1) #3
  %coerce.dive = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %agg.tmp, i32 0, i32 0
  store %"struct.objectir::Field"** %call, %"struct.objectir::Field"*** %coerce.dive, align 8
  %11 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__x.addr, align 8
  %coerce.dive8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %agg.tmp, i32 0, i32 0
  %12 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %coerce.dive8, align 8
  call void @_ZNSt6vectorIPN8objectir5FieldESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_(%"class.std::vector"* %this1, %"struct.objectir::Field"** %12, %"struct.objectir::Field"** dereferenceable(8) %11)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIPN8objectir5FieldESaIS2_EED2Ev(%"class.std::vector"* %this) unnamed_addr #6 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"class.std::vector"*, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  store %"class.std::vector"* %this, %"class.std::vector"** %this.addr, align 8
  %this1 = load %"class.std::vector"*, %"class.std::vector"** %this.addr, align 8
  %0 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %0, i32 0, i32 0
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl", %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl"* %_M_impl, i32 0, i32 0
  %1 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %_M_start, align 8
  %2 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %_M_impl2 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %2, i32 0, i32 0
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl", %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl"* %_M_impl2, i32 0, i32 1
  %3 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %_M_finish, align 8
  %4 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %call = call dereferenceable(1) %"class.std::ios_base::Init"* @_ZNSt12_Vector_baseIPN8objectir5FieldESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %4) #3
  invoke void @_ZSt8_DestroyIPPN8objectir5FieldES2_EvT_S4_RSaIT0_E(%"struct.objectir::Field"** %1, %"struct.objectir::Field"** %3, %"class.std::ios_base::Init"* dereferenceable(1) %call)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %5 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseIPN8objectir5FieldESaIS2_EED2Ev(%"struct.std::_Vector_base"* %5) #3
  ret void

lpad:                                             ; preds = %entry
  %6 = landingpad { i8*, i32 }
          catch i8* null
  %7 = extractvalue { i8*, i32 } %6, 0
  store i8* %7, i8** %exn.slot, align 8
  %8 = extractvalue { i8*, i32 } %6, 1
  store i32 %8, i32* %ehselector.slot, align 4
  %9 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseIPN8objectir5FieldESaIS2_EED2Ev(%"struct.std::_Vector_base"* %9) #3
  br label %terminate.handler

terminate.handler:                                ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  call void @__clang_call_terminate(i8* %exn) #14
  unreachable
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(1) %"class.std::ios_base::Init"* @_ZNSt12_Vector_baseIPN8objectir5FieldESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %this) #6 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %this, %"struct.std::_Vector_base"** %this.addr, align 8
  %this1 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %this.addr, align 8
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %this1, i32 0, i32 0
  %0 = bitcast %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl"* %_M_impl to %"class.std::ios_base::Init"*
  ret %"class.std::ios_base::Init"* %0
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZSt8_DestroyIPPN8objectir5FieldES2_EvT_S4_RSaIT0_E(%"struct.objectir::Field"** %__first, %"struct.objectir::Field"** %__last, %"class.std::ios_base::Init"* dereferenceable(1)) #5 comdat {
entry:
  %__first.addr = alloca %"struct.objectir::Field"**, align 8
  %__last.addr = alloca %"struct.objectir::Field"**, align 8
  %.addr = alloca %"class.std::ios_base::Init"*, align 8
  store %"struct.objectir::Field"** %__first, %"struct.objectir::Field"*** %__first.addr, align 8
  store %"struct.objectir::Field"** %__last, %"struct.objectir::Field"*** %__last.addr, align 8
  store %"class.std::ios_base::Init"* %0, %"class.std::ios_base::Init"** %.addr, align 8
  %1 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__first.addr, align 8
  %2 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__last.addr, align 8
  call void @_ZSt8_DestroyIPPN8objectir5FieldEEvT_S4_(%"struct.objectir::Field"** %1, %"struct.objectir::Field"** %2)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIPN8objectir5FieldESaIS2_EED2Ev(%"struct.std::_Vector_base"* %this) unnamed_addr #6 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"struct.std::_Vector_base"*, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  store %"struct.std::_Vector_base"* %this, %"struct.std::_Vector_base"** %this.addr, align 8
  %this1 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %this.addr, align 8
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %this1, i32 0, i32 0
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl", %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl"* %_M_impl, i32 0, i32 0
  %0 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %_M_start, align 8
  %_M_impl2 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %this1, i32 0, i32 0
  %_M_end_of_storage = getelementptr inbounds %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl", %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl"* %_M_impl2, i32 0, i32 2
  %1 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %_M_end_of_storage, align 8
  %_M_impl3 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %this1, i32 0, i32 0
  %_M_start4 = getelementptr inbounds %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl", %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl"* %_M_impl3, i32 0, i32 0
  %2 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %_M_start4, align 8
  %sub.ptr.lhs.cast = ptrtoint %"struct.objectir::Field"** %1 to i64
  %sub.ptr.rhs.cast = ptrtoint %"struct.objectir::Field"** %2 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  invoke void @_ZNSt12_Vector_baseIPN8objectir5FieldESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base"* %this1, %"struct.objectir::Field"** %0, i64 %sub.ptr.div)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %_M_impl5 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %this1, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIPN8objectir5FieldESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl"* %_M_impl5) #3
  ret void

lpad:                                             ; preds = %entry
  %3 = landingpad { i8*, i32 }
          catch i8* null
  %4 = extractvalue { i8*, i32 } %3, 0
  store i8* %4, i8** %exn.slot, align 8
  %5 = extractvalue { i8*, i32 } %3, 1
  store i32 %5, i32* %ehselector.slot, align 4
  %_M_impl6 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %this1, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIPN8objectir5FieldESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl"* %_M_impl6) #3
  br label %terminate.handler

terminate.handler:                                ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  call void @__clang_call_terminate(i8* %exn) #14
  unreachable
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIPN8objectir5FieldESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base"* %this, %"struct.objectir::Field"** %__p, i64 %__n) #5 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base"*, align 8
  %__p.addr = alloca %"struct.objectir::Field"**, align 8
  %__n.addr = alloca i64, align 8
  store %"struct.std::_Vector_base"* %this, %"struct.std::_Vector_base"** %this.addr, align 8
  store %"struct.objectir::Field"** %__p, %"struct.objectir::Field"*** %__p.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  %this1 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %this.addr, align 8
  %0 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__p.addr, align 8
  %tobool = icmp ne %"struct.objectir::Field"** %0, null
  br i1 %tobool, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  br label %if.end

if.then:                                          ; preds = %entry
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %this1, i32 0, i32 0
  %1 = bitcast %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl"* %_M_impl to %"class.std::ios_base::Init"*
  %2 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__p.addr, align 8
  %3 = load i64, i64* %__n.addr, align 8
  call void @_ZNSt16allocator_traitsISaIPN8objectir5FieldEEE10deallocateERS3_PS2_m(%"class.std::ios_base::Init"* dereferenceable(1) %1, %"struct.objectir::Field"** %2, i64 %3)
  br label %if.end

if.end:                                           ; preds = %entry.if.end_crit_edge, %if.then
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIPN8objectir5FieldESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl"* %this) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl"* %this, %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl"** %this.addr, align 8
  %this1 = load %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl"*, %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl"** %this.addr, align 8
  %0 = bitcast %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl"* %this1 to %"class.std::ios_base::Init"*
  call void @_ZNSaIPN8objectir5FieldEED2Ev(%"class.std::ios_base::Init"* %0) #3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSaIPN8objectir5FieldEED2Ev(%"class.std::ios_base::Init"* %this) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::ios_base::Init"*, align 8
  store %"class.std::ios_base::Init"* %this, %"class.std::ios_base::Init"** %this.addr, align 8
  %this1 = load %"class.std::ios_base::Init"*, %"class.std::ios_base::Init"** %this.addr, align 8
  %0 = bitcast %"class.std::ios_base::Init"* %this1 to %"class.std::ios_base::Init"*
  call void @_ZN9__gnu_cxx13new_allocatorIPN8objectir5FieldEED2Ev(%"class.std::ios_base::Init"* %0) #3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIPN8objectir5FieldEED2Ev(%"class.std::ios_base::Init"* %this) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::ios_base::Init"*, align 8
  store %"class.std::ios_base::Init"* %this, %"class.std::ios_base::Init"** %this.addr, align 8
  %this1 = load %"class.std::ios_base::Init"*, %"class.std::ios_base::Init"** %this.addr, align 8
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt16allocator_traitsISaIPN8objectir5FieldEEE10deallocateERS3_PS2_m(%"class.std::ios_base::Init"* dereferenceable(1) %__a, %"struct.objectir::Field"** %__p, i64 %__n) #5 comdat align 2 {
entry:
  %__a.addr = alloca %"class.std::ios_base::Init"*, align 8
  %__p.addr = alloca %"struct.objectir::Field"**, align 8
  %__n.addr = alloca i64, align 8
  store %"class.std::ios_base::Init"* %__a, %"class.std::ios_base::Init"** %__a.addr, align 8
  store %"struct.objectir::Field"** %__p, %"struct.objectir::Field"*** %__p.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  %0 = load %"class.std::ios_base::Init"*, %"class.std::ios_base::Init"** %__a.addr, align 8
  %1 = bitcast %"class.std::ios_base::Init"* %0 to %"class.std::ios_base::Init"*
  %2 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__p.addr, align 8
  %3 = load i64, i64* %__n.addr, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIPN8objectir5FieldEE10deallocateEPS3_m(%"class.std::ios_base::Init"* %1, %"struct.objectir::Field"** %2, i64 %3)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIPN8objectir5FieldEE10deallocateEPS3_m(%"class.std::ios_base::Init"* %this, %"struct.objectir::Field"** %__p, i64) #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::ios_base::Init"*, align 8
  %__p.addr = alloca %"struct.objectir::Field"**, align 8
  %.addr = alloca i64, align 8
  store %"class.std::ios_base::Init"* %this, %"class.std::ios_base::Init"** %this.addr, align 8
  store %"struct.objectir::Field"** %__p, %"struct.objectir::Field"*** %__p.addr, align 8
  store i64 %0, i64* %.addr, align 8
  %this1 = load %"class.std::ios_base::Init"*, %"class.std::ios_base::Init"** %this.addr, align 8
  %1 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__p.addr, align 8
  %2 = bitcast %"struct.objectir::Field"** %1 to i8*
  call void @_ZdlPv(i8* %2) #3
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZSt8_DestroyIPPN8objectir5FieldEEvT_S4_(%"struct.objectir::Field"** %__first, %"struct.objectir::Field"** %__last) #5 comdat {
entry:
  %__first.addr = alloca %"struct.objectir::Field"**, align 8
  %__last.addr = alloca %"struct.objectir::Field"**, align 8
  store %"struct.objectir::Field"** %__first, %"struct.objectir::Field"*** %__first.addr, align 8
  store %"struct.objectir::Field"** %__last, %"struct.objectir::Field"*** %__last.addr, align 8
  %0 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__first.addr, align 8
  %1 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__last.addr, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPPN8objectir5FieldEEEvT_S6_(%"struct.objectir::Field"** %0, %"struct.objectir::Field"** %1)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt12_Destroy_auxILb1EE9__destroyIPPN8objectir5FieldEEEvT_S6_(%"struct.objectir::Field"**, %"struct.objectir::Field"**) #6 comdat align 2 {
entry:
  %.addr = alloca %"struct.objectir::Field"**, align 8
  %.addr1 = alloca %"struct.objectir::Field"**, align 8
  store %"struct.objectir::Field"** %0, %"struct.objectir::Field"*** %.addr, align 8
  store %"struct.objectir::Field"** %1, %"struct.objectir::Field"*** %.addr1, align 8
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt16allocator_traitsISaIPN8objectir5FieldEEE9constructIS2_JRKS2_EEEvRS3_PT_DpOT0_(%"class.std::ios_base::Init"* dereferenceable(1) %__a, %"struct.objectir::Field"** %__p, %"struct.objectir::Field"** dereferenceable(8) %__args) #5 comdat align 2 {
entry:
  %__a.addr = alloca %"class.std::ios_base::Init"*, align 8
  %__p.addr = alloca %"struct.objectir::Field"**, align 8
  %__args.addr = alloca %"struct.objectir::Field"**, align 8
  store %"class.std::ios_base::Init"* %__a, %"class.std::ios_base::Init"** %__a.addr, align 8
  store %"struct.objectir::Field"** %__p, %"struct.objectir::Field"*** %__p.addr, align 8
  store %"struct.objectir::Field"** %__args, %"struct.objectir::Field"*** %__args.addr, align 8
  %0 = load %"class.std::ios_base::Init"*, %"class.std::ios_base::Init"** %__a.addr, align 8
  %1 = bitcast %"class.std::ios_base::Init"* %0 to %"class.std::ios_base::Init"*
  %2 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__p.addr, align 8
  %3 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__args.addr, align 8
  %call = call dereferenceable(8) %"struct.objectir::Field"** @_ZSt7forwardIRKPN8objectir5FieldEEOT_RNSt16remove_referenceIS5_E4typeE(%"struct.objectir::Field"** dereferenceable(8) %3) #3
  call void @_ZN9__gnu_cxx13new_allocatorIPN8objectir5FieldEE9constructIS3_JRKS3_EEEvPT_DpOT0_(%"class.std::ios_base::Init"* %1, %"struct.objectir::Field"** %2, %"struct.objectir::Field"** dereferenceable(8) %call)
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIPN8objectir5FieldESaIS2_EE17_M_realloc_insertIJRKS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_(%"class.std::vector"* %this, %"struct.objectir::Field"** %__position.coerce, %"struct.objectir::Field"** dereferenceable(8) %__args) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__position = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %this.addr = alloca %"class.std::vector"*, align 8
  %__args.addr = alloca %"struct.objectir::Field"**, align 8
  %__len = alloca i64, align 8
  %__old_start = alloca %"struct.objectir::Field"**, align 8
  %__old_finish = alloca %"struct.objectir::Field"**, align 8
  %__elems_before = alloca i64, align 8
  %ref.tmp = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %__new_start = alloca %"struct.objectir::Field"**, align 8
  %__new_finish = alloca %"struct.objectir::Field"**, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %coerce.dive = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %__position, i32 0, i32 0
  store %"struct.objectir::Field"** %__position.coerce, %"struct.objectir::Field"*** %coerce.dive, align 8
  store %"class.std::vector"* %this, %"class.std::vector"** %this.addr, align 8
  store %"struct.objectir::Field"** %__args, %"struct.objectir::Field"*** %__args.addr, align 8
  %this1 = load %"class.std::vector"*, %"class.std::vector"** %this.addr, align 8
  %0 = getelementptr [26 x i8], [26 x i8]* @.str.1.41, i64 0, i64 0
  %call = call i64 @_ZNKSt6vectorIPN8objectir5FieldESaIS2_EE12_M_check_lenEmPKc(%"class.std::vector"* %this1, i64 1, i8* %0)
  store i64 %call, i64* %__len, align 8
  %1 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %1, i32 0, i32 0
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl", %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl"* %_M_impl, i32 0, i32 0
  %2 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %_M_start, align 8
  store %"struct.objectir::Field"** %2, %"struct.objectir::Field"*** %__old_start, align 8
  %3 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %_M_impl2 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %3, i32 0, i32 0
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl", %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl"* %_M_impl2, i32 0, i32 1
  %4 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %_M_finish, align 8
  store %"struct.objectir::Field"** %4, %"struct.objectir::Field"*** %__old_finish, align 8
  %call3 = call %"struct.objectir::Field"** @_ZNSt6vectorIPN8objectir5FieldESaIS2_EE5beginEv(%"class.std::vector"* %this1) #3
  %coerce.dive4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %ref.tmp, i32 0, i32 0
  store %"struct.objectir::Field"** %call3, %"struct.objectir::Field"*** %coerce.dive4, align 8
  %call5 = call i64 @_ZN9__gnu_cxxmiIPPN8objectir5FieldESt6vectorIS3_SaIS3_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %__position, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %ref.tmp) #3
  store i64 %call5, i64* %__elems_before, align 8
  %5 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %6 = load i64, i64* %__len, align 8
  %call6 = call %"struct.objectir::Field"** @_ZNSt12_Vector_baseIPN8objectir5FieldESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base"* %5, i64 %6)
  store %"struct.objectir::Field"** %call6, %"struct.objectir::Field"*** %__new_start, align 8
  %7 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__new_start, align 8
  store %"struct.objectir::Field"** %7, %"struct.objectir::Field"*** %__new_finish, align 8
  %8 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %_M_impl7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %8, i32 0, i32 0
  %9 = bitcast %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl"* %_M_impl7 to %"class.std::ios_base::Init"*
  %10 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__new_start, align 8
  %11 = load i64, i64* %__elems_before, align 8
  %add.ptr = getelementptr inbounds %"struct.objectir::Field"*, %"struct.objectir::Field"** %10, i64 %11
  %12 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__args.addr, align 8
  %call8 = call dereferenceable(8) %"struct.objectir::Field"** @_ZSt7forwardIRKPN8objectir5FieldEEOT_RNSt16remove_referenceIS5_E4typeE(%"struct.objectir::Field"** dereferenceable(8) %12) #3
  invoke void @_ZNSt16allocator_traitsISaIPN8objectir5FieldEEE9constructIS2_JRKS2_EEEvRS3_PT_DpOT0_(%"class.std::ios_base::Init"* dereferenceable(1) %9, %"struct.objectir::Field"** %add.ptr, %"struct.objectir::Field"** dereferenceable(8) %call8)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  store %"struct.objectir::Field"** null, %"struct.objectir::Field"*** %__new_finish, align 8
  %13 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__old_start, align 8
  %call9 = call dereferenceable(8) %"struct.objectir::Field"*** @_ZNK9__gnu_cxx17__normal_iteratorIPPN8objectir5FieldESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %__position) #3
  %14 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %call9, align 8
  %15 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__new_start, align 8
  %16 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %call10 = call dereferenceable(1) %"class.std::ios_base::Init"* @_ZNSt12_Vector_baseIPN8objectir5FieldESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %16) #3
  %call12 = invoke %"struct.objectir::Field"** @_ZSt34__uninitialized_move_if_noexcept_aIPPN8objectir5FieldES3_SaIS2_EET0_T_S6_S5_RT1_(%"struct.objectir::Field"** %13, %"struct.objectir::Field"** %14, %"struct.objectir::Field"** %15, %"class.std::ios_base::Init"* dereferenceable(1) %call10)
          to label %invoke.cont11 unwind label %lpad

invoke.cont11:                                    ; preds = %invoke.cont
  store %"struct.objectir::Field"** %call12, %"struct.objectir::Field"*** %__new_finish, align 8
  %17 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__new_finish, align 8
  %incdec.ptr = getelementptr inbounds %"struct.objectir::Field"*, %"struct.objectir::Field"** %17, i32 1
  store %"struct.objectir::Field"** %incdec.ptr, %"struct.objectir::Field"*** %__new_finish, align 8
  %call13 = call dereferenceable(8) %"struct.objectir::Field"*** @_ZNK9__gnu_cxx17__normal_iteratorIPPN8objectir5FieldESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %__position) #3
  %18 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %call13, align 8
  %19 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__old_finish, align 8
  %20 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__new_finish, align 8
  %21 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %call14 = call dereferenceable(1) %"class.std::ios_base::Init"* @_ZNSt12_Vector_baseIPN8objectir5FieldESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %21) #3
  %call16 = invoke %"struct.objectir::Field"** @_ZSt34__uninitialized_move_if_noexcept_aIPPN8objectir5FieldES3_SaIS2_EET0_T_S6_S5_RT1_(%"struct.objectir::Field"** %18, %"struct.objectir::Field"** %19, %"struct.objectir::Field"** %20, %"class.std::ios_base::Init"* dereferenceable(1) %call14)
          to label %invoke.cont15 unwind label %lpad

invoke.cont15:                                    ; preds = %invoke.cont11
  store %"struct.objectir::Field"** %call16, %"struct.objectir::Field"*** %__new_finish, align 8
  br label %try.cont

lpad:                                             ; preds = %invoke.cont11, %invoke.cont, %entry
  %22 = landingpad { i8*, i32 }
          catch i8* null
  %23 = extractvalue { i8*, i32 } %22, 0
  store i8* %23, i8** %exn.slot, align 8
  %24 = extractvalue { i8*, i32 } %22, 1
  store i32 %24, i32* %ehselector.slot, align 4
  br label %catch

catch:                                            ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %25 = call i8* @__cxa_begin_catch(i8* %exn) #3
  %26 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__new_finish, align 8
  %tobool = icmp ne %"struct.objectir::Field"** %26, null
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %catch
  %27 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %_M_impl17 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %27, i32 0, i32 0
  %28 = bitcast %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl"* %_M_impl17 to %"class.std::ios_base::Init"*
  %29 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__new_start, align 8
  %30 = load i64, i64* %__elems_before, align 8
  %add.ptr18 = getelementptr inbounds %"struct.objectir::Field"*, %"struct.objectir::Field"** %29, i64 %30
  invoke void @_ZNSt16allocator_traitsISaIPN8objectir5FieldEEE7destroyIS2_EEvRS3_PT_(%"class.std::ios_base::Init"* dereferenceable(1) %28, %"struct.objectir::Field"** %add.ptr18)
          to label %invoke.cont20 unwind label %lpad19

invoke.cont20:                                    ; preds = %if.then
  br label %if.end

lpad19:                                           ; preds = %invoke.cont23, %if.end, %if.else, %if.then
  %31 = landingpad { i8*, i32 }
          cleanup
  %32 = extractvalue { i8*, i32 } %31, 0
  store i8* %32, i8** %exn.slot, align 8
  %33 = extractvalue { i8*, i32 } %31, 1
  store i32 %33, i32* %ehselector.slot, align 4
  invoke void @__cxa_end_catch()
          to label %invoke.cont24 unwind label %terminate.lpad

if.else:                                          ; preds = %catch
  %34 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__new_start, align 8
  %35 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__new_finish, align 8
  %36 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %call21 = call dereferenceable(1) %"class.std::ios_base::Init"* @_ZNSt12_Vector_baseIPN8objectir5FieldESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %36) #3
  invoke void @_ZSt8_DestroyIPPN8objectir5FieldES2_EvT_S4_RSaIT0_E(%"struct.objectir::Field"** %34, %"struct.objectir::Field"** %35, %"class.std::ios_base::Init"* dereferenceable(1) %call21)
          to label %invoke.cont22 unwind label %lpad19

invoke.cont22:                                    ; preds = %if.else
  br label %if.end

if.end:                                           ; preds = %invoke.cont22, %invoke.cont20
  %37 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %38 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__new_start, align 8
  %39 = load i64, i64* %__len, align 8
  invoke void @_ZNSt12_Vector_baseIPN8objectir5FieldESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base"* %37, %"struct.objectir::Field"** %38, i64 %39)
          to label %invoke.cont23 unwind label %lpad19

invoke.cont23:                                    ; preds = %if.end
  invoke void @__cxa_rethrow() #17
          to label %unreachable unwind label %lpad19

invoke.cont24:                                    ; preds = %lpad19
  br label %eh.resume

try.cont:                                         ; preds = %invoke.cont15
  %40 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__old_start, align 8
  %41 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__old_finish, align 8
  %42 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %call25 = call dereferenceable(1) %"class.std::ios_base::Init"* @_ZNSt12_Vector_baseIPN8objectir5FieldESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %42) #3
  call void @_ZSt8_DestroyIPPN8objectir5FieldES2_EvT_S4_RSaIT0_E(%"struct.objectir::Field"** %40, %"struct.objectir::Field"** %41, %"class.std::ios_base::Init"* dereferenceable(1) %call25)
  %43 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %44 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__old_start, align 8
  %45 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %_M_impl26 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %45, i32 0, i32 0
  %_M_end_of_storage = getelementptr inbounds %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl", %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl"* %_M_impl26, i32 0, i32 2
  %46 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %_M_end_of_storage, align 8
  %47 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__old_start, align 8
  %sub.ptr.lhs.cast = ptrtoint %"struct.objectir::Field"** %46 to i64
  %sub.ptr.rhs.cast = ptrtoint %"struct.objectir::Field"** %47 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  call void @_ZNSt12_Vector_baseIPN8objectir5FieldESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base"* %43, %"struct.objectir::Field"** %44, i64 %sub.ptr.div)
  %48 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__new_start, align 8
  %49 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %_M_impl27 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %49, i32 0, i32 0
  %_M_start28 = getelementptr inbounds %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl", %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl"* %_M_impl27, i32 0, i32 0
  store %"struct.objectir::Field"** %48, %"struct.objectir::Field"*** %_M_start28, align 8
  %50 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__new_finish, align 8
  %51 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %_M_impl29 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %51, i32 0, i32 0
  %_M_finish30 = getelementptr inbounds %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl", %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl"* %_M_impl29, i32 0, i32 1
  store %"struct.objectir::Field"** %50, %"struct.objectir::Field"*** %_M_finish30, align 8
  %52 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__new_start, align 8
  %53 = load i64, i64* %__len, align 8
  %add.ptr31 = getelementptr inbounds %"struct.objectir::Field"*, %"struct.objectir::Field"** %52, i64 %53
  %54 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %_M_impl32 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %54, i32 0, i32 0
  %_M_end_of_storage33 = getelementptr inbounds %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl", %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl"* %_M_impl32, i32 0, i32 2
  store %"struct.objectir::Field"** %add.ptr31, %"struct.objectir::Field"*** %_M_end_of_storage33, align 8
  ret void

eh.resume:                                        ; preds = %invoke.cont24
  %exn34 = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn34, 0
  %lpad.val35 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val35

terminate.lpad:                                   ; preds = %lpad19
  %55 = landingpad { i8*, i32 }
          catch i8* null
  %56 = extractvalue { i8*, i32 } %55, 0
  call void @__clang_call_terminate(i8* %56) #14
  br label %UnifiedUnreachableBlock

unreachable:                                      ; preds = %invoke.cont23
  br label %UnifiedUnreachableBlock

UnifiedUnreachableBlock:                          ; preds = %unreachable, %terminate.lpad
  unreachable
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local i64 @_ZNKSt6vectorIPN8objectir5FieldESaIS2_EE12_M_check_lenEmPKc(%"class.std::vector"* %this, i64 %__n, i8* %__s) #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector"*, align 8
  %__n.addr = alloca i64, align 8
  %__s.addr = alloca i8*, align 8
  %__len = alloca i64, align 8
  %ref.tmp = alloca i64, align 8
  store %"class.std::vector"* %this, %"class.std::vector"** %this.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  store i8* %__s, i8** %__s.addr, align 8
  %this1 = load %"class.std::vector"*, %"class.std::vector"** %this.addr, align 8
  %call = call i64 @_ZNKSt6vectorIPN8objectir5FieldESaIS2_EE8max_sizeEv(%"class.std::vector"* %this1) #3
  %call2 = call i64 @_ZNKSt6vectorIPN8objectir5FieldESaIS2_EE4sizeEv(%"class.std::vector"* %this1) #3
  %sub = sub i64 %call, %call2
  %0 = load i64, i64* %__n.addr, align 8
  %cmp = icmp ult i64 %sub, %0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %__s.addr, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %1) #17
  unreachable

if.end:                                           ; preds = %entry
  %call3 = call i64 @_ZNKSt6vectorIPN8objectir5FieldESaIS2_EE4sizeEv(%"class.std::vector"* %this1) #3
  %call4 = call i64 @_ZNKSt6vectorIPN8objectir5FieldESaIS2_EE4sizeEv(%"class.std::vector"* %this1) #3
  store i64 %call4, i64* %ref.tmp, align 8
  %call5 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %ref.tmp, i64* dereferenceable(8) %__n.addr)
  %2 = load i64, i64* %call5, align 8
  %add = add i64 %call3, %2
  store i64 %add, i64* %__len, align 8
  %3 = load i64, i64* %__len, align 8
  %call6 = call i64 @_ZNKSt6vectorIPN8objectir5FieldESaIS2_EE4sizeEv(%"class.std::vector"* %this1) #3
  %cmp7 = icmp ult i64 %3, %call6
  br i1 %cmp7, label %if.end.cond.true_crit_edge, label %lor.lhs.false

if.end.cond.true_crit_edge:                       ; preds = %if.end
  br label %cond.true

lor.lhs.false:                                    ; preds = %if.end
  %4 = load i64, i64* %__len, align 8
  %call8 = call i64 @_ZNKSt6vectorIPN8objectir5FieldESaIS2_EE8max_sizeEv(%"class.std::vector"* %this1) #3
  %cmp9 = icmp ugt i64 %4, %call8
  br i1 %cmp9, label %lor.lhs.false.cond.true_crit_edge, label %cond.false

lor.lhs.false.cond.true_crit_edge:                ; preds = %lor.lhs.false
  br label %cond.true

cond.true:                                        ; preds = %lor.lhs.false.cond.true_crit_edge, %if.end.cond.true_crit_edge
  %call10 = call i64 @_ZNKSt6vectorIPN8objectir5FieldESaIS2_EE8max_sizeEv(%"class.std::vector"* %this1) #3
  br label %cond.end

cond.false:                                       ; preds = %lor.lhs.false
  %5 = load i64, i64* %__len, align 8
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %call10, %cond.true ], [ %5, %cond.false ]
  ret i64 %cond
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local i64 @_ZN9__gnu_cxxmiIPPN8objectir5FieldESt6vectorIS3_SaIS3_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %__lhs, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %__rhs) #6 comdat {
entry:
  %__lhs.addr = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %__rhs.addr = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %__lhs, %"class.__gnu_cxx::__normal_iterator"** %__lhs.addr, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %__rhs, %"class.__gnu_cxx::__normal_iterator"** %__rhs.addr, align 8
  %0 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %__lhs.addr, align 8
  %call = call dereferenceable(8) %"struct.objectir::Field"*** @_ZNK9__gnu_cxx17__normal_iteratorIPPN8objectir5FieldESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %0) #3
  %1 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %call, align 8
  %2 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %__rhs.addr, align 8
  %call1 = call dereferenceable(8) %"struct.objectir::Field"*** @_ZNK9__gnu_cxx17__normal_iteratorIPPN8objectir5FieldESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %2) #3
  %3 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %call1, align 8
  %sub.ptr.lhs.cast = ptrtoint %"struct.objectir::Field"** %1 to i64
  %sub.ptr.rhs.cast = ptrtoint %"struct.objectir::Field"** %3 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  ret i64 %sub.ptr.div
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local %"struct.objectir::Field"** @_ZNSt12_Vector_baseIPN8objectir5FieldESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base"* %this, i64 %__n) #5 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base"*, align 8
  %__n.addr = alloca i64, align 8
  store %"struct.std::_Vector_base"* %this, %"struct.std::_Vector_base"** %this.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  %this1 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %this.addr, align 8
  %0 = load i64, i64* %__n.addr, align 8
  %cmp = icmp ne i64 %0, 0
  br i1 %cmp, label %cond.true, label %cond.false

cond.true:                                        ; preds = %entry
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %this1, i32 0, i32 0
  %1 = bitcast %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl"* %_M_impl to %"class.std::ios_base::Init"*
  %2 = load i64, i64* %__n.addr, align 8
  %call = call %"struct.objectir::Field"** @_ZNSt16allocator_traitsISaIPN8objectir5FieldEEE8allocateERS3_m(%"class.std::ios_base::Init"* dereferenceable(1) %1, i64 %2)
  br label %cond.end

cond.false:                                       ; preds = %entry
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %"struct.objectir::Field"** [ %call, %cond.true ], [ null, %cond.false ]
  ret %"struct.objectir::Field"** %cond
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) %"struct.objectir::Field"** @_ZSt7forwardIRKPN8objectir5FieldEEOT_RNSt16remove_referenceIS5_E4typeE(%"struct.objectir::Field"** dereferenceable(8) %__t) #6 comdat {
entry:
  %__t.addr = alloca %"struct.objectir::Field"**, align 8
  store %"struct.objectir::Field"** %__t, %"struct.objectir::Field"*** %__t.addr, align 8
  %0 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__t.addr, align 8
  ret %"struct.objectir::Field"** %0
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local %"struct.objectir::Field"** @_ZSt34__uninitialized_move_if_noexcept_aIPPN8objectir5FieldES3_SaIS2_EET0_T_S6_S5_RT1_(%"struct.objectir::Field"** %__first, %"struct.objectir::Field"** %__last, %"struct.objectir::Field"** %__result, %"class.std::ios_base::Init"* dereferenceable(1) %__alloc) #5 comdat {
entry:
  %__first.addr = alloca %"struct.objectir::Field"**, align 8
  %__last.addr = alloca %"struct.objectir::Field"**, align 8
  %__result.addr = alloca %"struct.objectir::Field"**, align 8
  %__alloc.addr = alloca %"class.std::ios_base::Init"*, align 8
  %agg.tmp = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %agg.tmp1 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"struct.objectir::Field"** %__first, %"struct.objectir::Field"*** %__first.addr, align 8
  store %"struct.objectir::Field"** %__last, %"struct.objectir::Field"*** %__last.addr, align 8
  store %"struct.objectir::Field"** %__result, %"struct.objectir::Field"*** %__result.addr, align 8
  store %"class.std::ios_base::Init"* %__alloc, %"class.std::ios_base::Init"** %__alloc.addr, align 8
  %0 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__first.addr, align 8
  %call = call %"struct.objectir::Field"** @_ZSt32__make_move_if_noexcept_iteratorIPN8objectir5FieldESt13move_iteratorIPS2_EET0_PT_(%"struct.objectir::Field"** %0)
  %coerce.dive = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %agg.tmp, i32 0, i32 0
  store %"struct.objectir::Field"** %call, %"struct.objectir::Field"*** %coerce.dive, align 8
  %1 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__last.addr, align 8
  %call2 = call %"struct.objectir::Field"** @_ZSt32__make_move_if_noexcept_iteratorIPN8objectir5FieldESt13move_iteratorIPS2_EET0_PT_(%"struct.objectir::Field"** %1)
  %coerce.dive3 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %agg.tmp1, i32 0, i32 0
  store %"struct.objectir::Field"** %call2, %"struct.objectir::Field"*** %coerce.dive3, align 8
  %2 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__result.addr, align 8
  %3 = load %"class.std::ios_base::Init"*, %"class.std::ios_base::Init"** %__alloc.addr, align 8
  %coerce.dive4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %agg.tmp, i32 0, i32 0
  %4 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %coerce.dive4, align 8
  %coerce.dive5 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %agg.tmp1, i32 0, i32 0
  %5 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %coerce.dive5, align 8
  %call6 = call %"struct.objectir::Field"** @_ZSt22__uninitialized_copy_aISt13move_iteratorIPPN8objectir5FieldEES4_S3_ET0_T_S7_S6_RSaIT1_E(%"struct.objectir::Field"** %4, %"struct.objectir::Field"** %5, %"struct.objectir::Field"** %2, %"class.std::ios_base::Init"* dereferenceable(1) %3)
  ret %"struct.objectir::Field"** %call6
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt16allocator_traitsISaIPN8objectir5FieldEEE7destroyIS2_EEvRS3_PT_(%"class.std::ios_base::Init"* dereferenceable(1) %__a, %"struct.objectir::Field"** %__p) #5 comdat align 2 {
entry:
  %__a.addr = alloca %"class.std::ios_base::Init"*, align 8
  %__p.addr = alloca %"struct.objectir::Field"**, align 8
  store %"class.std::ios_base::Init"* %__a, %"class.std::ios_base::Init"** %__a.addr, align 8
  store %"struct.objectir::Field"** %__p, %"struct.objectir::Field"*** %__p.addr, align 8
  %0 = load %"class.std::ios_base::Init"*, %"class.std::ios_base::Init"** %__a.addr, align 8
  %1 = bitcast %"class.std::ios_base::Init"* %0 to %"class.std::ios_base::Init"*
  %2 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__p.addr, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIPN8objectir5FieldEE7destroyIS3_EEvPT_(%"class.std::ios_base::Init"* %1, %"struct.objectir::Field"** %2)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIPN8objectir5FieldEE7destroyIS3_EEvPT_(%"class.std::ios_base::Init"* %this, %"struct.objectir::Field"** %__p) #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::ios_base::Init"*, align 8
  %__p.addr = alloca %"struct.objectir::Field"**, align 8
  store %"class.std::ios_base::Init"* %this, %"class.std::ios_base::Init"** %this.addr, align 8
  store %"struct.objectir::Field"** %__p, %"struct.objectir::Field"*** %__p.addr, align 8
  %this1 = load %"class.std::ios_base::Init"*, %"class.std::ios_base::Init"** %this.addr, align 8
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local %"struct.objectir::Field"** @_ZSt32__make_move_if_noexcept_iteratorIPN8objectir5FieldESt13move_iteratorIPS2_EET0_PT_(%"struct.objectir::Field"** %__i) #5 comdat {
entry:
  %retval = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %__i.addr = alloca %"struct.objectir::Field"**, align 8
  store %"struct.objectir::Field"** %__i, %"struct.objectir::Field"*** %__i.addr, align 8
  %0 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__i.addr, align 8
  call void @_ZNSt13move_iteratorIPPN8objectir5FieldEEC2ES3_(%"class.__gnu_cxx::__normal_iterator"* %retval, %"struct.objectir::Field"** %0)
  %coerce.dive = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %retval, i32 0, i32 0
  %1 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %coerce.dive, align 8
  ret %"struct.objectir::Field"** %1
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local %"struct.objectir::Field"** @_ZSt22__uninitialized_copy_aISt13move_iteratorIPPN8objectir5FieldEES4_S3_ET0_T_S7_S6_RSaIT1_E(%"struct.objectir::Field"** %__first.coerce, %"struct.objectir::Field"** %__last.coerce, %"struct.objectir::Field"** %__result, %"class.std::ios_base::Init"* dereferenceable(1)) #5 comdat {
entry:
  %__first = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %__last = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %__result.addr = alloca %"struct.objectir::Field"**, align 8
  %.addr = alloca %"class.std::ios_base::Init"*, align 8
  %agg.tmp = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %agg.tmp2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %coerce.dive = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %__first, i32 0, i32 0
  store %"struct.objectir::Field"** %__first.coerce, %"struct.objectir::Field"*** %coerce.dive, align 8
  %coerce.dive1 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %__last, i32 0, i32 0
  store %"struct.objectir::Field"** %__last.coerce, %"struct.objectir::Field"*** %coerce.dive1, align 8
  store %"struct.objectir::Field"** %__result, %"struct.objectir::Field"*** %__result.addr, align 8
  store %"class.std::ios_base::Init"* %0, %"class.std::ios_base::Init"** %.addr, align 8
  %1 = bitcast %"class.__gnu_cxx::__normal_iterator"* %agg.tmp to i8*
  %2 = bitcast %"class.__gnu_cxx::__normal_iterator"* %__first to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 8, i1 false)
  %3 = bitcast %"class.__gnu_cxx::__normal_iterator"* %agg.tmp2 to i8*
  %4 = bitcast %"class.__gnu_cxx::__normal_iterator"* %__last to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 8, i1 false)
  %5 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__result.addr, align 8
  %coerce.dive3 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %agg.tmp, i32 0, i32 0
  %6 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %coerce.dive3, align 8
  %coerce.dive4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %agg.tmp2, i32 0, i32 0
  %7 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %coerce.dive4, align 8
  %call = call %"struct.objectir::Field"** @_ZSt18uninitialized_copyISt13move_iteratorIPPN8objectir5FieldEES4_ET0_T_S7_S6_(%"struct.objectir::Field"** %6, %"struct.objectir::Field"** %7, %"struct.objectir::Field"** %5)
  ret %"struct.objectir::Field"** %call
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local %"struct.objectir::Field"** @_ZSt18uninitialized_copyISt13move_iteratorIPPN8objectir5FieldEES4_ET0_T_S7_S6_(%"struct.objectir::Field"** %__first.coerce, %"struct.objectir::Field"** %__last.coerce, %"struct.objectir::Field"** %__result) #5 comdat {
entry:
  %__first = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %__last = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %__result.addr = alloca %"struct.objectir::Field"**, align 8
  %__assignable = alloca i8, align 1
  %agg.tmp = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %agg.tmp2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %coerce.dive = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %__first, i32 0, i32 0
  store %"struct.objectir::Field"** %__first.coerce, %"struct.objectir::Field"*** %coerce.dive, align 8
  %coerce.dive1 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %__last, i32 0, i32 0
  store %"struct.objectir::Field"** %__last.coerce, %"struct.objectir::Field"*** %coerce.dive1, align 8
  store %"struct.objectir::Field"** %__result, %"struct.objectir::Field"*** %__result.addr, align 8
  store i8 1, i8* %__assignable, align 1
  %0 = bitcast %"class.__gnu_cxx::__normal_iterator"* %agg.tmp to i8*
  %1 = bitcast %"class.__gnu_cxx::__normal_iterator"* %__first to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 8, i1 false)
  %2 = bitcast %"class.__gnu_cxx::__normal_iterator"* %agg.tmp2 to i8*
  %3 = bitcast %"class.__gnu_cxx::__normal_iterator"* %__last to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 8, i1 false)
  %4 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__result.addr, align 8
  %coerce.dive3 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %agg.tmp, i32 0, i32 0
  %5 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %coerce.dive3, align 8
  %coerce.dive4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %agg.tmp2, i32 0, i32 0
  %6 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %coerce.dive4, align 8
  %call = call %"struct.objectir::Field"** @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPPN8objectir5FieldEES6_EET0_T_S9_S8_(%"struct.objectir::Field"** %5, %"struct.objectir::Field"** %6, %"struct.objectir::Field"** %4)
  ret %"struct.objectir::Field"** %call
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local %"struct.objectir::Field"** @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPPN8objectir5FieldEES6_EET0_T_S9_S8_(%"struct.objectir::Field"** %__first.coerce, %"struct.objectir::Field"** %__last.coerce, %"struct.objectir::Field"** %__result) #5 comdat align 2 {
entry:
  %__first = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %__last = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %__result.addr = alloca %"struct.objectir::Field"**, align 8
  %agg.tmp = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %agg.tmp2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %coerce.dive = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %__first, i32 0, i32 0
  store %"struct.objectir::Field"** %__first.coerce, %"struct.objectir::Field"*** %coerce.dive, align 8
  %coerce.dive1 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %__last, i32 0, i32 0
  store %"struct.objectir::Field"** %__last.coerce, %"struct.objectir::Field"*** %coerce.dive1, align 8
  store %"struct.objectir::Field"** %__result, %"struct.objectir::Field"*** %__result.addr, align 8
  %0 = bitcast %"class.__gnu_cxx::__normal_iterator"* %agg.tmp to i8*
  %1 = bitcast %"class.__gnu_cxx::__normal_iterator"* %__first to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 8, i1 false)
  %2 = bitcast %"class.__gnu_cxx::__normal_iterator"* %agg.tmp2 to i8*
  %3 = bitcast %"class.__gnu_cxx::__normal_iterator"* %__last to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 %3, i64 8, i1 false)
  %4 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__result.addr, align 8
  %coerce.dive3 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %agg.tmp, i32 0, i32 0
  %5 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %coerce.dive3, align 8
  %coerce.dive4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %agg.tmp2, i32 0, i32 0
  %6 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %coerce.dive4, align 8
  %call = call %"struct.objectir::Field"** @_ZSt4copyISt13move_iteratorIPPN8objectir5FieldEES4_ET0_T_S7_S6_(%"struct.objectir::Field"** %5, %"struct.objectir::Field"** %6, %"struct.objectir::Field"** %4)
  ret %"struct.objectir::Field"** %call
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local %"struct.objectir::Field"** @_ZSt4copyISt13move_iteratorIPPN8objectir5FieldEES4_ET0_T_S7_S6_(%"struct.objectir::Field"** %__first.coerce, %"struct.objectir::Field"** %__last.coerce, %"struct.objectir::Field"** %__result) #5 comdat {
entry:
  %__first = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %__last = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %__result.addr = alloca %"struct.objectir::Field"**, align 8
  %agg.tmp = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %agg.tmp3 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %coerce.dive = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %__first, i32 0, i32 0
  store %"struct.objectir::Field"** %__first.coerce, %"struct.objectir::Field"*** %coerce.dive, align 8
  %coerce.dive1 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %__last, i32 0, i32 0
  store %"struct.objectir::Field"** %__last.coerce, %"struct.objectir::Field"*** %coerce.dive1, align 8
  store %"struct.objectir::Field"** %__result, %"struct.objectir::Field"*** %__result.addr, align 8
  %0 = bitcast %"class.__gnu_cxx::__normal_iterator"* %agg.tmp to i8*
  %1 = bitcast %"class.__gnu_cxx::__normal_iterator"* %__first to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %0, i8* align 8 %1, i64 8, i1 false)
  %coerce.dive2 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %agg.tmp, i32 0, i32 0
  %2 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %coerce.dive2, align 8
  %call = call %"struct.objectir::Field"** @_ZSt12__miter_baseIPPN8objectir5FieldEEDTcl12__miter_basecldtfp_4baseEEESt13move_iteratorIT_E(%"struct.objectir::Field"** %2)
  %3 = bitcast %"class.__gnu_cxx::__normal_iterator"* %agg.tmp3 to i8*
  %4 = bitcast %"class.__gnu_cxx::__normal_iterator"* %__last to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 8, i1 false)
  %coerce.dive4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %agg.tmp3, i32 0, i32 0
  %5 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %coerce.dive4, align 8
  %call5 = call %"struct.objectir::Field"** @_ZSt12__miter_baseIPPN8objectir5FieldEEDTcl12__miter_basecldtfp_4baseEEESt13move_iteratorIT_E(%"struct.objectir::Field"** %5)
  %6 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__result.addr, align 8
  %call6 = call %"struct.objectir::Field"** @_ZSt14__copy_move_a2ILb1EPPN8objectir5FieldES3_ET1_T0_S5_S4_(%"struct.objectir::Field"** %call, %"struct.objectir::Field"** %call5, %"struct.objectir::Field"** %6)
  ret %"struct.objectir::Field"** %call6
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local %"struct.objectir::Field"** @_ZSt12__miter_baseIPPN8objectir5FieldEEDTcl12__miter_basecldtfp_4baseEEESt13move_iteratorIT_E(%"struct.objectir::Field"** %__it.coerce) #5 comdat {
entry:
  %__it = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %coerce.dive = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %__it, i32 0, i32 0
  store %"struct.objectir::Field"** %__it.coerce, %"struct.objectir::Field"*** %coerce.dive, align 8
  %call = call %"struct.objectir::Field"** @_ZNKSt13move_iteratorIPPN8objectir5FieldEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %__it)
  %call1 = call %"struct.objectir::Field"** @_ZSt12__miter_baseIPPN8objectir5FieldEET_S4_(%"struct.objectir::Field"** %call)
  ret %"struct.objectir::Field"** %call1
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local %"struct.objectir::Field"** @_ZSt14__copy_move_a2ILb1EPPN8objectir5FieldES3_ET1_T0_S5_S4_(%"struct.objectir::Field"** %__first, %"struct.objectir::Field"** %__last, %"struct.objectir::Field"** %__result) #5 comdat {
entry:
  %__first.addr = alloca %"struct.objectir::Field"**, align 8
  %__last.addr = alloca %"struct.objectir::Field"**, align 8
  %__result.addr = alloca %"struct.objectir::Field"**, align 8
  store %"struct.objectir::Field"** %__first, %"struct.objectir::Field"*** %__first.addr, align 8
  store %"struct.objectir::Field"** %__last, %"struct.objectir::Field"*** %__last.addr, align 8
  store %"struct.objectir::Field"** %__result, %"struct.objectir::Field"*** %__result.addr, align 8
  %0 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__first.addr, align 8
  %call = call %"struct.objectir::Field"** @_ZSt12__niter_baseIPPN8objectir5FieldEET_S4_(%"struct.objectir::Field"** %0)
  %1 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__last.addr, align 8
  %call1 = call %"struct.objectir::Field"** @_ZSt12__niter_baseIPPN8objectir5FieldEET_S4_(%"struct.objectir::Field"** %1)
  %2 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__result.addr, align 8
  %call2 = call %"struct.objectir::Field"** @_ZSt12__niter_baseIPPN8objectir5FieldEET_S4_(%"struct.objectir::Field"** %2)
  %call3 = call %"struct.objectir::Field"** @_ZSt13__copy_move_aILb1EPPN8objectir5FieldES3_ET1_T0_S5_S4_(%"struct.objectir::Field"** %call, %"struct.objectir::Field"** %call1, %"struct.objectir::Field"** %call2)
  ret %"struct.objectir::Field"** %call3
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local %"struct.objectir::Field"** @_ZSt12__niter_baseIPPN8objectir5FieldEET_S4_(%"struct.objectir::Field"** %__it) #6 comdat {
entry:
  %__it.addr = alloca %"struct.objectir::Field"**, align 8
  store %"struct.objectir::Field"** %__it, %"struct.objectir::Field"*** %__it.addr, align 8
  %0 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__it.addr, align 8
  ret %"struct.objectir::Field"** %0
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local %"struct.objectir::Field"** @_ZSt13__copy_move_aILb1EPPN8objectir5FieldES3_ET1_T0_S5_S4_(%"struct.objectir::Field"** %__first, %"struct.objectir::Field"** %__last, %"struct.objectir::Field"** %__result) #5 comdat {
entry:
  %__first.addr = alloca %"struct.objectir::Field"**, align 8
  %__last.addr = alloca %"struct.objectir::Field"**, align 8
  %__result.addr = alloca %"struct.objectir::Field"**, align 8
  %__simple = alloca i8, align 1
  store %"struct.objectir::Field"** %__first, %"struct.objectir::Field"*** %__first.addr, align 8
  store %"struct.objectir::Field"** %__last, %"struct.objectir::Field"*** %__last.addr, align 8
  store %"struct.objectir::Field"** %__result, %"struct.objectir::Field"*** %__result.addr, align 8
  store i8 1, i8* %__simple, align 1
  %0 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__first.addr, align 8
  %1 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__last.addr, align 8
  %2 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__result.addr, align 8
  %call = call %"struct.objectir::Field"** @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIPN8objectir5FieldEEEPT_PKS6_S9_S7_(%"struct.objectir::Field"** %0, %"struct.objectir::Field"** %1, %"struct.objectir::Field"** %2)
  ret %"struct.objectir::Field"** %call
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local %"struct.objectir::Field"** @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIPN8objectir5FieldEEEPT_PKS6_S9_S7_(%"struct.objectir::Field"** %__first, %"struct.objectir::Field"** %__last, %"struct.objectir::Field"** %__result) #6 comdat align 2 {
entry:
  %__first.addr = alloca %"struct.objectir::Field"**, align 8
  %__last.addr = alloca %"struct.objectir::Field"**, align 8
  %__result.addr = alloca %"struct.objectir::Field"**, align 8
  %_Num = alloca i64, align 8
  store %"struct.objectir::Field"** %__first, %"struct.objectir::Field"*** %__first.addr, align 8
  store %"struct.objectir::Field"** %__last, %"struct.objectir::Field"*** %__last.addr, align 8
  store %"struct.objectir::Field"** %__result, %"struct.objectir::Field"*** %__result.addr, align 8
  %0 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__last.addr, align 8
  %1 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__first.addr, align 8
  %sub.ptr.lhs.cast = ptrtoint %"struct.objectir::Field"** %0 to i64
  %sub.ptr.rhs.cast = ptrtoint %"struct.objectir::Field"** %1 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  store i64 %sub.ptr.div, i64* %_Num, align 8
  %2 = load i64, i64* %_Num, align 8
  %tobool = icmp ne i64 %2, 0
  br i1 %tobool, label %if.then, label %entry.if.end_crit_edge

entry.if.end_crit_edge:                           ; preds = %entry
  br label %if.end

if.then:                                          ; preds = %entry
  %3 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__result.addr, align 8
  %4 = bitcast %"struct.objectir::Field"** %3 to i8*
  %5 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__first.addr, align 8
  %6 = bitcast %"struct.objectir::Field"** %5 to i8*
  %7 = load i64, i64* %_Num, align 8
  %mul = mul i64 8, %7
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %6, i64 %mul, i1 false)
  br label %if.end

if.end:                                           ; preds = %entry.if.end_crit_edge, %if.then
  %8 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__result.addr, align 8
  %9 = load i64, i64* %_Num, align 8
  %add.ptr = getelementptr inbounds %"struct.objectir::Field"*, %"struct.objectir::Field"** %8, i64 %9
  ret %"struct.objectir::Field"** %add.ptr
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local %"struct.objectir::Field"** @_ZNKSt13move_iteratorIPPN8objectir5FieldEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %this) #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %this, %"class.__gnu_cxx::__normal_iterator"** %this.addr, align 8
  %this1 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %this.addr, align 8
  %_M_current = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %this1, i32 0, i32 0
  %0 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %_M_current, align 8
  ret %"struct.objectir::Field"** %0
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local %"struct.objectir::Field"** @_ZSt12__miter_baseIPPN8objectir5FieldEET_S4_(%"struct.objectir::Field"** %__it) #6 comdat {
entry:
  %__it.addr = alloca %"struct.objectir::Field"**, align 8
  store %"struct.objectir::Field"** %__it, %"struct.objectir::Field"*** %__it.addr, align 8
  %0 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__it.addr, align 8
  ret %"struct.objectir::Field"** %0
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt13move_iteratorIPPN8objectir5FieldEEC2ES3_(%"class.__gnu_cxx::__normal_iterator"* %this, %"struct.objectir::Field"** %__i) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %__i.addr = alloca %"struct.objectir::Field"**, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %this, %"class.__gnu_cxx::__normal_iterator"** %this.addr, align 8
  store %"struct.objectir::Field"** %__i, %"struct.objectir::Field"*** %__i.addr, align 8
  %this1 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %this.addr, align 8
  %_M_current = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %this1, i32 0, i32 0
  %0 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__i.addr, align 8
  store %"struct.objectir::Field"** %0, %"struct.objectir::Field"*** %_M_current, align 8
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local %"struct.objectir::Field"** @_ZNSt16allocator_traitsISaIPN8objectir5FieldEEE8allocateERS3_m(%"class.std::ios_base::Init"* dereferenceable(1) %__a, i64 %__n) #5 comdat align 2 {
entry:
  %__a.addr = alloca %"class.std::ios_base::Init"*, align 8
  %__n.addr = alloca i64, align 8
  store %"class.std::ios_base::Init"* %__a, %"class.std::ios_base::Init"** %__a.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  %0 = load %"class.std::ios_base::Init"*, %"class.std::ios_base::Init"** %__a.addr, align 8
  %1 = bitcast %"class.std::ios_base::Init"* %0 to %"class.std::ios_base::Init"*
  %2 = load i64, i64* %__n.addr, align 8
  %call = call %"struct.objectir::Field"** @_ZN9__gnu_cxx13new_allocatorIPN8objectir5FieldEE8allocateEmPKv(%"class.std::ios_base::Init"* %1, i64 %2, i8* null)
  ret %"struct.objectir::Field"** %call
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local %"struct.objectir::Field"** @_ZN9__gnu_cxx13new_allocatorIPN8objectir5FieldEE8allocateEmPKv(%"class.std::ios_base::Init"* %this, i64 %__n, i8*) #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::ios_base::Init"*, align 8
  %__n.addr = alloca i64, align 8
  %.addr = alloca i8*, align 8
  store %"class.std::ios_base::Init"* %this, %"class.std::ios_base::Init"** %this.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  store i8* %0, i8** %.addr, align 8
  %this1 = load %"class.std::ios_base::Init"*, %"class.std::ios_base::Init"** %this.addr, align 8
  %1 = load i64, i64* %__n.addr, align 8
  %call = call i64 @_ZNK9__gnu_cxx13new_allocatorIPN8objectir5FieldEE8max_sizeEv(%"class.std::ios_base::Init"* %this1) #3
  %cmp = icmp ugt i64 %1, %call
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @_ZSt17__throw_bad_allocv() #17
  unreachable

if.end:                                           ; preds = %entry
  %2 = load i64, i64* %__n.addr, align 8
  %mul = mul i64 %2, 8
  %call2 = call i8* @_Znwm(i64 %mul)
  %3 = bitcast i8* %call2 to %"struct.objectir::Field"**
  ret %"struct.objectir::Field"** %3
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local i64 @_ZNK9__gnu_cxx13new_allocatorIPN8objectir5FieldEE8max_sizeEv(%"class.std::ios_base::Init"* %this) #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::ios_base::Init"*, align 8
  store %"class.std::ios_base::Init"* %this, %"class.std::ios_base::Init"** %this.addr, align 8
  %this1 = load %"class.std::ios_base::Init"*, %"class.std::ios_base::Init"** %this.addr, align 8
  ret i64 2305843009213693951
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local i64 @_ZNKSt6vectorIPN8objectir5FieldESaIS2_EE8max_sizeEv(%"class.std::vector"* %this) #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %this, %"class.std::vector"** %this.addr, align 8
  %this1 = load %"class.std::vector"*, %"class.std::vector"** %this.addr, align 8
  %0 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %call = call dereferenceable(1) %"class.std::ios_base::Init"* @_ZNKSt12_Vector_baseIPN8objectir5FieldESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %0) #3
  %call2 = call i64 @_ZNSt16allocator_traitsISaIPN8objectir5FieldEEE8max_sizeERKS3_(%"class.std::ios_base::Init"* dereferenceable(1) %call) #3
  ret i64 %call2
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local i64 @_ZNKSt6vectorIPN8objectir5FieldESaIS2_EE4sizeEv(%"class.std::vector"* %this) #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %this, %"class.std::vector"** %this.addr, align 8
  %this1 = load %"class.std::vector"*, %"class.std::vector"** %this.addr, align 8
  %0 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %0, i32 0, i32 0
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl", %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl"* %_M_impl, i32 0, i32 1
  %1 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %_M_finish, align 8
  %2 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %_M_impl2 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %2, i32 0, i32 0
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl", %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl"* %_M_impl2, i32 0, i32 0
  %3 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %_M_start, align 8
  %sub.ptr.lhs.cast = ptrtoint %"struct.objectir::Field"** %1 to i64
  %sub.ptr.rhs.cast = ptrtoint %"struct.objectir::Field"** %3 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  ret i64 %sub.ptr.div
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(1) %"class.std::ios_base::Init"* @_ZNKSt12_Vector_baseIPN8objectir5FieldESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %this) #6 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %this, %"struct.std::_Vector_base"** %this.addr, align 8
  %this1 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %this.addr, align 8
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %this1, i32 0, i32 0
  %0 = bitcast %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl"* %_M_impl to %"class.std::ios_base::Init"*
  ret %"class.std::ios_base::Init"* %0
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local i64 @_ZNSt16allocator_traitsISaIPN8objectir5FieldEEE8max_sizeERKS3_(%"class.std::ios_base::Init"* dereferenceable(1) %__a) #6 comdat align 2 {
entry:
  %__a.addr = alloca %"class.std::ios_base::Init"*, align 8
  store %"class.std::ios_base::Init"* %__a, %"class.std::ios_base::Init"** %__a.addr, align 8
  %0 = load %"class.std::ios_base::Init"*, %"class.std::ios_base::Init"** %__a.addr, align 8
  %1 = bitcast %"class.std::ios_base::Init"* %0 to %"class.std::ios_base::Init"*
  %call = call i64 @_ZNK9__gnu_cxx13new_allocatorIPN8objectir5FieldEE8max_sizeEv(%"class.std::ios_base::Init"* %1) #3
  ret i64 %call
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIPN8objectir5FieldEE9constructIS3_JRKS3_EEEvPT_DpOT0_(%"class.std::ios_base::Init"* %this, %"struct.objectir::Field"** %__p, %"struct.objectir::Field"** dereferenceable(8) %__args) #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::ios_base::Init"*, align 8
  %__p.addr = alloca %"struct.objectir::Field"**, align 8
  %__args.addr = alloca %"struct.objectir::Field"**, align 8
  store %"class.std::ios_base::Init"* %this, %"class.std::ios_base::Init"** %this.addr, align 8
  store %"struct.objectir::Field"** %__p, %"struct.objectir::Field"*** %__p.addr, align 8
  store %"struct.objectir::Field"** %__args, %"struct.objectir::Field"*** %__args.addr, align 8
  %this1 = load %"class.std::ios_base::Init"*, %"class.std::ios_base::Init"** %this.addr, align 8
  %0 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__p.addr, align 8
  %1 = bitcast %"struct.objectir::Field"** %0 to i8*
  %2 = bitcast i8* %1 to %"struct.objectir::Field"**
  %3 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__args.addr, align 8
  %call = call dereferenceable(8) %"struct.objectir::Field"** @_ZSt7forwardIRKPN8objectir5FieldEEOT_RNSt16remove_referenceIS5_E4typeE(%"struct.objectir::Field"** dereferenceable(8) %3) #3
  %4 = load %"struct.objectir::Field"*, %"struct.objectir::Field"** %call, align 8
  store %"struct.objectir::Field"* %4, %"struct.objectir::Field"** %2, align 8
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #12

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_ZN8objectir11DoubleFieldC2EPNS_4TypeE(%"struct.objectir::DoubleField"* %this, %"struct.objectir::Type"* %type) unnamed_addr #6 align 2 {
entry:
  %this.addr = alloca %"struct.objectir::DoubleField"*, align 8
  %type.addr = alloca %"struct.objectir::Type"*, align 8
  store %"struct.objectir::DoubleField"* %this, %"struct.objectir::DoubleField"** %this.addr, align 8
  store %"struct.objectir::Type"* %type, %"struct.objectir::Type"** %type.addr, align 8
  %this1 = load %"struct.objectir::DoubleField"*, %"struct.objectir::DoubleField"** %this.addr, align 8
  %0 = bitcast %"struct.objectir::DoubleField"* %this1 to %"struct.objectir::Field"*
  %1 = load %"struct.objectir::Type"*, %"struct.objectir::Type"** %type.addr, align 8
  call void @_ZN8objectir5FieldC2EPNS_4TypeE(%"struct.objectir::Field"* %0, %"struct.objectir::Type"* %1)
  %2 = bitcast %"struct.objectir::DoubleField"* %this1 to i32 (...)***
  %3 = getelementptr { [3 x i8*] }, { [3 x i8*] }* @_ZTVN8objectir11DoubleFieldE, i32 0, i32 0, i32 2
  %4 = bitcast i8** %3 to i32 (...)**
  store i32 (...)** %4, i32 (...)*** %2, align 8
  %value = getelementptr inbounds %"struct.objectir::DoubleField", %"struct.objectir::DoubleField"* %this1, i32 0, i32 1
  store double 0.000000e+00, double* %value, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_ZN8objectir5FieldC2EPNS_4TypeE(%"struct.objectir::Field"* %this, %"struct.objectir::Type"* %type) unnamed_addr #6 align 2 {
entry:
  %this.addr = alloca %"struct.objectir::Field"*, align 8
  %type.addr = alloca %"struct.objectir::Type"*, align 8
  store %"struct.objectir::Field"* %this, %"struct.objectir::Field"** %this.addr, align 8
  store %"struct.objectir::Type"* %type, %"struct.objectir::Type"** %type.addr, align 8
  %this1 = load %"struct.objectir::Field"*, %"struct.objectir::Field"** %this.addr, align 8
  %0 = bitcast %"struct.objectir::Field"* %this1 to i32 (...)***
  %1 = getelementptr { [3 x i8*] }, { [3 x i8*] }* @_ZTVN8objectir5FieldE, i32 0, i32 0, i32 2
  %2 = bitcast i8** %1 to i32 (...)**
  store i32 (...)** %2, i32 (...)*** %0, align 8
  %type2 = getelementptr inbounds %"struct.objectir::Field", %"struct.objectir::Field"* %this1, i32 0, i32 1
  %3 = load %"struct.objectir::Type"*, %"struct.objectir::Type"** %type.addr, align 8
  store %"struct.objectir::Type"* %3, %"struct.objectir::Type"** %type2, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_ZN8objectir10FloatFieldC2EPNS_4TypeE(%"struct.objectir::FloatField"* %this, %"struct.objectir::Type"* %type) unnamed_addr #6 align 2 {
entry:
  %this.addr = alloca %"struct.objectir::FloatField"*, align 8
  %type.addr = alloca %"struct.objectir::Type"*, align 8
  store %"struct.objectir::FloatField"* %this, %"struct.objectir::FloatField"** %this.addr, align 8
  store %"struct.objectir::Type"* %type, %"struct.objectir::Type"** %type.addr, align 8
  %this1 = load %"struct.objectir::FloatField"*, %"struct.objectir::FloatField"** %this.addr, align 8
  %0 = bitcast %"struct.objectir::FloatField"* %this1 to %"struct.objectir::Field"*
  %1 = load %"struct.objectir::Type"*, %"struct.objectir::Type"** %type.addr, align 8
  call void @_ZN8objectir5FieldC2EPNS_4TypeE(%"struct.objectir::Field"* %0, %"struct.objectir::Type"* %1)
  %2 = bitcast %"struct.objectir::FloatField"* %this1 to i32 (...)***
  %3 = getelementptr { [3 x i8*] }, { [3 x i8*] }* @_ZTVN8objectir10FloatFieldE, i32 0, i32 0, i32 2
  %4 = bitcast i8** %3 to i32 (...)**
  store i32 (...)** %4, i32 (...)*** %2, align 8
  %value = getelementptr inbounds %"struct.objectir::FloatField", %"struct.objectir::FloatField"* %this1, i32 0, i32 1
  store float 0.000000e+00, float* %value, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_ZN8objectir12IntegerFieldC2EPNS_4TypeE(%"struct.objectir::IntegerField"* %this, %"struct.objectir::Type"* %type) unnamed_addr #6 align 2 {
entry:
  %this.addr = alloca %"struct.objectir::IntegerField"*, align 8
  %type.addr = alloca %"struct.objectir::Type"*, align 8
  store %"struct.objectir::IntegerField"* %this, %"struct.objectir::IntegerField"** %this.addr, align 8
  store %"struct.objectir::Type"* %type, %"struct.objectir::Type"** %type.addr, align 8
  %this1 = load %"struct.objectir::IntegerField"*, %"struct.objectir::IntegerField"** %this.addr, align 8
  %0 = bitcast %"struct.objectir::IntegerField"* %this1 to %"struct.objectir::Field"*
  %1 = load %"struct.objectir::Type"*, %"struct.objectir::Type"** %type.addr, align 8
  call void @_ZN8objectir5FieldC2EPNS_4TypeE(%"struct.objectir::Field"* %0, %"struct.objectir::Type"* %1)
  %2 = bitcast %"struct.objectir::IntegerField"* %this1 to i32 (...)***
  %3 = getelementptr { [3 x i8*] }, { [3 x i8*] }* @_ZTVN8objectir12IntegerFieldE, i32 0, i32 0, i32 2
  %4 = bitcast i8** %3 to i32 (...)**
  store i32 (...)** %4, i32 (...)*** %2, align 8
  %value = getelementptr inbounds %"struct.objectir::IntegerField", %"struct.objectir::IntegerField"* %this1, i32 0, i32 1
  store i64 0, i64* %value, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_ZN8objectir11ObjectFieldC2EPNS_4TypeE(%"struct.objectir::ObjectField"* %this, %"struct.objectir::Type"* %type) unnamed_addr #6 align 2 {
entry:
  %this.addr = alloca %"struct.objectir::ObjectField"*, align 8
  %type.addr = alloca %"struct.objectir::Type"*, align 8
  store %"struct.objectir::ObjectField"* %this, %"struct.objectir::ObjectField"** %this.addr, align 8
  store %"struct.objectir::Type"* %type, %"struct.objectir::Type"** %type.addr, align 8
  %this1 = load %"struct.objectir::ObjectField"*, %"struct.objectir::ObjectField"** %this.addr, align 8
  %0 = bitcast %"struct.objectir::ObjectField"* %this1 to %"struct.objectir::Field"*
  %1 = load %"struct.objectir::Type"*, %"struct.objectir::Type"** %type.addr, align 8
  call void @_ZN8objectir5FieldC2EPNS_4TypeE(%"struct.objectir::Field"* %0, %"struct.objectir::Type"* %1)
  %2 = bitcast %"struct.objectir::ObjectField"* %this1 to i32 (...)***
  %3 = getelementptr { [3 x i8*] }, { [3 x i8*] }* @_ZTVN8objectir11ObjectFieldE, i32 0, i32 0, i32 2
  %4 = bitcast i8** %3 to i32 (...)**
  store i32 (...)** %4, i32 (...)*** %2, align 8
  %value = getelementptr inbounds %"struct.objectir::ObjectField", %"struct.objectir::ObjectField"* %this1, i32 0, i32 1
  store %"struct.objectir::Object"* null, %"struct.objectir::Object"** %value, align 8
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIPN8objectir5FieldESaIS2_EEC2Ev(%"struct.std::_Vector_base"* %this) unnamed_addr #5 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %this, %"struct.std::_Vector_base"** %this.addr, align 8
  %this1 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %this.addr, align 8
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %this1, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIPN8objectir5FieldESaIS2_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl"* %_M_impl)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSt12_Vector_baseIPN8objectir5FieldESaIS2_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl"* %this) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl"* %this, %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl"** %this.addr, align 8
  %this1 = load %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl"*, %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl"** %this.addr, align 8
  %0 = bitcast %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl"* %this1 to %"class.std::ios_base::Init"*
  call void @_ZNSaIPN8objectir5FieldEEC2Ev(%"class.std::ios_base::Init"* %0) #3
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl", %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl"* %this1, i32 0, i32 0
  store %"struct.objectir::Field"** null, %"struct.objectir::Field"*** %_M_start, align 8
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl", %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl"* %this1, i32 0, i32 1
  store %"struct.objectir::Field"** null, %"struct.objectir::Field"*** %_M_finish, align 8
  %_M_end_of_storage = getelementptr inbounds %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl", %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl"* %this1, i32 0, i32 2
  store %"struct.objectir::Field"** null, %"struct.objectir::Field"*** %_M_end_of_storage, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZNSaIPN8objectir5FieldEEC2Ev(%"class.std::ios_base::Init"* %this) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::ios_base::Init"*, align 8
  store %"class.std::ios_base::Init"* %this, %"class.std::ios_base::Init"** %this.addr, align 8
  %this1 = load %"class.std::ios_base::Init"*, %"class.std::ios_base::Init"** %this.addr, align 8
  %0 = bitcast %"class.std::ios_base::Init"* %this1 to %"class.std::ios_base::Init"*
  call void @_ZN9__gnu_cxx13new_allocatorIPN8objectir5FieldEEC2Ev(%"class.std::ios_base::Init"* %0) #3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIPN8objectir5FieldEEC2Ev(%"class.std::ios_base::Init"* %this) unnamed_addr #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::ios_base::Init"*, align 8
  store %"class.std::ios_base::Init"* %this, %"class.std::ios_base::Init"** %this.addr, align 8
  %this1 = load %"class.std::ios_base::Init"*, %"class.std::ios_base::Init"** %this.addr, align 8
  ret void
}

; Function Attrs: noinline optnone uwtable
define dso_local %"struct.objectir::Object"* @buildArray(%"struct.objectir::Type"* %type, i64 %length) #5 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %type.addr = alloca %"struct.objectir::Type"*, align 8
  %length.addr = alloca i64, align 8
  %array = alloca %"struct.objectir::Array"*, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  store %"struct.objectir::Type"* %type, %"struct.objectir::Type"** %type.addr, align 8
  store i64 %length, i64* %length.addr, align 8
  %call = call i8* @_Znwm(i64 40) #16
  %0 = bitcast i8* %call to %"struct.objectir::Array"*
  %1 = load %"struct.objectir::Type"*, %"struct.objectir::Type"** %type.addr, align 8
  %2 = load i64, i64* %length.addr, align 8
  invoke void @_ZN8objectir5ArrayC1EPNS_4TypeEm(%"struct.objectir::Array"* %0, %"struct.objectir::Type"* %1, i64 %2)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  store %"struct.objectir::Array"* %0, %"struct.objectir::Array"** %array, align 8
  %3 = load %"struct.objectir::Array"*, %"struct.objectir::Array"** %array, align 8
  %4 = bitcast %"struct.objectir::Array"* %3 to %"struct.objectir::Object"*
  ret %"struct.objectir::Object"* %4

lpad:                                             ; preds = %entry
  %5 = landingpad { i8*, i32 }
          cleanup
  %6 = extractvalue { i8*, i32 } %5, 0
  store i8* %6, i8** %exn.slot, align 8
  %7 = extractvalue { i8*, i32 } %5, 1
  store i32 %7, i32* %ehselector.slot, align 4
  call void @_ZdlPv(i8* %call) #15
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val1 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val1
}

; Function Attrs: noinline optnone uwtable
define dso_local void @_ZN8objectir5ArrayC2EPNS_4TypeEm(%"struct.objectir::Array"* %this, %"struct.objectir::Type"* %type, i64 %length) unnamed_addr #5 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"struct.objectir::Array"*, align 8
  %type.addr = alloca %"struct.objectir::Type"*, align 8
  %length.addr = alloca i64, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %i = alloca i32, align 4
  %ref.tmp = alloca %"struct.objectir::Field"*, align 8
  store %"struct.objectir::Array"* %this, %"struct.objectir::Array"** %this.addr, align 8
  store %"struct.objectir::Type"* %type, %"struct.objectir::Type"** %type.addr, align 8
  store i64 %length, i64* %length.addr, align 8
  %this1 = load %"struct.objectir::Array"*, %"struct.objectir::Array"** %this.addr, align 8
  %0 = bitcast %"struct.objectir::Array"* %this1 to %"struct.objectir::Object"*
  %call = call i8* @_Znwm(i64 24) #16
  %1 = bitcast i8* %call to %"struct.objectir::ArrayType"*
  %2 = load %"struct.objectir::Type"*, %"struct.objectir::Type"** %type.addr, align 8
  invoke void @_ZN8objectir9ArrayTypeC1EPNS_4TypeE(%"struct.objectir::ArrayType"* %1, %"struct.objectir::Type"* %2)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %3 = bitcast %"struct.objectir::ArrayType"* %1 to %"struct.objectir::Type"*
  call void @_ZN8objectir6ObjectC2EPNS_4TypeE(%"struct.objectir::Object"* %0, %"struct.objectir::Type"* %3)
  %length2 = getelementptr inbounds %"struct.objectir::Array", %"struct.objectir::Array"* %this1, i32 0, i32 1
  %4 = load i64, i64* %length.addr, align 8
  store i64 %4, i64* %length2, align 8
  store i32 0, i32* %i, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %invoke.cont
  %5 = load i32, i32* %i, align 4
  %conv = sext i32 %5 to i64
  %6 = load i64, i64* %length.addr, align 8
  %cmp = icmp ult i64 %conv, %6
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %7 = bitcast %"struct.objectir::Array"* %this1 to %"struct.objectir::Object"*
  %fields = getelementptr inbounds %"struct.objectir::Object", %"struct.objectir::Object"* %7, i32 0, i32 1
  store %"struct.objectir::Field"* null, %"struct.objectir::Field"** %ref.tmp, align 8
  invoke void @_ZNSt6vectorIPN8objectir5FieldESaIS2_EE9push_backEOS2_(%"class.std::vector"* %fields, %"struct.objectir::Field"** dereferenceable(8) %ref.tmp)
          to label %invoke.cont4 unwind label %lpad3

invoke.cont4:                                     ; preds = %for.body
  br label %for.inc

for.inc:                                          ; preds = %invoke.cont4
  %8 = load i32, i32* %i, align 4
  %inc = add nsw i32 %8, 1
  store i32 %inc, i32* %i, align 4
  br label %for.cond

lpad:                                             ; preds = %entry
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  store i8* %10, i8** %exn.slot, align 8
  %11 = extractvalue { i8*, i32 } %9, 1
  store i32 %11, i32* %ehselector.slot, align 4
  call void @_ZdlPv(i8* %call) #15
  br label %eh.resume

lpad3:                                            ; preds = %for.body
  %12 = landingpad { i8*, i32 }
          cleanup
  %13 = extractvalue { i8*, i32 } %12, 0
  store i8* %13, i8** %exn.slot, align 8
  %14 = extractvalue { i8*, i32 } %12, 1
  store i32 %14, i32* %ehselector.slot, align 4
  %15 = bitcast %"struct.objectir::Array"* %this1 to %"struct.objectir::Object"*
  call void @_ZN8objectir6ObjectD2Ev(%"struct.objectir::Object"* %15) #3
  br label %eh.resume

for.end:                                          ; preds = %for.cond
  ret void

eh.resume:                                        ; preds = %lpad3, %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val5 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val5
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIPN8objectir5FieldESaIS2_EE9push_backEOS2_(%"class.std::vector"* %this, %"struct.objectir::Field"** dereferenceable(8) %__x) #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector"*, align 8
  %__x.addr = alloca %"struct.objectir::Field"**, align 8
  store %"class.std::vector"* %this, %"class.std::vector"** %this.addr, align 8
  store %"struct.objectir::Field"** %__x, %"struct.objectir::Field"*** %__x.addr, align 8
  %this1 = load %"class.std::vector"*, %"class.std::vector"** %this.addr, align 8
  %0 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__x.addr, align 8
  %call = call dereferenceable(8) %"struct.objectir::Field"** @_ZSt4moveIRPN8objectir5FieldEEONSt16remove_referenceIT_E4typeEOS5_(%"struct.objectir::Field"** dereferenceable(8) %0) #3
  call void @_ZNSt6vectorIPN8objectir5FieldESaIS2_EE12emplace_backIJS2_EEEvDpOT_(%"class.std::vector"* %this1, %"struct.objectir::Field"** dereferenceable(8) %call)
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_ZN8objectir6ObjectD2Ev(%"struct.objectir::Object"* %this) unnamed_addr #6 align 2 {
entry:
  %this.addr = alloca %"struct.objectir::Object"*, align 8
  %__range1 = alloca %"class.std::vector"*, align 8
  %__begin1 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %__end1 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %field = alloca %"struct.objectir::Field"*, align 8
  store %"struct.objectir::Object"* %this, %"struct.objectir::Object"** %this.addr, align 8
  %this1 = load %"struct.objectir::Object"*, %"struct.objectir::Object"** %this.addr, align 8
  %type = getelementptr inbounds %"struct.objectir::Object", %"struct.objectir::Object"* %this1, i32 0, i32 0
  %0 = load %"struct.objectir::Type"*, %"struct.objectir::Type"** %type, align 8
  %isnull = icmp eq %"struct.objectir::Type"* %0, null
  br i1 %isnull, label %entry.delete.end_crit_edge, label %delete.notnull

entry.delete.end_crit_edge:                       ; preds = %entry
  br label %delete.end

delete.notnull:                                   ; preds = %entry
  call void @_ZN8objectir4TypeD1Ev(%"struct.objectir::Type"* %0) #3
  %1 = bitcast %"struct.objectir::Type"* %0 to i8*
  call void @_ZdlPv(i8* %1) #15
  br label %delete.end

delete.end:                                       ; preds = %entry.delete.end_crit_edge, %delete.notnull
  %fields = getelementptr inbounds %"struct.objectir::Object", %"struct.objectir::Object"* %this1, i32 0, i32 1
  store %"class.std::vector"* %fields, %"class.std::vector"** %__range1, align 8
  %2 = load %"class.std::vector"*, %"class.std::vector"** %__range1, align 8
  %call = call %"struct.objectir::Field"** @_ZNSt6vectorIPN8objectir5FieldESaIS2_EE5beginEv(%"class.std::vector"* %2) #3
  %coerce.dive = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %__begin1, i32 0, i32 0
  store %"struct.objectir::Field"** %call, %"struct.objectir::Field"*** %coerce.dive, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %__range1, align 8
  %call2 = call %"struct.objectir::Field"** @_ZNSt6vectorIPN8objectir5FieldESaIS2_EE3endEv(%"class.std::vector"* %3) #3
  %coerce.dive3 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %__end1, i32 0, i32 0
  store %"struct.objectir::Field"** %call2, %"struct.objectir::Field"*** %coerce.dive3, align 8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %delete.end
  %call4 = call zeroext i1 @_ZN9__gnu_cxxneIPPN8objectir5FieldESt6vectorIS3_SaIS3_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %__begin1, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %__end1) #3
  br i1 %call4, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %call5 = call dereferenceable(8) %"struct.objectir::Field"** @_ZNK9__gnu_cxx17__normal_iteratorIPPN8objectir5FieldESt6vectorIS3_SaIS3_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %__begin1) #3
  %4 = load %"struct.objectir::Field"*, %"struct.objectir::Field"** %call5, align 8
  store %"struct.objectir::Field"* %4, %"struct.objectir::Field"** %field, align 8
  %5 = load %"struct.objectir::Field"*, %"struct.objectir::Field"** %field, align 8
  %isnull6 = icmp eq %"struct.objectir::Field"* %5, null
  br i1 %isnull6, label %for.body.delete.end8_crit_edge, label %delete.notnull7

for.body.delete.end8_crit_edge:                   ; preds = %for.body
  br label %delete.end8

delete.notnull7:                                  ; preds = %for.body
  %6 = bitcast %"struct.objectir::Field"* %5 to i8*
  call void @_ZdlPv(i8* %6) #15
  br label %delete.end8

delete.end8:                                      ; preds = %for.body.delete.end8_crit_edge, %delete.notnull7
  br label %for.inc

for.inc:                                          ; preds = %delete.end8
  %call9 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPPN8objectir5FieldESt6vectorIS3_SaIS3_EEEppEv(%"class.__gnu_cxx::__normal_iterator"* %__begin1) #3
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %fields10 = getelementptr inbounds %"struct.objectir::Object", %"struct.objectir::Object"* %this1, i32 0, i32 1
  call void @_ZNSt6vectorIPN8objectir5FieldESaIS2_EED2Ev(%"class.std::vector"* %fields10) #3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) %"struct.objectir::Field"** @_ZSt4moveIRPN8objectir5FieldEEONSt16remove_referenceIT_E4typeEOS5_(%"struct.objectir::Field"** dereferenceable(8) %__t) #6 comdat {
entry:
  %__t.addr = alloca %"struct.objectir::Field"**, align 8
  store %"struct.objectir::Field"** %__t, %"struct.objectir::Field"*** %__t.addr, align 8
  %0 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__t.addr, align 8
  ret %"struct.objectir::Field"** %0
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIPN8objectir5FieldESaIS2_EE12emplace_backIJS2_EEEvDpOT_(%"class.std::vector"* %this, %"struct.objectir::Field"** dereferenceable(8) %__args) #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector"*, align 8
  %__args.addr = alloca %"struct.objectir::Field"**, align 8
  %agg.tmp = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.std::vector"* %this, %"class.std::vector"** %this.addr, align 8
  store %"struct.objectir::Field"** %__args, %"struct.objectir::Field"*** %__args.addr, align 8
  %this1 = load %"class.std::vector"*, %"class.std::vector"** %this.addr, align 8
  %0 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %0, i32 0, i32 0
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl", %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl"* %_M_impl, i32 0, i32 1
  %1 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %_M_finish, align 8
  %2 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %_M_impl2 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %2, i32 0, i32 0
  %_M_end_of_storage = getelementptr inbounds %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl", %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl"* %_M_impl2, i32 0, i32 2
  %3 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %_M_end_of_storage, align 8
  %cmp = icmp ne %"struct.objectir::Field"** %1, %3
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %4 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %_M_impl3 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %4, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl"* %_M_impl3 to %"class.std::ios_base::Init"*
  %6 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %_M_impl4 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %_M_finish5 = getelementptr inbounds %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl", %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl"* %_M_impl4, i32 0, i32 1
  %7 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %_M_finish5, align 8
  %8 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__args.addr, align 8
  %call = call dereferenceable(8) %"struct.objectir::Field"** @_ZSt7forwardIPN8objectir5FieldEEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.objectir::Field"** dereferenceable(8) %8) #3
  call void @_ZNSt16allocator_traitsISaIPN8objectir5FieldEEE9constructIS2_JS2_EEEvRS3_PT_DpOT0_(%"class.std::ios_base::Init"* dereferenceable(1) %5, %"struct.objectir::Field"** %7, %"struct.objectir::Field"** dereferenceable(8) %call)
  %9 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %_M_impl6 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %9, i32 0, i32 0
  %_M_finish7 = getelementptr inbounds %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl", %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl"* %_M_impl6, i32 0, i32 1
  %10 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %_M_finish7, align 8
  %incdec.ptr = getelementptr inbounds %"struct.objectir::Field"*, %"struct.objectir::Field"** %10, i32 1
  store %"struct.objectir::Field"** %incdec.ptr, %"struct.objectir::Field"*** %_M_finish7, align 8
  br label %if.end

if.else:                                          ; preds = %entry
  %call8 = call %"struct.objectir::Field"** @_ZNSt6vectorIPN8objectir5FieldESaIS2_EE3endEv(%"class.std::vector"* %this1) #3
  %coerce.dive = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %agg.tmp, i32 0, i32 0
  store %"struct.objectir::Field"** %call8, %"struct.objectir::Field"*** %coerce.dive, align 8
  %11 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__args.addr, align 8
  %call9 = call dereferenceable(8) %"struct.objectir::Field"** @_ZSt7forwardIPN8objectir5FieldEEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.objectir::Field"** dereferenceable(8) %11) #3
  %coerce.dive10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %agg.tmp, i32 0, i32 0
  %12 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %coerce.dive10, align 8
  call void @_ZNSt6vectorIPN8objectir5FieldESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_(%"class.std::vector"* %this1, %"struct.objectir::Field"** %12, %"struct.objectir::Field"** dereferenceable(8) %call9)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) %"struct.objectir::Field"** @_ZSt7forwardIPN8objectir5FieldEEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.objectir::Field"** dereferenceable(8) %__t) #6 comdat {
entry:
  %__t.addr = alloca %"struct.objectir::Field"**, align 8
  store %"struct.objectir::Field"** %__t, %"struct.objectir::Field"*** %__t.addr, align 8
  %0 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__t.addr, align 8
  ret %"struct.objectir::Field"** %0
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt16allocator_traitsISaIPN8objectir5FieldEEE9constructIS2_JS2_EEEvRS3_PT_DpOT0_(%"class.std::ios_base::Init"* dereferenceable(1) %__a, %"struct.objectir::Field"** %__p, %"struct.objectir::Field"** dereferenceable(8) %__args) #5 comdat align 2 {
entry:
  %__a.addr = alloca %"class.std::ios_base::Init"*, align 8
  %__p.addr = alloca %"struct.objectir::Field"**, align 8
  %__args.addr = alloca %"struct.objectir::Field"**, align 8
  store %"class.std::ios_base::Init"* %__a, %"class.std::ios_base::Init"** %__a.addr, align 8
  store %"struct.objectir::Field"** %__p, %"struct.objectir::Field"*** %__p.addr, align 8
  store %"struct.objectir::Field"** %__args, %"struct.objectir::Field"*** %__args.addr, align 8
  %0 = load %"class.std::ios_base::Init"*, %"class.std::ios_base::Init"** %__a.addr, align 8
  %1 = bitcast %"class.std::ios_base::Init"* %0 to %"class.std::ios_base::Init"*
  %2 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__p.addr, align 8
  %3 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__args.addr, align 8
  %call = call dereferenceable(8) %"struct.objectir::Field"** @_ZSt7forwardIPN8objectir5FieldEEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.objectir::Field"** dereferenceable(8) %3) #3
  call void @_ZN9__gnu_cxx13new_allocatorIPN8objectir5FieldEE9constructIS3_JS3_EEEvPT_DpOT0_(%"class.std::ios_base::Init"* %1, %"struct.objectir::Field"** %2, %"struct.objectir::Field"** dereferenceable(8) %call)
  ret void
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNSt6vectorIPN8objectir5FieldESaIS2_EE17_M_realloc_insertIJS2_EEEvN9__gnu_cxx17__normal_iteratorIPS2_S4_EEDpOT_(%"class.std::vector"* %this, %"struct.objectir::Field"** %__position.coerce, %"struct.objectir::Field"** dereferenceable(8) %__args) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %__position = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %this.addr = alloca %"class.std::vector"*, align 8
  %__args.addr = alloca %"struct.objectir::Field"**, align 8
  %__len = alloca i64, align 8
  %__old_start = alloca %"struct.objectir::Field"**, align 8
  %__old_finish = alloca %"struct.objectir::Field"**, align 8
  %__elems_before = alloca i64, align 8
  %ref.tmp = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %__new_start = alloca %"struct.objectir::Field"**, align 8
  %__new_finish = alloca %"struct.objectir::Field"**, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  %coerce.dive = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %__position, i32 0, i32 0
  store %"struct.objectir::Field"** %__position.coerce, %"struct.objectir::Field"*** %coerce.dive, align 8
  store %"class.std::vector"* %this, %"class.std::vector"** %this.addr, align 8
  store %"struct.objectir::Field"** %__args, %"struct.objectir::Field"*** %__args.addr, align 8
  %this1 = load %"class.std::vector"*, %"class.std::vector"** %this.addr, align 8
  %0 = getelementptr [26 x i8], [26 x i8]* @.str.1.41, i64 0, i64 0
  %call = call i64 @_ZNKSt6vectorIPN8objectir5FieldESaIS2_EE12_M_check_lenEmPKc(%"class.std::vector"* %this1, i64 1, i8* %0)
  store i64 %call, i64* %__len, align 8
  %1 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %1, i32 0, i32 0
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl", %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl"* %_M_impl, i32 0, i32 0
  %2 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %_M_start, align 8
  store %"struct.objectir::Field"** %2, %"struct.objectir::Field"*** %__old_start, align 8
  %3 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %_M_impl2 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %3, i32 0, i32 0
  %_M_finish = getelementptr inbounds %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl", %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl"* %_M_impl2, i32 0, i32 1
  %4 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %_M_finish, align 8
  store %"struct.objectir::Field"** %4, %"struct.objectir::Field"*** %__old_finish, align 8
  %call3 = call %"struct.objectir::Field"** @_ZNSt6vectorIPN8objectir5FieldESaIS2_EE5beginEv(%"class.std::vector"* %this1) #3
  %coerce.dive4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %ref.tmp, i32 0, i32 0
  store %"struct.objectir::Field"** %call3, %"struct.objectir::Field"*** %coerce.dive4, align 8
  %call5 = call i64 @_ZN9__gnu_cxxmiIPPN8objectir5FieldESt6vectorIS3_SaIS3_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSB_SE_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %__position, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %ref.tmp) #3
  store i64 %call5, i64* %__elems_before, align 8
  %5 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %6 = load i64, i64* %__len, align 8
  %call6 = call %"struct.objectir::Field"** @_ZNSt12_Vector_baseIPN8objectir5FieldESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base"* %5, i64 %6)
  store %"struct.objectir::Field"** %call6, %"struct.objectir::Field"*** %__new_start, align 8
  %7 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__new_start, align 8
  store %"struct.objectir::Field"** %7, %"struct.objectir::Field"*** %__new_finish, align 8
  %8 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %_M_impl7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %8, i32 0, i32 0
  %9 = bitcast %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl"* %_M_impl7 to %"class.std::ios_base::Init"*
  %10 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__new_start, align 8
  %11 = load i64, i64* %__elems_before, align 8
  %add.ptr = getelementptr inbounds %"struct.objectir::Field"*, %"struct.objectir::Field"** %10, i64 %11
  %12 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__args.addr, align 8
  %call8 = call dereferenceable(8) %"struct.objectir::Field"** @_ZSt7forwardIPN8objectir5FieldEEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.objectir::Field"** dereferenceable(8) %12) #3
  invoke void @_ZNSt16allocator_traitsISaIPN8objectir5FieldEEE9constructIS2_JS2_EEEvRS3_PT_DpOT0_(%"class.std::ios_base::Init"* dereferenceable(1) %9, %"struct.objectir::Field"** %add.ptr, %"struct.objectir::Field"** dereferenceable(8) %call8)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  store %"struct.objectir::Field"** null, %"struct.objectir::Field"*** %__new_finish, align 8
  %13 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__old_start, align 8
  %call9 = call dereferenceable(8) %"struct.objectir::Field"*** @_ZNK9__gnu_cxx17__normal_iteratorIPPN8objectir5FieldESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %__position) #3
  %14 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %call9, align 8
  %15 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__new_start, align 8
  %16 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %call10 = call dereferenceable(1) %"class.std::ios_base::Init"* @_ZNSt12_Vector_baseIPN8objectir5FieldESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %16) #3
  %call12 = invoke %"struct.objectir::Field"** @_ZSt34__uninitialized_move_if_noexcept_aIPPN8objectir5FieldES3_SaIS2_EET0_T_S6_S5_RT1_(%"struct.objectir::Field"** %13, %"struct.objectir::Field"** %14, %"struct.objectir::Field"** %15, %"class.std::ios_base::Init"* dereferenceable(1) %call10)
          to label %invoke.cont11 unwind label %lpad

invoke.cont11:                                    ; preds = %invoke.cont
  store %"struct.objectir::Field"** %call12, %"struct.objectir::Field"*** %__new_finish, align 8
  %17 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__new_finish, align 8
  %incdec.ptr = getelementptr inbounds %"struct.objectir::Field"*, %"struct.objectir::Field"** %17, i32 1
  store %"struct.objectir::Field"** %incdec.ptr, %"struct.objectir::Field"*** %__new_finish, align 8
  %call13 = call dereferenceable(8) %"struct.objectir::Field"*** @_ZNK9__gnu_cxx17__normal_iteratorIPPN8objectir5FieldESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %__position) #3
  %18 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %call13, align 8
  %19 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__old_finish, align 8
  %20 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__new_finish, align 8
  %21 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %call14 = call dereferenceable(1) %"class.std::ios_base::Init"* @_ZNSt12_Vector_baseIPN8objectir5FieldESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %21) #3
  %call16 = invoke %"struct.objectir::Field"** @_ZSt34__uninitialized_move_if_noexcept_aIPPN8objectir5FieldES3_SaIS2_EET0_T_S6_S5_RT1_(%"struct.objectir::Field"** %18, %"struct.objectir::Field"** %19, %"struct.objectir::Field"** %20, %"class.std::ios_base::Init"* dereferenceable(1) %call14)
          to label %invoke.cont15 unwind label %lpad

invoke.cont15:                                    ; preds = %invoke.cont11
  store %"struct.objectir::Field"** %call16, %"struct.objectir::Field"*** %__new_finish, align 8
  br label %try.cont

lpad:                                             ; preds = %invoke.cont11, %invoke.cont, %entry
  %22 = landingpad { i8*, i32 }
          catch i8* null
  %23 = extractvalue { i8*, i32 } %22, 0
  store i8* %23, i8** %exn.slot, align 8
  %24 = extractvalue { i8*, i32 } %22, 1
  store i32 %24, i32* %ehselector.slot, align 4
  br label %catch

catch:                                            ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %25 = call i8* @__cxa_begin_catch(i8* %exn) #3
  %26 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__new_finish, align 8
  %tobool = icmp ne %"struct.objectir::Field"** %26, null
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %catch
  %27 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %_M_impl17 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %27, i32 0, i32 0
  %28 = bitcast %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl"* %_M_impl17 to %"class.std::ios_base::Init"*
  %29 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__new_start, align 8
  %30 = load i64, i64* %__elems_before, align 8
  %add.ptr18 = getelementptr inbounds %"struct.objectir::Field"*, %"struct.objectir::Field"** %29, i64 %30
  invoke void @_ZNSt16allocator_traitsISaIPN8objectir5FieldEEE7destroyIS2_EEvRS3_PT_(%"class.std::ios_base::Init"* dereferenceable(1) %28, %"struct.objectir::Field"** %add.ptr18)
          to label %invoke.cont20 unwind label %lpad19

invoke.cont20:                                    ; preds = %if.then
  br label %if.end

lpad19:                                           ; preds = %invoke.cont23, %if.end, %if.else, %if.then
  %31 = landingpad { i8*, i32 }
          cleanup
  %32 = extractvalue { i8*, i32 } %31, 0
  store i8* %32, i8** %exn.slot, align 8
  %33 = extractvalue { i8*, i32 } %31, 1
  store i32 %33, i32* %ehselector.slot, align 4
  invoke void @__cxa_end_catch()
          to label %invoke.cont24 unwind label %terminate.lpad

if.else:                                          ; preds = %catch
  %34 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__new_start, align 8
  %35 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__new_finish, align 8
  %36 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %call21 = call dereferenceable(1) %"class.std::ios_base::Init"* @_ZNSt12_Vector_baseIPN8objectir5FieldESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %36) #3
  invoke void @_ZSt8_DestroyIPPN8objectir5FieldES2_EvT_S4_RSaIT0_E(%"struct.objectir::Field"** %34, %"struct.objectir::Field"** %35, %"class.std::ios_base::Init"* dereferenceable(1) %call21)
          to label %invoke.cont22 unwind label %lpad19

invoke.cont22:                                    ; preds = %if.else
  br label %if.end

if.end:                                           ; preds = %invoke.cont22, %invoke.cont20
  %37 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %38 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__new_start, align 8
  %39 = load i64, i64* %__len, align 8
  invoke void @_ZNSt12_Vector_baseIPN8objectir5FieldESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base"* %37, %"struct.objectir::Field"** %38, i64 %39)
          to label %invoke.cont23 unwind label %lpad19

invoke.cont23:                                    ; preds = %if.end
  invoke void @__cxa_rethrow() #17
          to label %unreachable unwind label %lpad19

invoke.cont24:                                    ; preds = %lpad19
  br label %eh.resume

try.cont:                                         ; preds = %invoke.cont15
  %40 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__old_start, align 8
  %41 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__old_finish, align 8
  %42 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %call25 = call dereferenceable(1) %"class.std::ios_base::Init"* @_ZNSt12_Vector_baseIPN8objectir5FieldESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %42) #3
  call void @_ZSt8_DestroyIPPN8objectir5FieldES2_EvT_S4_RSaIT0_E(%"struct.objectir::Field"** %40, %"struct.objectir::Field"** %41, %"class.std::ios_base::Init"* dereferenceable(1) %call25)
  %43 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %44 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__old_start, align 8
  %45 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %_M_impl26 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %45, i32 0, i32 0
  %_M_end_of_storage = getelementptr inbounds %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl", %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl"* %_M_impl26, i32 0, i32 2
  %46 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %_M_end_of_storage, align 8
  %47 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__old_start, align 8
  %sub.ptr.lhs.cast = ptrtoint %"struct.objectir::Field"** %46 to i64
  %sub.ptr.rhs.cast = ptrtoint %"struct.objectir::Field"** %47 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 8
  call void @_ZNSt12_Vector_baseIPN8objectir5FieldESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base"* %43, %"struct.objectir::Field"** %44, i64 %sub.ptr.div)
  %48 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__new_start, align 8
  %49 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %_M_impl27 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %49, i32 0, i32 0
  %_M_start28 = getelementptr inbounds %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl", %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl"* %_M_impl27, i32 0, i32 0
  store %"struct.objectir::Field"** %48, %"struct.objectir::Field"*** %_M_start28, align 8
  %50 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__new_finish, align 8
  %51 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %_M_impl29 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %51, i32 0, i32 0
  %_M_finish30 = getelementptr inbounds %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl", %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl"* %_M_impl29, i32 0, i32 1
  store %"struct.objectir::Field"** %50, %"struct.objectir::Field"*** %_M_finish30, align 8
  %52 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__new_start, align 8
  %53 = load i64, i64* %__len, align 8
  %add.ptr31 = getelementptr inbounds %"struct.objectir::Field"*, %"struct.objectir::Field"** %52, i64 %53
  %54 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %_M_impl32 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %54, i32 0, i32 0
  %_M_end_of_storage33 = getelementptr inbounds %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl", %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl"* %_M_impl32, i32 0, i32 2
  store %"struct.objectir::Field"** %add.ptr31, %"struct.objectir::Field"*** %_M_end_of_storage33, align 8
  ret void

eh.resume:                                        ; preds = %invoke.cont24
  %exn34 = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn34, 0
  %lpad.val35 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val35

terminate.lpad:                                   ; preds = %lpad19
  %55 = landingpad { i8*, i32 }
          catch i8* null
  %56 = extractvalue { i8*, i32 } %55, 0
  call void @__clang_call_terminate(i8* %56) #14
  br label %UnifiedUnreachableBlock

unreachable:                                      ; preds = %invoke.cont23
  br label %UnifiedUnreachableBlock

UnifiedUnreachableBlock:                          ; preds = %unreachable, %terminate.lpad
  unreachable
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local void @_ZN9__gnu_cxx13new_allocatorIPN8objectir5FieldEE9constructIS3_JS3_EEEvPT_DpOT0_(%"class.std::ios_base::Init"* %this, %"struct.objectir::Field"** %__p, %"struct.objectir::Field"** dereferenceable(8) %__args) #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::ios_base::Init"*, align 8
  %__p.addr = alloca %"struct.objectir::Field"**, align 8
  %__args.addr = alloca %"struct.objectir::Field"**, align 8
  store %"class.std::ios_base::Init"* %this, %"class.std::ios_base::Init"** %this.addr, align 8
  store %"struct.objectir::Field"** %__p, %"struct.objectir::Field"*** %__p.addr, align 8
  store %"struct.objectir::Field"** %__args, %"struct.objectir::Field"*** %__args.addr, align 8
  %this1 = load %"class.std::ios_base::Init"*, %"class.std::ios_base::Init"** %this.addr, align 8
  %0 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__p.addr, align 8
  %1 = bitcast %"struct.objectir::Field"** %0 to i8*
  %2 = bitcast i8* %1 to %"struct.objectir::Field"**
  %3 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %__args.addr, align 8
  %call = call dereferenceable(8) %"struct.objectir::Field"** @_ZSt7forwardIPN8objectir5FieldEEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.objectir::Field"** dereferenceable(8) %3) #3
  %4 = load %"struct.objectir::Field"*, %"struct.objectir::Field"** %call, align 8
  store %"struct.objectir::Field"* %4, %"struct.objectir::Field"** %2, align 8
  ret void
}

; Function Attrs: noinline optnone uwtable
define dso_local %"struct.objectir::Object"* @buildUnion(%"struct.objectir::Type"* %type) #5 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %type.addr = alloca %"struct.objectir::Type"*, align 8
  %unionObj = alloca %"struct.objectir::Union"*, align 8
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  store %"struct.objectir::Type"* %type, %"struct.objectir::Type"** %type.addr, align 8
  %call = call i8* @_Znwm(i64 56) #16
  %0 = bitcast i8* %call to %"struct.objectir::Union"*
  %1 = load %"struct.objectir::Type"*, %"struct.objectir::Type"** %type.addr, align 8
  invoke void @_ZN8objectir5UnionC1EPNS_4TypeE(%"struct.objectir::Union"* %0, %"struct.objectir::Type"* %1)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  store %"struct.objectir::Union"* %0, %"struct.objectir::Union"** %unionObj, align 8
  %2 = load %"struct.objectir::Union"*, %"struct.objectir::Union"** %unionObj, align 8
  %3 = bitcast %"struct.objectir::Union"* %2 to %"struct.objectir::Object"*
  ret %"struct.objectir::Object"* %3

lpad:                                             ; preds = %entry
  %4 = landingpad { i8*, i32 }
          cleanup
  %5 = extractvalue { i8*, i32 } %4, 0
  store i8* %5, i8** %exn.slot, align 8
  %6 = extractvalue { i8*, i32 } %4, 1
  store i32 %6, i32* %ehselector.slot, align 4
  call void @_ZdlPv(i8* %call) #15
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val1 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val1
}

; Function Attrs: noinline optnone uwtable
define dso_local void @_ZN8objectir5UnionC2EPNS_4TypeE(%"struct.objectir::Union"* %this, %"struct.objectir::Type"* %type) unnamed_addr #5 align 2 {
entry:
  %this.addr = alloca %"struct.objectir::Union"*, align 8
  %type.addr = alloca %"struct.objectir::Type"*, align 8
  store %"struct.objectir::Union"* %this, %"struct.objectir::Union"** %this.addr, align 8
  store %"struct.objectir::Type"* %type, %"struct.objectir::Type"** %type.addr, align 8
  %this1 = load %"struct.objectir::Union"*, %"struct.objectir::Union"** %this.addr, align 8
  %0 = bitcast %"struct.objectir::Union"* %this1 to %"struct.objectir::Object"*
  %1 = load %"struct.objectir::Type"*, %"struct.objectir::Type"** %type.addr, align 8
  call void @_ZN8objectir6ObjectC2EPNS_4TypeE(%"struct.objectir::Object"* %0, %"struct.objectir::Type"* %1)
  %members = getelementptr inbounds %"struct.objectir::Union", %"struct.objectir::Union"* %this1, i32 0, i32 1
  call void @_ZNSt6vectorIPN8objectir5FieldESaIS2_EEC2Ev(%"class.std::vector"* %members) #3
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_ZN8objectir12IntegerFieldC2EPNS_4TypeEm(%"struct.objectir::IntegerField"* %this, %"struct.objectir::Type"* %type, i64 %init) unnamed_addr #6 align 2 {
entry:
  %this.addr = alloca %"struct.objectir::IntegerField"*, align 8
  %type.addr = alloca %"struct.objectir::Type"*, align 8
  %init.addr = alloca i64, align 8
  store %"struct.objectir::IntegerField"* %this, %"struct.objectir::IntegerField"** %this.addr, align 8
  store %"struct.objectir::Type"* %type, %"struct.objectir::Type"** %type.addr, align 8
  store i64 %init, i64* %init.addr, align 8
  %this1 = load %"struct.objectir::IntegerField"*, %"struct.objectir::IntegerField"** %this.addr, align 8
  %0 = bitcast %"struct.objectir::IntegerField"* %this1 to %"struct.objectir::Field"*
  %1 = load %"struct.objectir::Type"*, %"struct.objectir::Type"** %type.addr, align 8
  call void @_ZN8objectir5FieldC2EPNS_4TypeE(%"struct.objectir::Field"* %0, %"struct.objectir::Type"* %1)
  %2 = bitcast %"struct.objectir::IntegerField"* %this1 to i32 (...)***
  %3 = getelementptr { [3 x i8*] }, { [3 x i8*] }* @_ZTVN8objectir12IntegerFieldE, i32 0, i32 0, i32 2
  %4 = bitcast i8** %3 to i32 (...)**
  store i32 (...)** %4, i32 (...)*** %2, align 8
  %value = getelementptr inbounds %"struct.objectir::IntegerField", %"struct.objectir::IntegerField"* %this1, i32 0, i32 1
  %5 = load i64, i64* %init.addr, align 8
  store i64 %5, i64* %value, align 8
  ret void
}

; Function Attrs: noinline optnone uwtable
define dso_local void @_ZN8objectir12IntegerFieldC2Emmb(%"struct.objectir::IntegerField"* %this, i64 %init, i64 %bitwidth, i1 zeroext %isSigned) unnamed_addr #5 align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
entry:
  %this.addr = alloca %"struct.objectir::IntegerField"*, align 8
  %init.addr = alloca i64, align 8
  %bitwidth.addr = alloca i64, align 8
  %isSigned.addr = alloca i8, align 1
  %exn.slot = alloca i8*
  %ehselector.slot = alloca i32
  store %"struct.objectir::IntegerField"* %this, %"struct.objectir::IntegerField"** %this.addr, align 8
  store i64 %init, i64* %init.addr, align 8
  store i64 %bitwidth, i64* %bitwidth.addr, align 8
  %frombool = zext i1 %isSigned to i8
  store i8 %frombool, i8* %isSigned.addr, align 1
  %this1 = load %"struct.objectir::IntegerField"*, %"struct.objectir::IntegerField"** %this.addr, align 8
  %0 = bitcast %"struct.objectir::IntegerField"* %this1 to %"struct.objectir::Field"*
  %call = call i8* @_Znwm(i64 32) #16
  %1 = bitcast i8* %call to %"struct.objectir::IntegerType"*
  %2 = load i64, i64* %bitwidth.addr, align 8
  %3 = load i8, i8* %isSigned.addr, align 1
  %tobool = trunc i8 %3 to i1
  invoke void @_ZN8objectir11IntegerTypeC1Emb(%"struct.objectir::IntegerType"* %1, i64 %2, i1 zeroext %tobool)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  %4 = bitcast %"struct.objectir::IntegerType"* %1 to %"struct.objectir::Type"*
  call void @_ZN8objectir5FieldC2EPNS_4TypeE(%"struct.objectir::Field"* %0, %"struct.objectir::Type"* %4)
  %5 = bitcast %"struct.objectir::IntegerField"* %this1 to i32 (...)***
  %6 = getelementptr { [3 x i8*] }, { [3 x i8*] }* @_ZTVN8objectir12IntegerFieldE, i32 0, i32 0, i32 2
  %7 = bitcast i8** %6 to i32 (...)**
  store i32 (...)** %7, i32 (...)*** %5, align 8
  %value = getelementptr inbounds %"struct.objectir::IntegerField", %"struct.objectir::IntegerField"* %this1, i32 0, i32 1
  %8 = load i64, i64* %init.addr, align 8
  store i64 %8, i64* %value, align 8
  ret void

lpad:                                             ; preds = %entry
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  store i8* %10, i8** %exn.slot, align 8
  %11 = extractvalue { i8*, i32 } %9, 1
  store i32 %11, i32* %ehselector.slot, align 4
  call void @_ZdlPv(i8* %call) #15
  br label %eh.resume

eh.resume:                                        ; preds = %lpad
  %exn = load i8*, i8** %exn.slot, align 8
  %sel = load i32, i32* %ehselector.slot, align 4
  %lpad.val = insertvalue { i8*, i32 } undef, i8* %exn, 0
  %lpad.val2 = insertvalue { i8*, i32 } %lpad.val, i32 %sel, 1
  resume { i8*, i32 } %lpad.val2
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_ZN8objectir10FloatFieldC2EPNS_4TypeEf(%"struct.objectir::FloatField"* %this, %"struct.objectir::Type"* %type, float %init) unnamed_addr #6 align 2 {
entry:
  %this.addr = alloca %"struct.objectir::FloatField"*, align 8
  %type.addr = alloca %"struct.objectir::Type"*, align 8
  %init.addr = alloca float, align 4
  store %"struct.objectir::FloatField"* %this, %"struct.objectir::FloatField"** %this.addr, align 8
  store %"struct.objectir::Type"* %type, %"struct.objectir::Type"** %type.addr, align 8
  store float %init, float* %init.addr, align 4
  %this1 = load %"struct.objectir::FloatField"*, %"struct.objectir::FloatField"** %this.addr, align 8
  %0 = bitcast %"struct.objectir::FloatField"* %this1 to %"struct.objectir::Field"*
  %1 = load %"struct.objectir::Type"*, %"struct.objectir::Type"** %type.addr, align 8
  call void @_ZN8objectir5FieldC2EPNS_4TypeE(%"struct.objectir::Field"* %0, %"struct.objectir::Type"* %1)
  %2 = bitcast %"struct.objectir::FloatField"* %this1 to i32 (...)***
  %3 = getelementptr { [3 x i8*] }, { [3 x i8*] }* @_ZTVN8objectir10FloatFieldE, i32 0, i32 0, i32 2
  %4 = bitcast i8** %3 to i32 (...)**
  store i32 (...)** %4, i32 (...)*** %2, align 8
  %value = getelementptr inbounds %"struct.objectir::FloatField", %"struct.objectir::FloatField"* %this1, i32 0, i32 1
  %5 = load float, float* %init.addr, align 4
  store float %5, float* %value, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local void @_ZN8objectir11DoubleFieldC2EPNS_4TypeEd(%"struct.objectir::DoubleField"* %this, %"struct.objectir::Type"* %type, double %init) unnamed_addr #6 align 2 {
entry:
  %this.addr = alloca %"struct.objectir::DoubleField"*, align 8
  %type.addr = alloca %"struct.objectir::Type"*, align 8
  %init.addr = alloca double, align 8
  store %"struct.objectir::DoubleField"* %this, %"struct.objectir::DoubleField"** %this.addr, align 8
  store %"struct.objectir::Type"* %type, %"struct.objectir::Type"** %type.addr, align 8
  store double %init, double* %init.addr, align 8
  %this1 = load %"struct.objectir::DoubleField"*, %"struct.objectir::DoubleField"** %this.addr, align 8
  %0 = bitcast %"struct.objectir::DoubleField"* %this1 to %"struct.objectir::Field"*
  %1 = load %"struct.objectir::Type"*, %"struct.objectir::Type"** %type.addr, align 8
  call void @_ZN8objectir5FieldC2EPNS_4TypeE(%"struct.objectir::Field"* %0, %"struct.objectir::Type"* %1)
  %2 = bitcast %"struct.objectir::DoubleField"* %this1 to i32 (...)***
  %3 = getelementptr { [3 x i8*] }, { [3 x i8*] }* @_ZTVN8objectir11DoubleFieldE, i32 0, i32 0, i32 2
  %4 = bitcast i8** %3 to i32 (...)**
  store i32 (...)** %4, i32 (...)*** %2, align 8
  %value = getelementptr inbounds %"struct.objectir::DoubleField", %"struct.objectir::DoubleField"* %this1, i32 0, i32 1
  %5 = load double, double* %init.addr, align 8
  store double %5, double* %value, align 8
  ret void
}

; Function Attrs: noinline optnone uwtable
define dso_local void @_ZN8objectir11ObjectFieldC2EPNS_6ObjectE(%"struct.objectir::ObjectField"* %this, %"struct.objectir::Object"* %obj) unnamed_addr #5 align 2 {
entry:
  %this.addr = alloca %"struct.objectir::ObjectField"*, align 8
  %obj.addr = alloca %"struct.objectir::Object"*, align 8
  store %"struct.objectir::ObjectField"* %this, %"struct.objectir::ObjectField"** %this.addr, align 8
  store %"struct.objectir::Object"* %obj, %"struct.objectir::Object"** %obj.addr, align 8
  %this1 = load %"struct.objectir::ObjectField"*, %"struct.objectir::ObjectField"** %this.addr, align 8
  %0 = bitcast %"struct.objectir::ObjectField"* %this1 to %"struct.objectir::Field"*
  %1 = load %"struct.objectir::Object"*, %"struct.objectir::Object"** %obj.addr, align 8
  %call = call %"struct.objectir::Type"* @_ZN8objectir6Object7getTypeEv(%"struct.objectir::Object"* %1)
  call void @_ZN8objectir5FieldC2EPNS_4TypeE(%"struct.objectir::Field"* %0, %"struct.objectir::Type"* %call)
  %2 = bitcast %"struct.objectir::ObjectField"* %this1 to i32 (...)***
  %3 = getelementptr { [3 x i8*] }, { [3 x i8*] }* @_ZTVN8objectir11ObjectFieldE, i32 0, i32 0, i32 2
  %4 = bitcast i8** %3 to i32 (...)**
  store i32 (...)** %4, i32 (...)*** %2, align 8
  %value = getelementptr inbounds %"struct.objectir::ObjectField", %"struct.objectir::ObjectField"* %this1, i32 0, i32 1
  %5 = load %"struct.objectir::Object"*, %"struct.objectir::Object"** %obj.addr, align 8
  store %"struct.objectir::Object"* %5, %"struct.objectir::Object"** %value, align 8
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %"struct.objectir::Type"* @_ZN8objectir6Object7getTypeEv(%"struct.objectir::Object"* %this) #6 align 2 {
entry:
  %this.addr = alloca %"struct.objectir::Object"*, align 8
  store %"struct.objectir::Object"* %this, %"struct.objectir::Object"** %this.addr, align 8
  %this1 = load %"struct.objectir::Object"*, %"struct.objectir::Object"** %this.addr, align 8
  %type = getelementptr inbounds %"struct.objectir::Object", %"struct.objectir::Object"* %this1, i32 0, i32 0
  %0 = load %"struct.objectir::Type"*, %"struct.objectir::Type"** %type, align 8
  ret %"struct.objectir::Type"* %0
}

; Function Attrs: noinline nounwind optnone uwtable
define dso_local %"struct.objectir::Type"* @_ZN8objectir5Field7getTypeEv(%"struct.objectir::Field"* %this) #6 align 2 {
entry:
  %this.addr = alloca %"struct.objectir::Field"*, align 8
  store %"struct.objectir::Field"* %this, %"struct.objectir::Field"** %this.addr, align 8
  %this1 = load %"struct.objectir::Field"*, %"struct.objectir::Field"** %this.addr, align 8
  %type = getelementptr inbounds %"struct.objectir::Field", %"struct.objectir::Field"* %this1, i32 0, i32 1
  %0 = load %"struct.objectir::Type"*, %"struct.objectir::Type"** %type, align 8
  ret %"struct.objectir::Type"* %0
}

; Function Attrs: noinline optnone uwtable
define dso_local %"struct.objectir::Field"* @getObjectField(%"struct.objectir::Object"* %object, i64 %fieldNo) #5 {
entry:
  %object.addr = alloca %"struct.objectir::Object"*, align 8
  %fieldNo.addr = alloca i64, align 8
  store %"struct.objectir::Object"* %object, %"struct.objectir::Object"** %object.addr, align 8
  store i64 %fieldNo, i64* %fieldNo.addr, align 8
  %0 = load %"struct.objectir::Object"*, %"struct.objectir::Object"** %object.addr, align 8
  %fields = getelementptr inbounds %"struct.objectir::Object", %"struct.objectir::Object"* %0, i32 0, i32 1
  %1 = load i64, i64* %fieldNo.addr, align 8
  %call = call dereferenceable(8) %"struct.objectir::Field"** @_ZNSt6vectorIPN8objectir5FieldESaIS2_EE2atEm(%"class.std::vector"* %fields, i64 %1)
  %2 = load %"struct.objectir::Field"*, %"struct.objectir::Field"** %call, align 8
  ret %"struct.objectir::Field"* %2
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local dereferenceable(8) %"struct.objectir::Field"** @_ZNSt6vectorIPN8objectir5FieldESaIS2_EE2atEm(%"class.std::vector"* %this, i64 %__n) #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector"*, align 8
  %__n.addr = alloca i64, align 8
  store %"class.std::vector"* %this, %"class.std::vector"** %this.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  %this1 = load %"class.std::vector"*, %"class.std::vector"** %this.addr, align 8
  %0 = load i64, i64* %__n.addr, align 8
  call void @_ZNKSt6vectorIPN8objectir5FieldESaIS2_EE14_M_range_checkEm(%"class.std::vector"* %this1, i64 %0)
  %1 = load i64, i64* %__n.addr, align 8
  %call = call dereferenceable(8) %"struct.objectir::Field"** @_ZNSt6vectorIPN8objectir5FieldESaIS2_EEixEm(%"class.std::vector"* %this1, i64 %1) #3
  ret %"struct.objectir::Field"** %call
}

; Function Attrs: noinline optnone uwtable
define linkonce_odr dso_local void @_ZNKSt6vectorIPN8objectir5FieldESaIS2_EE14_M_range_checkEm(%"class.std::vector"* %this, i64 %__n) #5 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector"*, align 8
  %__n.addr = alloca i64, align 8
  store %"class.std::vector"* %this, %"class.std::vector"** %this.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  %this1 = load %"class.std::vector"*, %"class.std::vector"** %this.addr, align 8
  %0 = load i64, i64* %__n.addr, align 8
  %call = call i64 @_ZNKSt6vectorIPN8objectir5FieldESaIS2_EE4sizeEv(%"class.std::vector"* %this1) #3
  %cmp = icmp uge i64 %0, %call
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i64, i64* %__n.addr, align 8
  %call2 = call i64 @_ZNKSt6vectorIPN8objectir5FieldESaIS2_EE4sizeEv(%"class.std::vector"* %this1) #3
  %2 = getelementptr [74 x i8], [74 x i8]* @.str.10.24, i64 0, i64 0
  call void (i8*, ...) @_ZSt24__throw_out_of_range_fmtPKcz(i8* %2, i64 %1, i64 %call2) #17
  unreachable

if.end:                                           ; preds = %entry
  ret void
}

; Function Attrs: noinline nounwind optnone uwtable
define linkonce_odr dso_local dereferenceable(8) %"struct.objectir::Field"** @_ZNSt6vectorIPN8objectir5FieldESaIS2_EEixEm(%"class.std::vector"* %this, i64 %__n) #6 comdat align 2 {
entry:
  %this.addr = alloca %"class.std::vector"*, align 8
  %__n.addr = alloca i64, align 8
  store %"class.std::vector"* %this, %"class.std::vector"** %this.addr, align 8
  store i64 %__n, i64* %__n.addr, align 8
  %this1 = load %"class.std::vector"*, %"class.std::vector"** %this.addr, align 8
  %0 = bitcast %"class.std::vector"* %this1 to %"struct.std::_Vector_base"*
  %_M_impl = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %0, i32 0, i32 0
  %_M_start = getelementptr inbounds %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl", %"struct.std::_Vector_base<objectir::Field *, std::allocator<objectir::Field *> >::_Vector_impl"* %_M_impl, i32 0, i32 0
  %1 = load %"struct.objectir::Field"**, %"struct.objectir::Field"*** %_M_start, align 8
  %2 = load i64, i64* %__n.addr, align 8
  %add.ptr = getelementptr inbounds %"struct.objectir::Field"*, %"struct.objectir::Field"** %1, i64 %2
  ret %"struct.objectir::Field"** %add.ptr
}

; Function Attrs: noreturn
declare dso_local void @_ZSt24__throw_out_of_range_fmtPKcz(i8*, ...) #11

; Function Attrs: noinline optnone uwtable
define dso_local %"struct.objectir::Field"* @getArrayElement(%"struct.objectir::Array"* %array, i64 %index) #5 {
entry:
  %array.addr = alloca %"struct.objectir::Array"*, align 8
  %index.addr = alloca i64, align 8
  store %"struct.objectir::Array"* %array, %"struct.objectir::Array"** %array.addr, align 8
  store i64 %index, i64* %index.addr, align 8
  %0 = load %"struct.objectir::Array"*, %"struct.objectir::Array"** %array.addr, align 8
  %1 = bitcast %"struct.objectir::Array"* %0 to %"struct.objectir::Object"*
  %fields = getelementptr inbounds %"struct.objectir::Object", %"struct.objectir::Object"* %1, i32 0, i32 1
  %2 = load i64, i64* %index.addr, align 8
  %call = call dereferenceable(8) %"struct.objectir::Field"** @_ZNSt6vectorIPN8objectir5FieldESaIS2_EE2atEm(%"class.std::vector"* %fields, i64 %2)
  %3 = load %"struct.objectir::Field"*, %"struct.objectir::Field"** %call, align 8
  ret %"struct.objectir::Field"* %3
}

; Function Attrs: noinline optnone uwtable
define dso_local %"struct.objectir::Field"* @getUnionMember(%"struct.objectir::Union"* %unionObj, i64 %index) #5 {
entry:
  %unionObj.addr = alloca %"struct.objectir::Union"*, align 8
  %index.addr = alloca i64, align 8
  store %"struct.objectir::Union"* %unionObj, %"struct.objectir::Union"** %unionObj.addr, align 8
  store i64 %index, i64* %index.addr, align 8
  %0 = load %"struct.objectir::Union"*, %"struct.objectir::Union"** %unionObj.addr, align 8
  %members = getelementptr inbounds %"struct.objectir::Union", %"struct.objectir::Union"* %0, i32 0, i32 1
  %1 = load i64, i64* %index.addr, align 8
  %call = call dereferenceable(8) %"struct.objectir::Field"** @_ZNSt6vectorIPN8objectir5FieldESaIS2_EE2atEm(%"class.std::vector"* %members, i64 %1)
  %2 = load %"struct.objectir::Field"*, %"struct.objectir::Field"** %call, align 8
  ret %"struct.objectir::Field"* %2
}

; Function Attrs: noinline optnone uwtable
define dso_local void @writeUInt64(%"struct.objectir::Field"* %field, i64 %value) #5 {
entry:
  %field.addr = alloca %"struct.objectir::Field"*, align 8
  %value.addr = alloca i64, align 8
  %type = alloca i32, align 4
  %intField = alloca %"struct.objectir::IntegerField"*, align 8
  store %"struct.objectir::Field"* %field, %"struct.objectir::Field"** %field.addr, align 8
  store i64 %value, i64* %value.addr, align 8
  %0 = load %"struct.objectir::Field"*, %"struct.objectir::Field"** %field.addr, align 8
  %call = call %"struct.objectir::Type"* @_ZN8objectir5Field7getTypeEv(%"struct.objectir::Field"* %0)
  %call1 = call i32 @_ZN8objectir4Type7getCodeEv(%"struct.objectir::Type"* %call)
  store i32 %call1, i32* %type, align 4
  %1 = load i32, i32* %type, align 4
  %cmp = icmp eq i32 %1, 3
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = load %"struct.objectir::Field"*, %"struct.objectir::Field"** %field.addr, align 8
  %3 = bitcast %"struct.objectir::Field"* %2 to %"struct.objectir::IntegerField"*
  store %"struct.objectir::IntegerField"* %3, %"struct.objectir::IntegerField"** %intField, align 8
  %4 = load i64, i64* %value.addr, align 8
  %5 = load %"struct.objectir::IntegerField"*, %"struct.objectir::IntegerField"** %intField, align 8
  %value2 = getelementptr inbounds %"struct.objectir::IntegerField", %"struct.objectir::IntegerField"* %5, i32 0, i32 1
  store i64 %4, i64* %value2, align 8
  br label %if.end

if.else:                                          ; preds = %entry
  %6 = getelementptr [54 x i8], [54 x i8]* @.str.25, i64 0, i64 0
  %call3 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) @_ZSt4cerr, i8* %6)
  call void @exit(i32 1) #14
  unreachable

if.end:                                           ; preds = %if.then
  ret void
}

; Function Attrs: noreturn nounwind
declare dso_local void @exit(i32) #13

; Function Attrs: noinline optnone uwtable
define dso_local void @writeUInt32(%"struct.objectir::Field"* %field, i32 %value) #5 {
entry:
  %field.addr = alloca %"struct.objectir::Field"*, align 8
  %value.addr = alloca i32, align 4
  %type = alloca i32, align 4
  %intField = alloca %"struct.objectir::IntegerField"*, align 8
  store %"struct.objectir::Field"* %field, %"struct.objectir::Field"** %field.addr, align 8
  store i32 %value, i32* %value.addr, align 4
  %0 = load %"struct.objectir::Field"*, %"struct.objectir::Field"** %field.addr, align 8
  %call = call %"struct.objectir::Type"* @_ZN8objectir5Field7getTypeEv(%"struct.objectir::Field"* %0)
  %call1 = call i32 @_ZN8objectir4Type7getCodeEv(%"struct.objectir::Type"* %call)
  store i32 %call1, i32* %type, align 4
  %1 = load i32, i32* %type, align 4
  %cmp = icmp eq i32 %1, 3
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = load %"struct.objectir::Field"*, %"struct.objectir::Field"** %field.addr, align 8
  %3 = bitcast %"struct.objectir::Field"* %2 to %"struct.objectir::IntegerField"*
  store %"struct.objectir::IntegerField"* %3, %"struct.objectir::IntegerField"** %intField, align 8
  %4 = load i32, i32* %value.addr, align 4
  %conv = zext i32 %4 to i64
  %5 = load %"struct.objectir::IntegerField"*, %"struct.objectir::IntegerField"** %intField, align 8
  %value2 = getelementptr inbounds %"struct.objectir::IntegerField", %"struct.objectir::IntegerField"* %5, i32 0, i32 1
  store i64 %conv, i64* %value2, align 8
  br label %if.end

if.else:                                          ; preds = %entry
  %6 = getelementptr [54 x i8], [54 x i8]* @.str.1.26, i64 0, i64 0
  %call3 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) @_ZSt4cerr, i8* %6)
  call void @exit(i32 1) #14
  unreachable

if.end:                                           ; preds = %if.then
  ret void
}

; Function Attrs: noinline optnone uwtable
define dso_local void @writeUInt16(%"struct.objectir::Field"* %field, i16 zeroext %value) #5 {
entry:
  %field.addr = alloca %"struct.objectir::Field"*, align 8
  %value.addr = alloca i16, align 2
  %type = alloca i32, align 4
  %intField = alloca %"struct.objectir::IntegerField"*, align 8
  store %"struct.objectir::Field"* %field, %"struct.objectir::Field"** %field.addr, align 8
  store i16 %value, i16* %value.addr, align 2
  %0 = load %"struct.objectir::Field"*, %"struct.objectir::Field"** %field.addr, align 8
  %call = call %"struct.objectir::Type"* @_ZN8objectir5Field7getTypeEv(%"struct.objectir::Field"* %0)
  %call1 = call i32 @_ZN8objectir4Type7getCodeEv(%"struct.objectir::Type"* %call)
  store i32 %call1, i32* %type, align 4
  %1 = load i32, i32* %type, align 4
  %cmp = icmp eq i32 %1, 3
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = load %"struct.objectir::Field"*, %"struct.objectir::Field"** %field.addr, align 8
  %3 = bitcast %"struct.objectir::Field"* %2 to %"struct.objectir::IntegerField"*
  store %"struct.objectir::IntegerField"* %3, %"struct.objectir::IntegerField"** %intField, align 8
  %4 = load i16, i16* %value.addr, align 2
  %conv = zext i16 %4 to i64
  %5 = load %"struct.objectir::IntegerField"*, %"struct.objectir::IntegerField"** %intField, align 8
  %value2 = getelementptr inbounds %"struct.objectir::IntegerField", %"struct.objectir::IntegerField"* %5, i32 0, i32 1
  store i64 %conv, i64* %value2, align 8
  br label %if.end

if.else:                                          ; preds = %entry
  %6 = getelementptr [54 x i8], [54 x i8]* @.str.2.27, i64 0, i64 0
  %call3 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) @_ZSt4cerr, i8* %6)
  call void @exit(i32 1) #14
  unreachable

if.end:                                           ; preds = %if.then
  ret void
}

; Function Attrs: noinline optnone uwtable
define dso_local void @writeUInt8(%"struct.objectir::Field"* %field, i8 zeroext %value) #5 {
entry:
  %field.addr = alloca %"struct.objectir::Field"*, align 8
  %value.addr = alloca i8, align 1
  %type = alloca i32, align 4
  %intField = alloca %"struct.objectir::IntegerField"*, align 8
  store %"struct.objectir::Field"* %field, %"struct.objectir::Field"** %field.addr, align 8
  store i8 %value, i8* %value.addr, align 1
  %0 = load %"struct.objectir::Field"*, %"struct.objectir::Field"** %field.addr, align 8
  %call = call %"struct.objectir::Type"* @_ZN8objectir5Field7getTypeEv(%"struct.objectir::Field"* %0)
  %call1 = call i32 @_ZN8objectir4Type7getCodeEv(%"struct.objectir::Type"* %call)
  store i32 %call1, i32* %type, align 4
  %1 = load i32, i32* %type, align 4
  %cmp = icmp eq i32 %1, 3
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = load %"struct.objectir::Field"*, %"struct.objectir::Field"** %field.addr, align 8
  %3 = bitcast %"struct.objectir::Field"* %2 to %"struct.objectir::IntegerField"*
  store %"struct.objectir::IntegerField"* %3, %"struct.objectir::IntegerField"** %intField, align 8
  %4 = load i8, i8* %value.addr, align 1
  %conv = zext i8 %4 to i64
  %5 = load %"struct.objectir::IntegerField"*, %"struct.objectir::IntegerField"** %intField, align 8
  %value2 = getelementptr inbounds %"struct.objectir::IntegerField", %"struct.objectir::IntegerField"* %5, i32 0, i32 1
  store i64 %conv, i64* %value2, align 8
  br label %if.end

if.else:                                          ; preds = %entry
  %6 = getelementptr [53 x i8], [53 x i8]* @.str.3.28, i64 0, i64 0
  %call3 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) @_ZSt4cerr, i8* %6)
  call void @exit(i32 1) #14
  unreachable

if.end:                                           ; preds = %if.then
  ret void
}

; Function Attrs: noinline optnone uwtable
define dso_local void @writeInt64(%"struct.objectir::Field"* %field, i64 %value) #5 {
entry:
  %field.addr = alloca %"struct.objectir::Field"*, align 8
  %value.addr = alloca i64, align 8
  %type = alloca i32, align 4
  %intField = alloca %"struct.objectir::IntegerField"*, align 8
  store %"struct.objectir::Field"* %field, %"struct.objectir::Field"** %field.addr, align 8
  store i64 %value, i64* %value.addr, align 8
  %0 = load %"struct.objectir::Field"*, %"struct.objectir::Field"** %field.addr, align 8
  %call = call %"struct.objectir::Type"* @_ZN8objectir5Field7getTypeEv(%"struct.objectir::Field"* %0)
  %call1 = call i32 @_ZN8objectir4Type7getCodeEv(%"struct.objectir::Type"* %call)
  store i32 %call1, i32* %type, align 4
  %1 = load i32, i32* %type, align 4
  %cmp = icmp eq i32 %1, 3
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = load %"struct.objectir::Field"*, %"struct.objectir::Field"** %field.addr, align 8
  %3 = bitcast %"struct.objectir::Field"* %2 to %"struct.objectir::IntegerField"*
  store %"struct.objectir::IntegerField"* %3, %"struct.objectir::IntegerField"** %intField, align 8
  %4 = load i64, i64* %value.addr, align 8
  %5 = load %"struct.objectir::IntegerField"*, %"struct.objectir::IntegerField"** %intField, align 8
  %value2 = getelementptr inbounds %"struct.objectir::IntegerField", %"struct.objectir::IntegerField"* %5, i32 0, i32 1
  store i64 %4, i64* %value2, align 8
  br label %if.end

if.else:                                          ; preds = %entry
  %6 = getelementptr [53 x i8], [53 x i8]* @.str.4.29, i64 0, i64 0
  %call3 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) @_ZSt4cerr, i8* %6)
  call void @exit(i32 1) #14
  unreachable

if.end:                                           ; preds = %if.then
  ret void
}

; Function Attrs: noinline optnone uwtable
define dso_local void @writeInt32(%"struct.objectir::Field"* %field, i32 %value) #5 {
entry:
  %field.addr = alloca %"struct.objectir::Field"*, align 8
  %value.addr = alloca i32, align 4
  %type = alloca i32, align 4
  %intField = alloca %"struct.objectir::IntegerField"*, align 8
  store %"struct.objectir::Field"* %field, %"struct.objectir::Field"** %field.addr, align 8
  store i32 %value, i32* %value.addr, align 4
  %0 = load %"struct.objectir::Field"*, %"struct.objectir::Field"** %field.addr, align 8
  %call = call %"struct.objectir::Type"* @_ZN8objectir5Field7getTypeEv(%"struct.objectir::Field"* %0)
  %call1 = call i32 @_ZN8objectir4Type7getCodeEv(%"struct.objectir::Type"* %call)
  store i32 %call1, i32* %type, align 4
  %1 = load i32, i32* %type, align 4
  %cmp = icmp eq i32 %1, 3
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = load %"struct.objectir::Field"*, %"struct.objectir::Field"** %field.addr, align 8
  %3 = bitcast %"struct.objectir::Field"* %2 to %"struct.objectir::IntegerField"*
  store %"struct.objectir::IntegerField"* %3, %"struct.objectir::IntegerField"** %intField, align 8
  %4 = load i32, i32* %value.addr, align 4
  %conv = sext i32 %4 to i64
  %5 = load %"struct.objectir::IntegerField"*, %"struct.objectir::IntegerField"** %intField, align 8
  %value2 = getelementptr inbounds %"struct.objectir::IntegerField", %"struct.objectir::IntegerField"* %5, i32 0, i32 1
  store i64 %conv, i64* %value2, align 8
  br label %if.end

if.else:                                          ; preds = %entry
  %6 = getelementptr [53 x i8], [53 x i8]* @.str.5.30, i64 0, i64 0
  %call3 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) @_ZSt4cerr, i8* %6)
  call void @exit(i32 1) #14
  unreachable

if.end:                                           ; preds = %if.then
  ret void
}

; Function Attrs: noinline optnone uwtable
define dso_local void @writeInt16(%"struct.objectir::Field"* %field, i16 signext %value) #5 {
entry:
  %field.addr = alloca %"struct.objectir::Field"*, align 8
  %value.addr = alloca i16, align 2
  %type = alloca i32, align 4
  %intField = alloca %"struct.objectir::IntegerField"*, align 8
  store %"struct.objectir::Field"* %field, %"struct.objectir::Field"** %field.addr, align 8
  store i16 %value, i16* %value.addr, align 2
  %0 = load %"struct.objectir::Field"*, %"struct.objectir::Field"** %field.addr, align 8
  %call = call %"struct.objectir::Type"* @_ZN8objectir5Field7getTypeEv(%"struct.objectir::Field"* %0)
  %call1 = call i32 @_ZN8objectir4Type7getCodeEv(%"struct.objectir::Type"* %call)
  store i32 %call1, i32* %type, align 4
  %1 = load i32, i32* %type, align 4
  %cmp = icmp eq i32 %1, 3
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = load %"struct.objectir::Field"*, %"struct.objectir::Field"** %field.addr, align 8
  %3 = bitcast %"struct.objectir::Field"* %2 to %"struct.objectir::IntegerField"*
  store %"struct.objectir::IntegerField"* %3, %"struct.objectir::IntegerField"** %intField, align 8
  %4 = load i16, i16* %value.addr, align 2
  %conv = sext i16 %4 to i64
  %5 = load %"struct.objectir::IntegerField"*, %"struct.objectir::IntegerField"** %intField, align 8
  %value2 = getelementptr inbounds %"struct.objectir::IntegerField", %"struct.objectir::IntegerField"* %5, i32 0, i32 1
  store i64 %conv, i64* %value2, align 8
  br label %if.end

if.else:                                          ; preds = %entry
  %6 = getelementptr [53 x i8], [53 x i8]* @.str.6.31, i64 0, i64 0
  %call3 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) @_ZSt4cerr, i8* %6)
  call void @exit(i32 1) #14
  unreachable

if.end:                                           ; preds = %if.then
  ret void
}

; Function Attrs: noinline optnone uwtable
define dso_local void @writeInt8(%"struct.objectir::Field"* %field, i8 signext %value) #5 {
entry:
  %field.addr = alloca %"struct.objectir::Field"*, align 8
  %value.addr = alloca i8, align 1
  %type = alloca i32, align 4
  %intField = alloca %"struct.objectir::IntegerField"*, align 8
  store %"struct.objectir::Field"* %field, %"struct.objectir::Field"** %field.addr, align 8
  store i8 %value, i8* %value.addr, align 1
  %0 = load %"struct.objectir::Field"*, %"struct.objectir::Field"** %field.addr, align 8
  %call = call %"struct.objectir::Type"* @_ZN8objectir5Field7getTypeEv(%"struct.objectir::Field"* %0)
  %call1 = call i32 @_ZN8objectir4Type7getCodeEv(%"struct.objectir::Type"* %call)
  store i32 %call1, i32* %type, align 4
  %1 = load i32, i32* %type, align 4
  %cmp = icmp eq i32 %1, 3
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = load %"struct.objectir::Field"*, %"struct.objectir::Field"** %field.addr, align 8
  %3 = bitcast %"struct.objectir::Field"* %2 to %"struct.objectir::IntegerField"*
  store %"struct.objectir::IntegerField"* %3, %"struct.objectir::IntegerField"** %intField, align 8
  %4 = load i8, i8* %value.addr, align 1
  %conv = sext i8 %4 to i64
  %5 = load %"struct.objectir::IntegerField"*, %"struct.objectir::IntegerField"** %intField, align 8
  %value2 = getelementptr inbounds %"struct.objectir::IntegerField", %"struct.objectir::IntegerField"* %5, i32 0, i32 1
  store i64 %conv, i64* %value2, align 8
  br label %if.end

if.else:                                          ; preds = %entry
  %6 = getelementptr [52 x i8], [52 x i8]* @.str.7.32, i64 0, i64 0
  %call3 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) @_ZSt4cerr, i8* %6)
  call void @exit(i32 1) #14
  unreachable

if.end:                                           ; preds = %if.then
  ret void
}

; Function Attrs: noinline optnone uwtable
define dso_local void @writeBoolean(%"struct.objectir::Field"* %field, i1 zeroext %value) #5 {
entry:
  %field.addr = alloca %"struct.objectir::Field"*, align 8
  %value.addr = alloca i8, align 1
  %type = alloca i32, align 4
  %intField = alloca %"struct.objectir::IntegerField"*, align 8
  store %"struct.objectir::Field"* %field, %"struct.objectir::Field"** %field.addr, align 8
  %frombool = zext i1 %value to i8
  store i8 %frombool, i8* %value.addr, align 1
  %0 = load %"struct.objectir::Field"*, %"struct.objectir::Field"** %field.addr, align 8
  %call = call %"struct.objectir::Type"* @_ZN8objectir5Field7getTypeEv(%"struct.objectir::Field"* %0)
  %call1 = call i32 @_ZN8objectir4Type7getCodeEv(%"struct.objectir::Type"* %call)
  store i32 %call1, i32* %type, align 4
  %1 = load i32, i32* %type, align 4
  %cmp = icmp eq i32 %1, 3
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = load %"struct.objectir::Field"*, %"struct.objectir::Field"** %field.addr, align 8
  %3 = bitcast %"struct.objectir::Field"* %2 to %"struct.objectir::IntegerField"*
  store %"struct.objectir::IntegerField"* %3, %"struct.objectir::IntegerField"** %intField, align 8
  %4 = load i8, i8* %value.addr, align 1
  %tobool = trunc i8 %4 to i1
  %conv = zext i1 %tobool to i64
  %5 = load %"struct.objectir::IntegerField"*, %"struct.objectir::IntegerField"** %intField, align 8
  %value2 = getelementptr inbounds %"struct.objectir::IntegerField", %"struct.objectir::IntegerField"* %5, i32 0, i32 1
  store i64 %conv, i64* %value2, align 8
  br label %if.end

if.else:                                          ; preds = %entry
  %6 = getelementptr [52 x i8], [52 x i8]* @.str.7.32, i64 0, i64 0
  %call3 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) @_ZSt4cerr, i8* %6)
  call void @exit(i32 1) #14
  unreachable

if.end:                                           ; preds = %if.then
  ret void
}

; Function Attrs: noinline optnone uwtable
define dso_local void @writeFloat(%"struct.objectir::Field"* %field, float %value) #5 {
entry:
  %field.addr = alloca %"struct.objectir::Field"*, align 8
  %value.addr = alloca float, align 4
  %type = alloca i32, align 4
  %floatField = alloca %"struct.objectir::FloatField"*, align 8
  store %"struct.objectir::Field"* %field, %"struct.objectir::Field"** %field.addr, align 8
  store float %value, float* %value.addr, align 4
  %0 = load %"struct.objectir::Field"*, %"struct.objectir::Field"** %field.addr, align 8
  %call = call %"struct.objectir::Type"* @_ZN8objectir5Field7getTypeEv(%"struct.objectir::Field"* %0)
  %call1 = call i32 @_ZN8objectir4Type7getCodeEv(%"struct.objectir::Type"* %call)
  store i32 %call1, i32* %type, align 4
  %1 = load i32, i32* %type, align 4
  %cmp = icmp eq i32 %1, 3
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = load %"struct.objectir::Field"*, %"struct.objectir::Field"** %field.addr, align 8
  %3 = bitcast %"struct.objectir::Field"* %2 to %"struct.objectir::FloatField"*
  store %"struct.objectir::FloatField"* %3, %"struct.objectir::FloatField"** %floatField, align 8
  %4 = load float, float* %value.addr, align 4
  %5 = load %"struct.objectir::FloatField"*, %"struct.objectir::FloatField"** %floatField, align 8
  %value2 = getelementptr inbounds %"struct.objectir::FloatField", %"struct.objectir::FloatField"* %5, i32 0, i32 1
  store float %4, float* %value2, align 8
  br label %if.end

if.else:                                          ; preds = %entry
  %6 = getelementptr [51 x i8], [51 x i8]* @.str.8.33, i64 0, i64 0
  %call3 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) @_ZSt4cerr, i8* %6)
  call void @exit(i32 1) #14
  unreachable

if.end:                                           ; preds = %if.then
  ret void
}

; Function Attrs: noinline optnone uwtable
define dso_local void @writeDouble(%"struct.objectir::Field"* %field, double %value) #5 {
entry:
  %field.addr = alloca %"struct.objectir::Field"*, align 8
  %value.addr = alloca double, align 8
  %type = alloca i32, align 4
  %doubleField = alloca %"struct.objectir::DoubleField"*, align 8
  store %"struct.objectir::Field"* %field, %"struct.objectir::Field"** %field.addr, align 8
  store double %value, double* %value.addr, align 8
  %0 = load %"struct.objectir::Field"*, %"struct.objectir::Field"** %field.addr, align 8
  %call = call %"struct.objectir::Type"* @_ZN8objectir5Field7getTypeEv(%"struct.objectir::Field"* %0)
  %call1 = call i32 @_ZN8objectir4Type7getCodeEv(%"struct.objectir::Type"* %call)
  store i32 %call1, i32* %type, align 4
  %1 = load i32, i32* %type, align 4
  %cmp = icmp eq i32 %1, 3
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = load %"struct.objectir::Field"*, %"struct.objectir::Field"** %field.addr, align 8
  %3 = bitcast %"struct.objectir::Field"* %2 to %"struct.objectir::DoubleField"*
  store %"struct.objectir::DoubleField"* %3, %"struct.objectir::DoubleField"** %doubleField, align 8
  %4 = load double, double* %value.addr, align 8
  %5 = load %"struct.objectir::DoubleField"*, %"struct.objectir::DoubleField"** %doubleField, align 8
  %value2 = getelementptr inbounds %"struct.objectir::DoubleField", %"struct.objectir::DoubleField"* %5, i32 0, i32 1
  store double %4, double* %value2, align 8
  br label %if.end

if.else:                                          ; preds = %entry
  %6 = getelementptr [53 x i8], [53 x i8]* @.str.9.34, i64 0, i64 0
  %call3 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) @_ZSt4cerr, i8* %6)
  call void @exit(i32 1) #14
  unreachable

if.end:                                           ; preds = %if.then
  ret void
}

; Function Attrs: noinline optnone uwtable
define dso_local void @writeObject(%"struct.objectir::Field"* %field, %"struct.objectir::Object"* %object) #5 {
entry:
  %field.addr = alloca %"struct.objectir::Field"*, align 8
  %object.addr = alloca %"struct.objectir::Object"*, align 8
  %type = alloca i32, align 4
  %objField = alloca %"struct.objectir::ObjectField"*, align 8
  store %"struct.objectir::Field"* %field, %"struct.objectir::Field"** %field.addr, align 8
  store %"struct.objectir::Object"* %object, %"struct.objectir::Object"** %object.addr, align 8
  %0 = load %"struct.objectir::Field"*, %"struct.objectir::Field"** %field.addr, align 8
  %call = call %"struct.objectir::Type"* @_ZN8objectir5Field7getTypeEv(%"struct.objectir::Field"* %0)
  %call1 = call i32 @_ZN8objectir4Type7getCodeEv(%"struct.objectir::Type"* %call)
  store i32 %call1, i32* %type, align 4
  %1 = load i32, i32* %type, align 4
  %cmp = icmp eq i32 %1, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = load %"struct.objectir::Field"*, %"struct.objectir::Field"** %field.addr, align 8
  %3 = bitcast %"struct.objectir::Field"* %2 to %"struct.objectir::ObjectField"*
  store %"struct.objectir::ObjectField"* %3, %"struct.objectir::ObjectField"** %objField, align 8
  %4 = load %"struct.objectir::Object"*, %"struct.objectir::Object"** %object.addr, align 8
  %5 = load %"struct.objectir::ObjectField"*, %"struct.objectir::ObjectField"** %objField, align 8
  %value = getelementptr inbounds %"struct.objectir::ObjectField", %"struct.objectir::ObjectField"* %5, i32 0, i32 1
  store %"struct.objectir::Object"* %4, %"struct.objectir::Object"** %value, align 8
  br label %if.end

if.else:                                          ; preds = %entry
  %6 = getelementptr [54 x i8], [54 x i8]* @.str.25, i64 0, i64 0
  %call2 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) @_ZSt4cerr, i8* %6)
  call void @exit(i32 1) #14
  unreachable

if.end:                                           ; preds = %if.then
  ret void
}

; Function Attrs: noinline optnone uwtable
define dso_local i64 @readUInt64(%"struct.objectir::Field"* %field) #5 {
entry:
  %field.addr = alloca %"struct.objectir::Field"*, align 8
  %type = alloca i32, align 4
  %intField = alloca %"struct.objectir::IntegerField"*, align 8
  store %"struct.objectir::Field"* %field, %"struct.objectir::Field"** %field.addr, align 8
  %0 = load %"struct.objectir::Field"*, %"struct.objectir::Field"** %field.addr, align 8
  %call = call %"struct.objectir::Type"* @_ZN8objectir5Field7getTypeEv(%"struct.objectir::Field"* %0)
  %call1 = call i32 @_ZN8objectir4Type7getCodeEv(%"struct.objectir::Type"* %call)
  store i32 %call1, i32* %type, align 4
  %1 = load i32, i32* %type, align 4
  %cmp = icmp eq i32 %1, 3
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = load %"struct.objectir::Field"*, %"struct.objectir::Field"** %field.addr, align 8
  %3 = bitcast %"struct.objectir::Field"* %2 to %"struct.objectir::IntegerField"*
  store %"struct.objectir::IntegerField"* %3, %"struct.objectir::IntegerField"** %intField, align 8
  %4 = load %"struct.objectir::IntegerField"*, %"struct.objectir::IntegerField"** %intField, align 8
  %value = getelementptr inbounds %"struct.objectir::IntegerField", %"struct.objectir::IntegerField"* %4, i32 0, i32 1
  %5 = load i64, i64* %value, align 8
  ret i64 %5

if.else:                                          ; preds = %entry
  %6 = getelementptr [54 x i8], [54 x i8]* @.str.25, i64 0, i64 0
  %call2 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) @_ZSt4cerr, i8* %6)
  call void @exit(i32 1) #14
  unreachable
}

; Function Attrs: noinline optnone uwtable
define dso_local i32 @readUInt32(%"struct.objectir::Field"* %field) #5 {
entry:
  %field.addr = alloca %"struct.objectir::Field"*, align 8
  %type = alloca i32, align 4
  %intField = alloca %"struct.objectir::IntegerField"*, align 8
  store %"struct.objectir::Field"* %field, %"struct.objectir::Field"** %field.addr, align 8
  %0 = load %"struct.objectir::Field"*, %"struct.objectir::Field"** %field.addr, align 8
  %call = call %"struct.objectir::Type"* @_ZN8objectir5Field7getTypeEv(%"struct.objectir::Field"* %0)
  %call1 = call i32 @_ZN8objectir4Type7getCodeEv(%"struct.objectir::Type"* %call)
  store i32 %call1, i32* %type, align 4
  %1 = load i32, i32* %type, align 4
  %cmp = icmp eq i32 %1, 3
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = load %"struct.objectir::Field"*, %"struct.objectir::Field"** %field.addr, align 8
  %3 = bitcast %"struct.objectir::Field"* %2 to %"struct.objectir::IntegerField"*
  store %"struct.objectir::IntegerField"* %3, %"struct.objectir::IntegerField"** %intField, align 8
  %4 = load %"struct.objectir::IntegerField"*, %"struct.objectir::IntegerField"** %intField, align 8
  %value = getelementptr inbounds %"struct.objectir::IntegerField", %"struct.objectir::IntegerField"* %4, i32 0, i32 1
  %5 = load i64, i64* %value, align 8
  %conv = trunc i64 %5 to i32
  ret i32 %conv

if.else:                                          ; preds = %entry
  %6 = getelementptr [54 x i8], [54 x i8]* @.str.1.26, i64 0, i64 0
  %call2 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) @_ZSt4cerr, i8* %6)
  call void @exit(i32 1) #14
  unreachable
}

; Function Attrs: noinline optnone uwtable
define dso_local zeroext i16 @readUInt16(%"struct.objectir::Field"* %field) #5 {
entry:
  %field.addr = alloca %"struct.objectir::Field"*, align 8
  %type = alloca i32, align 4
  %intField = alloca %"struct.objectir::IntegerField"*, align 8
  store %"struct.objectir::Field"* %field, %"struct.objectir::Field"** %field.addr, align 8
  %0 = load %"struct.objectir::Field"*, %"struct.objectir::Field"** %field.addr, align 8
  %call = call %"struct.objectir::Type"* @_ZN8objectir5Field7getTypeEv(%"struct.objectir::Field"* %0)
  %call1 = call i32 @_ZN8objectir4Type7getCodeEv(%"struct.objectir::Type"* %call)
  store i32 %call1, i32* %type, align 4
  %1 = load i32, i32* %type, align 4
  %cmp = icmp eq i32 %1, 3
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = load %"struct.objectir::Field"*, %"struct.objectir::Field"** %field.addr, align 8
  %3 = bitcast %"struct.objectir::Field"* %2 to %"struct.objectir::IntegerField"*
  store %"struct.objectir::IntegerField"* %3, %"struct.objectir::IntegerField"** %intField, align 8
  %4 = load %"struct.objectir::IntegerField"*, %"struct.objectir::IntegerField"** %intField, align 8
  %value = getelementptr inbounds %"struct.objectir::IntegerField", %"struct.objectir::IntegerField"* %4, i32 0, i32 1
  %5 = load i64, i64* %value, align 8
  %conv = trunc i64 %5 to i16
  ret i16 %conv

if.else:                                          ; preds = %entry
  %6 = getelementptr [54 x i8], [54 x i8]* @.str.2.27, i64 0, i64 0
  %call2 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) @_ZSt4cerr, i8* %6)
  call void @exit(i32 1) #14
  unreachable
}

; Function Attrs: noinline optnone uwtable
define dso_local zeroext i8 @readUInt8(%"struct.objectir::Field"* %field) #5 {
entry:
  %field.addr = alloca %"struct.objectir::Field"*, align 8
  %type = alloca i32, align 4
  %intField = alloca %"struct.objectir::IntegerField"*, align 8
  store %"struct.objectir::Field"* %field, %"struct.objectir::Field"** %field.addr, align 8
  %0 = load %"struct.objectir::Field"*, %"struct.objectir::Field"** %field.addr, align 8
  %call = call %"struct.objectir::Type"* @_ZN8objectir5Field7getTypeEv(%"struct.objectir::Field"* %0)
  %call1 = call i32 @_ZN8objectir4Type7getCodeEv(%"struct.objectir::Type"* %call)
  store i32 %call1, i32* %type, align 4
  %1 = load i32, i32* %type, align 4
  %cmp = icmp eq i32 %1, 3
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = load %"struct.objectir::Field"*, %"struct.objectir::Field"** %field.addr, align 8
  %3 = bitcast %"struct.objectir::Field"* %2 to %"struct.objectir::IntegerField"*
  store %"struct.objectir::IntegerField"* %3, %"struct.objectir::IntegerField"** %intField, align 8
  %4 = load %"struct.objectir::IntegerField"*, %"struct.objectir::IntegerField"** %intField, align 8
  %value = getelementptr inbounds %"struct.objectir::IntegerField", %"struct.objectir::IntegerField"* %4, i32 0, i32 1
  %5 = load i64, i64* %value, align 8
  %conv = trunc i64 %5 to i8
  ret i8 %conv

if.else:                                          ; preds = %entry
  %6 = getelementptr [53 x i8], [53 x i8]* @.str.3.28, i64 0, i64 0
  %call2 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) @_ZSt4cerr, i8* %6)
  call void @exit(i32 1) #14
  unreachable
}

; Function Attrs: noinline optnone uwtable
define dso_local i64 @readInt64(%"struct.objectir::Field"* %field) #5 {
entry:
  %field.addr = alloca %"struct.objectir::Field"*, align 8
  %type = alloca i32, align 4
  %intField = alloca %"struct.objectir::IntegerField"*, align 8
  store %"struct.objectir::Field"* %field, %"struct.objectir::Field"** %field.addr, align 8
  %0 = load %"struct.objectir::Field"*, %"struct.objectir::Field"** %field.addr, align 8
  %call = call %"struct.objectir::Type"* @_ZN8objectir5Field7getTypeEv(%"struct.objectir::Field"* %0)
  %call1 = call i32 @_ZN8objectir4Type7getCodeEv(%"struct.objectir::Type"* %call)
  store i32 %call1, i32* %type, align 4
  %1 = load i32, i32* %type, align 4
  %cmp = icmp eq i32 %1, 3
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = load %"struct.objectir::Field"*, %"struct.objectir::Field"** %field.addr, align 8
  %3 = bitcast %"struct.objectir::Field"* %2 to %"struct.objectir::IntegerField"*
  store %"struct.objectir::IntegerField"* %3, %"struct.objectir::IntegerField"** %intField, align 8
  %4 = load %"struct.objectir::IntegerField"*, %"struct.objectir::IntegerField"** %intField, align 8
  %value = getelementptr inbounds %"struct.objectir::IntegerField", %"struct.objectir::IntegerField"* %4, i32 0, i32 1
  %5 = load i64, i64* %value, align 8
  ret i64 %5

if.else:                                          ; preds = %entry
  %6 = getelementptr [53 x i8], [53 x i8]* @.str.4.29, i64 0, i64 0
  %call2 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) @_ZSt4cerr, i8* %6)
  call void @exit(i32 1) #14
  unreachable
}

; Function Attrs: noinline optnone uwtable
define dso_local i32 @readInt32(%"struct.objectir::Field"* %field) #5 {
entry:
  %field.addr = alloca %"struct.objectir::Field"*, align 8
  %type = alloca i32, align 4
  %intField = alloca %"struct.objectir::IntegerField"*, align 8
  store %"struct.objectir::Field"* %field, %"struct.objectir::Field"** %field.addr, align 8
  %0 = load %"struct.objectir::Field"*, %"struct.objectir::Field"** %field.addr, align 8
  %call = call %"struct.objectir::Type"* @_ZN8objectir5Field7getTypeEv(%"struct.objectir::Field"* %0)
  %call1 = call i32 @_ZN8objectir4Type7getCodeEv(%"struct.objectir::Type"* %call)
  store i32 %call1, i32* %type, align 4
  %1 = load i32, i32* %type, align 4
  %cmp = icmp eq i32 %1, 3
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = load %"struct.objectir::Field"*, %"struct.objectir::Field"** %field.addr, align 8
  %3 = bitcast %"struct.objectir::Field"* %2 to %"struct.objectir::IntegerField"*
  store %"struct.objectir::IntegerField"* %3, %"struct.objectir::IntegerField"** %intField, align 8
  %4 = load %"struct.objectir::IntegerField"*, %"struct.objectir::IntegerField"** %intField, align 8
  %value = getelementptr inbounds %"struct.objectir::IntegerField", %"struct.objectir::IntegerField"* %4, i32 0, i32 1
  %5 = load i64, i64* %value, align 8
  %conv = trunc i64 %5 to i32
  ret i32 %conv

if.else:                                          ; preds = %entry
  %6 = getelementptr [53 x i8], [53 x i8]* @.str.5.30, i64 0, i64 0
  %call2 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) @_ZSt4cerr, i8* %6)
  call void @exit(i32 1) #14
  unreachable
}

; Function Attrs: noinline optnone uwtable
define dso_local signext i16 @readInt16(%"struct.objectir::Field"* %field) #5 {
entry:
  %field.addr = alloca %"struct.objectir::Field"*, align 8
  %type = alloca i32, align 4
  %intField = alloca %"struct.objectir::IntegerField"*, align 8
  store %"struct.objectir::Field"* %field, %"struct.objectir::Field"** %field.addr, align 8
  %0 = load %"struct.objectir::Field"*, %"struct.objectir::Field"** %field.addr, align 8
  %call = call %"struct.objectir::Type"* @_ZN8objectir5Field7getTypeEv(%"struct.objectir::Field"* %0)
  %call1 = call i32 @_ZN8objectir4Type7getCodeEv(%"struct.objectir::Type"* %call)
  store i32 %call1, i32* %type, align 4
  %1 = load i32, i32* %type, align 4
  %cmp = icmp eq i32 %1, 3
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = load %"struct.objectir::Field"*, %"struct.objectir::Field"** %field.addr, align 8
  %3 = bitcast %"struct.objectir::Field"* %2 to %"struct.objectir::IntegerField"*
  store %"struct.objectir::IntegerField"* %3, %"struct.objectir::IntegerField"** %intField, align 8
  %4 = load %"struct.objectir::IntegerField"*, %"struct.objectir::IntegerField"** %intField, align 8
  %value = getelementptr inbounds %"struct.objectir::IntegerField", %"struct.objectir::IntegerField"* %4, i32 0, i32 1
  %5 = load i64, i64* %value, align 8
  %conv = trunc i64 %5 to i16
  ret i16 %conv

if.else:                                          ; preds = %entry
  %6 = getelementptr [53 x i8], [53 x i8]* @.str.6.31, i64 0, i64 0
  %call2 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) @_ZSt4cerr, i8* %6)
  call void @exit(i32 1) #14
  unreachable
}

; Function Attrs: noinline optnone uwtable
define dso_local signext i8 @readInt8(%"struct.objectir::Field"* %field) #5 {
entry:
  %field.addr = alloca %"struct.objectir::Field"*, align 8
  %type = alloca i32, align 4
  %intField = alloca %"struct.objectir::IntegerField"*, align 8
  store %"struct.objectir::Field"* %field, %"struct.objectir::Field"** %field.addr, align 8
  %0 = load %"struct.objectir::Field"*, %"struct.objectir::Field"** %field.addr, align 8
  %call = call %"struct.objectir::Type"* @_ZN8objectir5Field7getTypeEv(%"struct.objectir::Field"* %0)
  %call1 = call i32 @_ZN8objectir4Type7getCodeEv(%"struct.objectir::Type"* %call)
  store i32 %call1, i32* %type, align 4
  %1 = load i32, i32* %type, align 4
  %cmp = icmp eq i32 %1, 3
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = load %"struct.objectir::Field"*, %"struct.objectir::Field"** %field.addr, align 8
  %3 = bitcast %"struct.objectir::Field"* %2 to %"struct.objectir::IntegerField"*
  store %"struct.objectir::IntegerField"* %3, %"struct.objectir::IntegerField"** %intField, align 8
  %4 = load %"struct.objectir::IntegerField"*, %"struct.objectir::IntegerField"** %intField, align 8
  %value = getelementptr inbounds %"struct.objectir::IntegerField", %"struct.objectir::IntegerField"* %4, i32 0, i32 1
  %5 = load i64, i64* %value, align 8
  %conv = trunc i64 %5 to i8
  ret i8 %conv

if.else:                                          ; preds = %entry
  %6 = getelementptr [52 x i8], [52 x i8]* @.str.7.32, i64 0, i64 0
  %call2 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) @_ZSt4cerr, i8* %6)
  call void @exit(i32 1) #14
  unreachable
}

; Function Attrs: noinline optnone uwtable
define dso_local float @readFloat(%"struct.objectir::Field"* %field) #5 {
entry:
  %field.addr = alloca %"struct.objectir::Field"*, align 8
  %type = alloca i32, align 4
  %intField = alloca %"struct.objectir::FloatField"*, align 8
  store %"struct.objectir::Field"* %field, %"struct.objectir::Field"** %field.addr, align 8
  %0 = load %"struct.objectir::Field"*, %"struct.objectir::Field"** %field.addr, align 8
  %call = call %"struct.objectir::Type"* @_ZN8objectir5Field7getTypeEv(%"struct.objectir::Field"* %0)
  %call1 = call i32 @_ZN8objectir4Type7getCodeEv(%"struct.objectir::Type"* %call)
  store i32 %call1, i32* %type, align 4
  %1 = load i32, i32* %type, align 4
  %cmp = icmp eq i32 %1, 4
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = load %"struct.objectir::Field"*, %"struct.objectir::Field"** %field.addr, align 8
  %3 = bitcast %"struct.objectir::Field"* %2 to %"struct.objectir::FloatField"*
  store %"struct.objectir::FloatField"* %3, %"struct.objectir::FloatField"** %intField, align 8
  %4 = load %"struct.objectir::FloatField"*, %"struct.objectir::FloatField"** %intField, align 8
  %value = getelementptr inbounds %"struct.objectir::FloatField", %"struct.objectir::FloatField"* %4, i32 0, i32 1
  %5 = load float, float* %value, align 8
  ret float %5

if.else:                                          ; preds = %entry
  %6 = getelementptr [54 x i8], [54 x i8]* @.str.25, i64 0, i64 0
  %call2 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) @_ZSt4cerr, i8* %6)
  call void @exit(i32 1) #14
  unreachable
}

; Function Attrs: noinline optnone uwtable
define dso_local double @readDouble(%"struct.objectir::Field"* %field) #5 {
entry:
  %field.addr = alloca %"struct.objectir::Field"*, align 8
  %type = alloca i32, align 4
  %intField = alloca %"struct.objectir::DoubleField"*, align 8
  store %"struct.objectir::Field"* %field, %"struct.objectir::Field"** %field.addr, align 8
  %0 = load %"struct.objectir::Field"*, %"struct.objectir::Field"** %field.addr, align 8
  %call = call %"struct.objectir::Type"* @_ZN8objectir5Field7getTypeEv(%"struct.objectir::Field"* %0)
  %call1 = call i32 @_ZN8objectir4Type7getCodeEv(%"struct.objectir::Type"* %call)
  store i32 %call1, i32* %type, align 4
  %1 = load i32, i32* %type, align 4
  %cmp = icmp eq i32 %1, 5
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = load %"struct.objectir::Field"*, %"struct.objectir::Field"** %field.addr, align 8
  %3 = bitcast %"struct.objectir::Field"* %2 to %"struct.objectir::DoubleField"*
  store %"struct.objectir::DoubleField"* %3, %"struct.objectir::DoubleField"** %intField, align 8
  %4 = load %"struct.objectir::DoubleField"*, %"struct.objectir::DoubleField"** %intField, align 8
  %value = getelementptr inbounds %"struct.objectir::DoubleField", %"struct.objectir::DoubleField"* %4, i32 0, i32 1
  %5 = load double, double* %value, align 8
  ret double %5

if.else:                                          ; preds = %entry
  %6 = getelementptr [54 x i8], [54 x i8]* @.str.25, i64 0, i64 0
  %call2 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) @_ZSt4cerr, i8* %6)
  call void @exit(i32 1) #14
  unreachable
}

; Function Attrs: noinline optnone uwtable
define dso_local %"struct.objectir::Object"* @readObject(%"struct.objectir::Field"* %field) #5 {
entry:
  %field.addr = alloca %"struct.objectir::Field"*, align 8
  %type = alloca i32, align 4
  %objField = alloca %"struct.objectir::ObjectField"*, align 8
  store %"struct.objectir::Field"* %field, %"struct.objectir::Field"** %field.addr, align 8
  %0 = load %"struct.objectir::Field"*, %"struct.objectir::Field"** %field.addr, align 8
  %call = call %"struct.objectir::Type"* @_ZN8objectir5Field7getTypeEv(%"struct.objectir::Field"* %0)
  %call1 = call i32 @_ZN8objectir4Type7getCodeEv(%"struct.objectir::Type"* %call)
  store i32 %call1, i32* %type, align 4
  %1 = load i32, i32* %type, align 4
  %cmp = icmp eq i32 %1, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %2 = load %"struct.objectir::Field"*, %"struct.objectir::Field"** %field.addr, align 8
  %3 = bitcast %"struct.objectir::Field"* %2 to %"struct.objectir::ObjectField"*
  store %"struct.objectir::ObjectField"* %3, %"struct.objectir::ObjectField"** %objField, align 8
  %4 = load %"struct.objectir::ObjectField"*, %"struct.objectir::ObjectField"** %objField, align 8
  %value = getelementptr inbounds %"struct.objectir::ObjectField", %"struct.objectir::ObjectField"* %4, i32 0, i32 1
  %5 = load %"struct.objectir::Object"*, %"struct.objectir::Object"** %value, align 8
  ret %"struct.objectir::Object"* %5

if.else:                                          ; preds = %entry
  %6 = getelementptr [54 x i8], [54 x i8]* @.str.25, i64 0, i64 0
  %call2 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc(%"class.std::basic_ostream"* dereferenceable(272) @_ZSt4cerr, i8* %6)
  call void @exit(i32 1) #14
  unreachable
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { noinline norecurse optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline nounwind optnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noinline noreturn nounwind }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { argmemonly nounwind }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { cold noreturn nounwind }
attributes #13 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn nounwind }
attributes #15 = { builtin nounwind }
attributes #16 = { builtin }
attributes #17 = { noreturn }

!llvm.ident = !{!0, !0, !0, !0, !0, !0, !0}
!llvm.module.flags = !{!1}

!0 = !{!"clang version 9.0.0 (tags/RELEASE_900/final)"}
!1 = !{i32 1, !"wchar_size", i32 4}
