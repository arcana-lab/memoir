// clang-format off
#ifndef HANDLE_INST
#define HANDLE_INST(ENUM, FUNC, CLASS) /* NO HANDLING */
#endif
#define HANDLE_INST_(ENUM, FUNC, CLASS) HANDLE_INST(ENUM, FUNC, CLASS)

#ifndef HANDLE_TYPE_INST
#define HANDLE_TYPE_INST(ENUM, FUNC, CLASS) HANDLE_INST(ENUM, FUNC, CLASS)
#endif
#define HANDLE_TYPE_INST_(ENUM, FUNC, CLASS) HANDLE_TYPE_INST(ENUM, FUNC, CLASS)
HANDLE_TYPE_INST_(DEFINE_STRUCT_TYPE, MEMOIR_FUNC(define_struct_type), DefineStructTypeInst)
HANDLE_TYPE_INST_(STRUCT_TYPE, MEMOIR_FUNC(struct_type), StructTypeInst)
HANDLE_TYPE_INST_(TENSOR_TYPE, MEMOIR_FUNC(tensor_type), TensorTypeInst)
HANDLE_TYPE_INST_(STATIC_TENSOR_TYPE, MEMOIR_FUNC(static_tensor_type), StaticTensorTypeInst)
HANDLE_TYPE_INST_(ASSOC_ARRAY_TYPE, MEMOIR_FUNC(assoc_array_type), AssocArrayTypeInst)
HANDLE_TYPE_INST_(SEQUENCE_TYPE, MEMOIR_FUNC(sequence_type), SequenceTypeInst)
HANDLE_TYPE_INST_(REFERENCE_TYPE, MEMOIR_FUNC(ref_type), ReferenceTypeInst)

// Primitive type handling
#ifndef HANDLE_PRIMITIVE_TYPE_INST
#define HANDLE_PRIMITIVE_TYPE_INST(ENUM, FUNC, CLASS) HANDLE_TYPE_INST(ENUM, FUNC, CLASS)
#endif
#define HANDLE_PRIMITIVE_TYPE_INST_(ENUM, FUNC, CLASS) HANDLE_PRIMITIVE_TYPE_INST(ENUM, FUNC, CLASS)
HANDLE_PRIMITIVE_TYPE_INST_(UINT64_TYPE, MEMOIR_FUNC(u64_type), UInt64TypeInst)
HANDLE_PRIMITIVE_TYPE_INST_(UINT32_TYPE, MEMOIR_FUNC(u32_type), UInt32TypeInst)
HANDLE_PRIMITIVE_TYPE_INST_(UINT16_TYPE, MEMOIR_FUNC(u16_type), UInt16TypeInst)
HANDLE_PRIMITIVE_TYPE_INST_(UINT8_TYPE, MEMOIR_FUNC(u8_type), UInt8TypeInst)
HANDLE_PRIMITIVE_TYPE_INST_(INT64_TYPE, MEMOIR_FUNC(i64_type), Int64TypeInst)
HANDLE_PRIMITIVE_TYPE_INST_(INT32_TYPE, MEMOIR_FUNC(i32_type), Int32TypeInst)
HANDLE_PRIMITIVE_TYPE_INST_(INT16_TYPE, MEMOIR_FUNC(i16_type), Int16TypeInst)
HANDLE_PRIMITIVE_TYPE_INST_(INT8_TYPE, MEMOIR_FUNC(i8_type), Int8TypeInst)
HANDLE_PRIMITIVE_TYPE_INST_(BOOL_TYPE, MEMOIR_FUNC(bool_type), BoolTypeInst)
HANDLE_PRIMITIVE_TYPE_INST_(FLOAT_TYPE, MEMOIR_FUNC(f32_type), FloatTypeInst)
HANDLE_PRIMITIVE_TYPE_INST_(DOUBLE_TYPE, MEMOIR_FUNC(f64_type), DoubleTypeInst)
HANDLE_PRIMITIVE_TYPE_INST_(POINTER_TYPE, MEMOIR_FUNC(ptr_type), PointerTypeInst)

#ifndef HANDLE_ALLOC_INST
#define HANDLE_ALLOC_INST(ENUM, FUNC, CLASS) HANDLE_INST(ENUM, FUNC, CLASS)
#endif
#define HANDLE_ALLOC_INST_(ENUM, FUNC, CLASS) HANDLE_ALLOC_INST(ENUM, FUNC, CLASS)
HANDLE_ALLOC_INST_(ALLOCATE_STRUCT, MEMOIR_FUNC(allocate_struct), StructAllocInst)

#ifndef HANDLE_COLLECTION_ALLOC_INST
#define HANDLE_COLLECTION_ALLOC_INST(ENUM, FUNC, CLASS) HANDLE_ALLOC_INST(ENUM, FUNC, CLASS)
#endif
#define HANDLE_COLLECTION_ALLOC_INST_(ENUM, FUNC, CLASS) HANDLE_COLLECTION_ALLOC_INST(ENUM, FUNC, CLASS)
HANDLE_COLLECTION_ALLOC_INST_(ALLOCATE_TENSOR, MEMOIR_FUNC(allocate_tensor), TensorAllocInst)
HANDLE_COLLECTION_ALLOC_INST_(ALLOCATE_ASSOC_ARRAY, MEMOIR_FUNC(allocate_assoc_array), AssocArrayAllocInst)
HANDLE_COLLECTION_ALLOC_INST_(ALLOCATE_SEQUENCE, MEMOIR_FUNC(allocate_sequence), SequenceAllocInst)


#ifndef HANDLE_ACCESS_INST
#define HANDLE_ACCESS_INST(ENUM, FUNC, CLASS) HANDLE_INST(ENUM, FUNC, CLASS)
#endif
#define HANDLE_ACCESS_INST_(ENUM, FUNC, CLASS) HANDLE_ACCESS_INST(ENUM, FUNC, CLASS)

#ifndef HANDLE_READ_INST
#define HANDLE_READ_INST(ENUM, FUNC, CLASS) HANDLE_ACCESS_INST(ENUM, FUNC, CLASS)
#endif
#define HANDLE_READ_INST_(ENUM, FUNC, CLASS) HANDLE_READ_INST(ENUM, FUNC, CLASS)

#ifndef HANDLE_STRUCT_READ_INST
#define HANDLE_STRUCT_READ_INST(ENUM, FUNC, CLASS) HANDLE_READ_INST(ENUM, FUNC, CLASS)
#endif
#define HANDLE_STRUCT_READ_INST_(ENUM, FUNC, CLASS) HANDLE_STRUCT_READ_INST(ENUM, FUNC, CLASS)
HANDLE_STRUCT_READ_INST_(STRUCT_READ_UINT64, MEMOIR_FUNC(struct_read_u64), StructReadInst)
HANDLE_STRUCT_READ_INST_(STRUCT_READ_UINT32, MEMOIR_FUNC(struct_read_u32), StructReadInst)
HANDLE_STRUCT_READ_INST_(STRUCT_READ_UINT16, MEMOIR_FUNC(struct_read_u16), StructReadInst)
HANDLE_STRUCT_READ_INST_(STRUCT_READ_UINT8, MEMOIR_FUNC(struct_read_u8), StructReadInst)
HANDLE_STRUCT_READ_INST_(STRUCT_READ_INT64, MEMOIR_FUNC(struct_read_i64), StructReadInst)
HANDLE_STRUCT_READ_INST_(STRUCT_READ_INT32, MEMOIR_FUNC(struct_read_i32), StructReadInst)
HANDLE_STRUCT_READ_INST_(STRUCT_READ_INT16, MEMOIR_FUNC(struct_read_i16), StructReadInst)
HANDLE_STRUCT_READ_INST_(STRUCT_READ_INT8, MEMOIR_FUNC(struct_read_i8), StructReadInst)
HANDLE_STRUCT_READ_INST_(STRUCT_READ_DOUBLE, MEMOIR_FUNC(struct_read_f64), StructReadInst)
HANDLE_STRUCT_READ_INST_(STRUCT_READ_FLOAT, MEMOIR_FUNC(struct_read_f32), StructReadInst)
HANDLE_STRUCT_READ_INST_(STRUCT_READ_PTR, MEMOIR_FUNC(struct_read_ptr), StructReadInst)
HANDLE_STRUCT_READ_INST_(STRUCT_READ_STRUCT_REF, MEMOIR_FUNC(struct_read_struct_ref), StructReadInst)
HANDLE_STRUCT_READ_INST_(STRUCT_READ_COLLECTION_REF, MEMOIR_FUNC(struct_read_collection_ref), StructReadInst)

#ifndef HANDLE_INDEX_READ_INST
#define HANDLE_INDEX_READ_INST(ENUM, FUNC, CLASS) HANDLE_READ_INST(ENUM, FUNC, CLASS)
#endif
#define HANDLE_INDEX_READ_INST_(ENUM, FUNC, CLASS) HANDLE_INDEX_READ_INST(ENUM, FUNC, CLASS)
HANDLE_INDEX_READ_INST_(INDEX_READ_UINT64, MEMOIR_FUNC(index_read_u64), IndexReadInst)
HANDLE_INDEX_READ_INST_(INDEX_READ_UINT32, MEMOIR_FUNC(index_read_u32), IndexReadInst)
HANDLE_INDEX_READ_INST_(INDEX_READ_UINT16, MEMOIR_FUNC(index_read_u16), IndexReadInst)
HANDLE_INDEX_READ_INST_(INDEX_READ_UINT8, MEMOIR_FUNC(index_read_u8), IndexReadInst)
HANDLE_INDEX_READ_INST_(INDEX_READ_INT64, MEMOIR_FUNC(index_read_i64), IndexReadInst)
HANDLE_INDEX_READ_INST_(INDEX_READ_INT32, MEMOIR_FUNC(index_read_i32), IndexReadInst)
HANDLE_INDEX_READ_INST_(INDEX_READ_INT16, MEMOIR_FUNC(index_read_i16), IndexReadInst)
HANDLE_INDEX_READ_INST_(INDEX_READ_INT8, MEMOIR_FUNC(index_read_i8), IndexReadInst)
HANDLE_INDEX_READ_INST_(INDEX_READ_DOUBLE, MEMOIR_FUNC(index_read_f64), IndexReadInst)
HANDLE_INDEX_READ_INST_(INDEX_READ_FLOAT, MEMOIR_FUNC(index_read_f32), IndexReadInst)
HANDLE_INDEX_READ_INST_(INDEX_READ_PTR, MEMOIR_FUNC(index_read_ptr), IndexReadInst)
HANDLE_INDEX_READ_INST_(INDEX_READ_STRUCT_REF, MEMOIR_FUNC(index_read_struct_ref), IndexReadInst)
HANDLE_INDEX_READ_INST_(INDEX_READ_COLLECTION_REF, MEMOIR_FUNC(index_read_collection_ref), IndexReadInst)

#ifndef HANDLE_ASSOC_READ_INST
#define HANDLE_ASSOC_READ_INST(ENUM, FUNC, CLASS) HANDLE_READ_INST(ENUM, FUNC, CLASS)
#endif
#define HANDLE_ASSOC_READ_INST_(ENUM, FUNC, CLASS) HANDLE_ASSOC_READ_INST(ENUM, FUNC, CLASS)
HANDLE_ASSOC_READ_INST_(ASSOC_READ_UINT64, MEMOIR_FUNC(assoc_read_u64), AssocReadInst)
HANDLE_ASSOC_READ_INST_(ASSOC_READ_UINT32, MEMOIR_FUNC(assoc_read_u32), AssocReadInst)
HANDLE_ASSOC_READ_INST_(ASSOC_READ_UINT16, MEMOIR_FUNC(assoc_read_u16), AssocReadInst)
HANDLE_ASSOC_READ_INST_(ASSOC_READ_UINT8, MEMOIR_FUNC(assoc_read_u8), AssocReadInst)
HANDLE_ASSOC_READ_INST_(ASSOC_READ_INT64, MEMOIR_FUNC(assoc_read_i64), AssocReadInst)
HANDLE_ASSOC_READ_INST_(ASSOC_READ_INT32, MEMOIR_FUNC(assoc_read_i32), AssocReadInst)
HANDLE_ASSOC_READ_INST_(ASSOC_READ_INT16, MEMOIR_FUNC(assoc_read_i16), AssocReadInst)
HANDLE_ASSOC_READ_INST_(ASSOC_READ_INT8, MEMOIR_FUNC(assoc_read_i8), AssocReadInst)
HANDLE_ASSOC_READ_INST_(ASSOC_READ_DOUBLE, MEMOIR_FUNC(assoc_read_f64), AssocReadInst)
HANDLE_ASSOC_READ_INST_(ASSOC_READ_FLOAT, MEMOIR_FUNC(assoc_read_f32), AssocReadInst)
HANDLE_ASSOC_READ_INST_(ASSOC_READ_PTR, MEMOIR_FUNC(assoc_read_ptr), AssocReadInst)
HANDLE_ASSOC_READ_INST_(ASSOC_READ_STRUCT_REF, MEMOIR_FUNC(assoc_read_struct_ref), AssocReadInst)
HANDLE_ASSOC_READ_INST_(ASSOC_READ_COLLECTION_REF, MEMOIR_FUNC(assoc_read_collection_ref), AssocReadInst)

#ifndef HANDLE_WRITE_INST
#define HANDLE_WRITE_INST(ENUM, FUNC, CLASS) HANDLE_ACCESS_INST(ENUM, FUNC, CLASS)
#endif
#define HANDLE_WRITE_INST_(ENUM, FUNC, CLASS) HANDLE_WRITE_INST(ENUM, FUNC, CLASS)

#ifndef HANDLE_STRUCT_WRITE_INST
#define HANDLE_STRUCT_WRITE_INST(ENUM, FUNC, CLASS) HANDLE_WRITE_INST(ENUM, FUNC, CLASS)
#endif
#define HANDLE_STRUCT_WRITE_INST_(ENUM, FUNC, CLASS) HANDLE_STRUCT_WRITE_INST(ENUM, FUNC, CLASS)
HANDLE_STRUCT_WRITE_INST_(STRUCT_WRITE_UINT64, MEMOIR_FUNC(struct_write_u64), StructWriteInst)
HANDLE_STRUCT_WRITE_INST_(STRUCT_WRITE_UINT32, MEMOIR_FUNC(struct_write_u32), StructWriteInst)
HANDLE_STRUCT_WRITE_INST_(STRUCT_WRITE_UINT16, MEMOIR_FUNC(struct_write_u16), StructWriteInst)
HANDLE_STRUCT_WRITE_INST_(STRUCT_WRITE_UINT8, MEMOIR_FUNC(struct_write_u8), StructWriteInst)
HANDLE_STRUCT_WRITE_INST_(STRUCT_WRITE_INT64, MEMOIR_FUNC(struct_write_i64), StructWriteInst)
HANDLE_STRUCT_WRITE_INST_(STRUCT_WRITE_INT32, MEMOIR_FUNC(struct_write_i32), StructWriteInst)
HANDLE_STRUCT_WRITE_INST_(STRUCT_WRITE_INT16, MEMOIR_FUNC(struct_write_i16), StructWriteInst)
HANDLE_STRUCT_WRITE_INST_(STRUCT_WRITE_INT8, MEMOIR_FUNC(struct_write_i8), StructWriteInst)
HANDLE_STRUCT_WRITE_INST_(STRUCT_WRITE_DOUBLE, MEMOIR_FUNC(struct_write_f64), StructWriteInst)
HANDLE_STRUCT_WRITE_INST_(STRUCT_WRITE_PTR, MEMOIR_FUNC(struct_write_ptr), StructWriteInst)
HANDLE_STRUCT_WRITE_INST_(STRUCT_WRITE_FLOAT, MEMOIR_FUNC(struct_write_f32), StructWriteInst)
HANDLE_STRUCT_WRITE_INST_(STRUCT_WRITE_STRUCT_REF, MEMOIR_FUNC(struct_write_struct_ref), StructWriteInst)
HANDLE_STRUCT_WRITE_INST_(STRUCT_WRITE_COLLECTION_REF, MEMOIR_FUNC(struct_write_collection_ref), StructWriteInst)

#ifndef HANDLE_INDEX_WRITE_INST
#define HANDLE_INDEX_WRITE_INST(ENUM, FUNC, CLASS) HANDLE_WRITE_INST(ENUM, FUNC, CLASS)
#endif
#define HANDLE_INDEX_WRITE_INST_(ENUM, FUNC, CLASS) HANDLE_INDEX_WRITE_INST(ENUM, FUNC, CLASS)
HANDLE_INDEX_WRITE_INST_(INDEX_WRITE_UINT64, MEMOIR_FUNC(index_write_u64), IndexWriteInst)
HANDLE_INDEX_WRITE_INST_(INDEX_WRITE_UINT32, MEMOIR_FUNC(index_write_u32), IndexWriteInst)
HANDLE_INDEX_WRITE_INST_(INDEX_WRITE_UINT16, MEMOIR_FUNC(index_write_u16), IndexWriteInst)
HANDLE_INDEX_WRITE_INST_(INDEX_WRITE_UINT8, MEMOIR_FUNC(index_write_u8), IndexWriteInst)
HANDLE_INDEX_WRITE_INST_(INDEX_WRITE_INT64, MEMOIR_FUNC(index_write_i64), IndexWriteInst)
HANDLE_INDEX_WRITE_INST_(INDEX_WRITE_INT32, MEMOIR_FUNC(index_write_i32), IndexWriteInst)
HANDLE_INDEX_WRITE_INST_(INDEX_WRITE_INT16, MEMOIR_FUNC(index_write_i16), IndexWriteInst)
HANDLE_INDEX_WRITE_INST_(INDEX_WRITE_INT8, MEMOIR_FUNC(index_write_i8), IndexWriteInst)
HANDLE_INDEX_WRITE_INST_(INDEX_WRITE_DOUBLE, MEMOIR_FUNC(index_write_f64), IndexWriteInst)
HANDLE_INDEX_WRITE_INST_(INDEX_WRITE_FLOAT, MEMOIR_FUNC(index_write_f32), IndexWriteInst)
HANDLE_INDEX_WRITE_INST_(INDEX_WRITE_PTR, MEMOIR_FUNC(index_write_ptr), IndexWriteInst)
HANDLE_INDEX_WRITE_INST_(INDEX_WRITE_STRUCT_REF, MEMOIR_FUNC(index_write_struct_ref), IndexWriteInst)
HANDLE_INDEX_WRITE_INST_(INDEX_WRITE_COLLECTION_REF, MEMOIR_FUNC(index_write_collection_ref), IndexWriteInst)

#ifndef HANDLE_ASSOC_WRITE_INST
#define HANDLE_ASSOC_WRITE_INST(ENUM, FUNC, CLASS) HANDLE_WRITE_INST(ENUM, FUNC, CLASS)
#endif
#define HANDLE_ASSOC_WRITE_INST_(ENUM, FUNC, CLASS) HANDLE_ASSOC_WRITE_INST(ENUM, FUNC, CLASS)
HANDLE_ASSOC_WRITE_INST_(ASSOC_WRITE_UINT64, MEMOIR_FUNC(assoc_write_u64), AssocWriteInst)
HANDLE_ASSOC_WRITE_INST_(ASSOC_WRITE_UINT32, MEMOIR_FUNC(assoc_write_u32), AssocWriteInst)
HANDLE_ASSOC_WRITE_INST_(ASSOC_WRITE_UINT16, MEMOIR_FUNC(assoc_write_u16), AssocWriteInst)
HANDLE_ASSOC_WRITE_INST_(ASSOC_WRITE_UINT8, MEMOIR_FUNC(assoc_write_u8), AssocWriteInst)
HANDLE_ASSOC_WRITE_INST_(ASSOC_WRITE_INT64, MEMOIR_FUNC(assoc_write_i64), AssocWriteInst)
HANDLE_ASSOC_WRITE_INST_(ASSOC_WRITE_INT32, MEMOIR_FUNC(assoc_write_i32), AssocWriteInst)
HANDLE_ASSOC_WRITE_INST_(ASSOC_WRITE_INT16, MEMOIR_FUNC(assoc_write_i16), AssocWriteInst)
HANDLE_ASSOC_WRITE_INST_(ASSOC_WRITE_INT8, MEMOIR_FUNC(assoc_write_i8), AssocWriteInst)
HANDLE_ASSOC_WRITE_INST_(ASSOC_WRITE_DOUBLE, MEMOIR_FUNC(assoc_write_f64), AssocWriteInst)
HANDLE_ASSOC_WRITE_INST_(ASSOC_WRITE_FLOAT, MEMOIR_FUNC(assoc_write_f32), AssocWriteInst)
HANDLE_ASSOC_WRITE_INST_(ASSOC_WRITE_PTR, MEMOIR_FUNC(assoc_write_ptr), AssocWriteInst)
HANDLE_ASSOC_WRITE_INST_(ASSOC_WRITE_STRUCT_REF, MEMOIR_FUNC(assoc_write_struct_ref), AssocWriteInst)
HANDLE_ASSOC_WRITE_INST_(ASSOC_WRITE_COLLECTION_REF, MEMOIR_FUNC(assoc_write_collection_ref), AssocWriteInst)

#ifndef HANDLE_GET_INST
#define HANDLE_GET_INST(ENUM, FUNC, CLASS) HANDLE_ACCESS_INST(ENUM, FUNC, CLASS)
#endif
#define HANDLE_GET_INST_(ENUM, FUNC, CLASS) HANDLE_GET_INST(ENUM, FUNC, CLASS)

#ifndef HANDLE_STRUCT_GET_INST
#define HANDLE_STRUCT_GET_INST(ENUM, FUNC, CLASS) HANDLE_GET_INST(ENUM, FUNC, CLASS)
#endif
#define HANDLE_STRUCT_GET_INST_(ENUM, FUNC, CLASS) HANDLE_STRUCT_GET_INST(ENUM, FUNC, CLASS)
HANDLE_STRUCT_GET_INST_(STRUCT_GET_STRUCT, MEMOIR_FUNC(struct_get_struct), StructGetInst)
HANDLE_STRUCT_GET_INST_(STRUCT_GET_COLLECTION, MEMOIR_FUNC(struct_get_collection), StructGetInst)

#ifndef HANDLE_INDEX_GET_INST
#define HANDLE_INDEX_GET_INST(ENUM, FUNC, CLASS) HANDLE_GET_INST(ENUM, FUNC, CLASS)
#endif
#define HANDLE_INDEX_GET_INST_(ENUM, FUNC, CLASS) HANDLE_INDEX_GET_INST(ENUM, FUNC, CLASS)
HANDLE_INDEX_GET_INST_(INDEX_GET_STRUCT, MEMOIR_FUNC(index_get_struct), IndexGetInst)
HANDLE_INDEX_GET_INST_(INDEX_GET_COLLECTION, MEMOIR_FUNC(index_get_collection), IndexGetInst)

#ifndef HANDLE_ASSOC_GET_INST
#define HANDLE_ASSOC_GET_INST(ENUM, FUNC, CLASS) HANDLE_GET_INST(ENUM, FUNC, CLASS)
#endif
#define HANDLE_ASSOC_GET_INST_(ENUM, FUNC, CLASS) HANDLE_ASSOC_GET_INST(ENUM, FUNC, CLASS)
HANDLE_ASSOC_GET_INST_(ASSOC_GET_STRUCT, MEMOIR_FUNC(assoc_get_struct), AssocGetInst)
HANDLE_ASSOC_GET_INST_(ASSOC_GET_COLLECTION, MEMOIR_FUNC(assoc_get_collection), AssocGetInst)

/*
 * Struct and collection operations
 */
HANDLE_INST_(DELETE_STRUCT, MEMOIR_FUNC(delete_struct), DeleteStructInst)
HANDLE_INST_(DELETE_COLLECTION, MEMOIR_FUNC(delete_collection), DeleteCollectionInst)
HANDLE_INST_(JOIN, MEMOIR_FUNC(join), JoinInst)
HANDLE_INST_(SLICE, MEMOIR_FUNC(get_slice), SliceInst)

/*
 * Type Checking
 */
HANDLE_INST_(ASSERT_STRUCT_TYPE, MEMOIR_FUNC(assert_struct_type), AssertStructTypeInst)
HANDLE_INST_(ASSERT_COLLECTION_TYPE, MEMOIR_FUNC(assert_collection_type), AssertCollectionTypeInst)
HANDLE_INST_(SET_RETURN_TYPE, MEMOIR_FUNC(set_return_type), ReturnTypeInst)
HANDLE_INST_(SIZE, MEMOIR_FUNC(size), SizeInst)


#undef HANDLE_INST
#undef HANDLE_TYPE_INST
#undef HANDLE_PRIMITIVE_TYPE_INST
#undef HANDLE_ALLOC_INST
#undef HANDLE_COLLECTION_ALLOC_INST
#undef HANDLE_ACCESS_INST
#undef HANDLE_READ_INST
#undef HANDLE_STRUCT_READ_INST
#undef HANDLE_INDEX_READ_INST
#undef HANDLE_ASSOC_READ_INST
#undef HANDLE_WRITE_INST
#undef HANDLE_STRUCT_WRITE_INST
#undef HANDLE_INDEX_WRITE_INST
#undef HANDLE_ASSOC_WRITE_INST
#undef HANDLE_GET_INST
#undef HANDLE_STRUCT_GET_INST
#undef HANDLE_INDEX_GET_INST
#undef HANDLE_ASSOC_GET_INST
// clang-format on