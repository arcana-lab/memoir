// clang-format off
#ifndef HANDLE_INST
#define HANDLE_INST(ENUM, FUNC, CLASS) /* NO HANDLING */
#endif
#define HANDLE_INST_(ENUM, FUNC, CLASS) HANDLE_INST(ENUM, FUNC, CLASS)

#ifndef HANDLE_ACCESS_INST
#define HANDLE_ACCESS_INST(ENUM, FUNC, CLASS) HANDLE_INST_(ENUM, FUNC, CLASS)
#endif
#define HANDLE_ACCESS_INST_(ENUM, FUNC, CLASS) HANDLE_ACCESS_INST(ENUM, FUNC, CLASS)

HANDLE_ACCESS_INST_(MUT_INSERT, MUT_FUNC(insert), MutInsertInst)
HANDLE_ACCESS_INST_(MUT_REMOVE, MUT_FUNC(remove), MutRemoveInst)
HANDLE_ACCESS_INST_(MUT_CLEAR, MUT_FUNC(clear), MutClearInst)


#ifndef HANDLE_WRITE_INST
#define HANDLE_WRITE_INST(ENUM, FUNC, CLASS) HANDLE_ACCESS_INST_(ENUM, FUNC, CLASS)
#endif
#define HANDLE_WRITE_INST_(ENUM, FUNC, CLASS) HANDLE_WRITE_INST(ENUM, FUNC, CLASS)

HANDLE_WRITE_INST_(MUT_WRITE_UINT64, MUT_FUNC(write_u64), MutWriteInst)
HANDLE_WRITE_INST_(MUT_WRITE_UINT32, MUT_FUNC(write_u32), MutWriteInst)
HANDLE_WRITE_INST_(MUT_WRITE_UINT16, MUT_FUNC(write_u16), MutWriteInst)
HANDLE_WRITE_INST_(MUT_WRITE_UINT8, MUT_FUNC(write_u8), MutWriteInst)
HANDLE_WRITE_INST_(MUT_WRITE_UINT2, MUT_FUNC(write_u2), MutWriteInst)
HANDLE_WRITE_INST_(MUT_WRITE_INT64, MUT_FUNC(write_i64), MutWriteInst)
HANDLE_WRITE_INST_(MUT_WRITE_INT32, MUT_FUNC(write_i32), MutWriteInst)
HANDLE_WRITE_INST_(MUT_WRITE_INT16, MUT_FUNC(write_i16), MutWriteInst)
HANDLE_WRITE_INST_(MUT_WRITE_INT8, MUT_FUNC(write_i8), MutWriteInst)
HANDLE_WRITE_INST_(MUT_WRITE_INT2, MUT_FUNC(write_i2), MutWriteInst)
HANDLE_WRITE_INST_(MUT_WRITE_BOOL, MUT_FUNC(write_boolean), MutWriteInst)
HANDLE_WRITE_INST_(MUT_WRITE_DOUBLE, MUT_FUNC(write_f64), MutWriteInst)
HANDLE_WRITE_INST_(MUT_WRITE_FLOAT, MUT_FUNC(write_f32), MutWriteInst)
HANDLE_WRITE_INST_(MUT_WRITE_PTR, MUT_FUNC(write_ptr), MutWriteInst)
HANDLE_WRITE_INST_(MUT_WRITE_REF, MUT_FUNC(write_ref), MutWriteInst)



#undef HANDLE_INST
#undef HANDLE_ACCESS_INST
#undef HANDLE_WRITE_INST

// clang-format on